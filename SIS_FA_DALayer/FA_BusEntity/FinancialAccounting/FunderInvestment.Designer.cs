//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5420
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace FA_BusEntity.FinancialAccounting {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("FunderInvestment")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class FunderInvestment : global::System.Data.DataSet {
        
        private FA_FUNDER_MSTDataTable tableFA_FUNDER_MST;
        
        private FA_FUNDER_TRAN_MSTDataTable tableFA_FUNDER_TRAN_MST;
        
        private FA_FUNDER_TRAN_DTLDataTable tableFA_FUNDER_TRAN_DTL;
        
        private FA_INVESTMENT_MASTERDataTable tableFA_INVESTMENT_MASTER;
        
        private FA_INVESTMENT_TRAN_HDRDataTable tableFA_INVESTMENT_TRAN_HDR;
        
        private FA_INVESTMENT_TRAN_DTLDataTable tableFA_INVESTMENT_TRAN_DTL;
        
        private FA_INVESTMENT_TRAN_DTL_OTHDataTable tableFA_INVESTMENT_TRAN_DTL_OTH;
        
        private FA_INVESTMENT_TRAN_ROIDataTable tableFA_INVESTMENT_TRAN_ROI;
        
        private FA_FUNDER_LOADING_MSTDataTable tableFA_FUNDER_LOADING_MST;
        
        private FA_FUNDER_INT_DUEDataTable tableFA_FUNDER_INT_DUE;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public FunderInvestment() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected FunderInvestment(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["FA_FUNDER_MST"] != null)) {
                    base.Tables.Add(new FA_FUNDER_MSTDataTable(ds.Tables["FA_FUNDER_MST"]));
                }
                if ((ds.Tables["FA_FUNDER_TRAN_MST"] != null)) {
                    base.Tables.Add(new FA_FUNDER_TRAN_MSTDataTable(ds.Tables["FA_FUNDER_TRAN_MST"]));
                }
                if ((ds.Tables["FA_FUNDER_TRAN_DTL"] != null)) {
                    base.Tables.Add(new FA_FUNDER_TRAN_DTLDataTable(ds.Tables["FA_FUNDER_TRAN_DTL"]));
                }
                if ((ds.Tables["FA_INVESTMENT_MASTER"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_MASTERDataTable(ds.Tables["FA_INVESTMENT_MASTER"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_HDR"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_HDRDataTable(ds.Tables["FA_INVESTMENT_TRAN_HDR"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_DTL"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_DTLDataTable(ds.Tables["FA_INVESTMENT_TRAN_DTL"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_DTL_OTH"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_DTL_OTHDataTable(ds.Tables["FA_INVESTMENT_TRAN_DTL_OTH"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_ROI"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_ROIDataTable(ds.Tables["FA_INVESTMENT_TRAN_ROI"]));
                }
                if ((ds.Tables["FA_FUNDER_LOADING_MST"] != null)) {
                    base.Tables.Add(new FA_FUNDER_LOADING_MSTDataTable(ds.Tables["FA_FUNDER_LOADING_MST"]));
                }
                if ((ds.Tables["FA_FUNDER_INT_DUE"] != null)) {
                    base.Tables.Add(new FA_FUNDER_INT_DUEDataTable(ds.Tables["FA_FUNDER_INT_DUE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_FUNDER_MSTDataTable FA_FUNDER_MST {
            get {
                return this.tableFA_FUNDER_MST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_FUNDER_TRAN_MSTDataTable FA_FUNDER_TRAN_MST {
            get {
                return this.tableFA_FUNDER_TRAN_MST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_FUNDER_TRAN_DTLDataTable FA_FUNDER_TRAN_DTL {
            get {
                return this.tableFA_FUNDER_TRAN_DTL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_INVESTMENT_MASTERDataTable FA_INVESTMENT_MASTER {
            get {
                return this.tableFA_INVESTMENT_MASTER;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_INVESTMENT_TRAN_HDRDataTable FA_INVESTMENT_TRAN_HDR {
            get {
                return this.tableFA_INVESTMENT_TRAN_HDR;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_INVESTMENT_TRAN_DTLDataTable FA_INVESTMENT_TRAN_DTL {
            get {
                return this.tableFA_INVESTMENT_TRAN_DTL;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_INVESTMENT_TRAN_DTL_OTHDataTable FA_INVESTMENT_TRAN_DTL_OTH {
            get {
                return this.tableFA_INVESTMENT_TRAN_DTL_OTH;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_INVESTMENT_TRAN_ROIDataTable FA_INVESTMENT_TRAN_ROI {
            get {
                return this.tableFA_INVESTMENT_TRAN_ROI;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_FUNDER_LOADING_MSTDataTable FA_FUNDER_LOADING_MST {
            get {
                return this.tableFA_FUNDER_LOADING_MST;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public FA_FUNDER_INT_DUEDataTable FA_FUNDER_INT_DUE {
            get {
                return this.tableFA_FUNDER_INT_DUE;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            FunderInvestment cln = ((FunderInvestment)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["FA_FUNDER_MST"] != null)) {
                    base.Tables.Add(new FA_FUNDER_MSTDataTable(ds.Tables["FA_FUNDER_MST"]));
                }
                if ((ds.Tables["FA_FUNDER_TRAN_MST"] != null)) {
                    base.Tables.Add(new FA_FUNDER_TRAN_MSTDataTable(ds.Tables["FA_FUNDER_TRAN_MST"]));
                }
                if ((ds.Tables["FA_FUNDER_TRAN_DTL"] != null)) {
                    base.Tables.Add(new FA_FUNDER_TRAN_DTLDataTable(ds.Tables["FA_FUNDER_TRAN_DTL"]));
                }
                if ((ds.Tables["FA_INVESTMENT_MASTER"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_MASTERDataTable(ds.Tables["FA_INVESTMENT_MASTER"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_HDR"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_HDRDataTable(ds.Tables["FA_INVESTMENT_TRAN_HDR"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_DTL"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_DTLDataTable(ds.Tables["FA_INVESTMENT_TRAN_DTL"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_DTL_OTH"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_DTL_OTHDataTable(ds.Tables["FA_INVESTMENT_TRAN_DTL_OTH"]));
                }
                if ((ds.Tables["FA_INVESTMENT_TRAN_ROI"] != null)) {
                    base.Tables.Add(new FA_INVESTMENT_TRAN_ROIDataTable(ds.Tables["FA_INVESTMENT_TRAN_ROI"]));
                }
                if ((ds.Tables["FA_FUNDER_LOADING_MST"] != null)) {
                    base.Tables.Add(new FA_FUNDER_LOADING_MSTDataTable(ds.Tables["FA_FUNDER_LOADING_MST"]));
                }
                if ((ds.Tables["FA_FUNDER_INT_DUE"] != null)) {
                    base.Tables.Add(new FA_FUNDER_INT_DUEDataTable(ds.Tables["FA_FUNDER_INT_DUE"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableFA_FUNDER_MST = ((FA_FUNDER_MSTDataTable)(base.Tables["FA_FUNDER_MST"]));
            if ((initTable == true)) {
                if ((this.tableFA_FUNDER_MST != null)) {
                    this.tableFA_FUNDER_MST.InitVars();
                }
            }
            this.tableFA_FUNDER_TRAN_MST = ((FA_FUNDER_TRAN_MSTDataTable)(base.Tables["FA_FUNDER_TRAN_MST"]));
            if ((initTable == true)) {
                if ((this.tableFA_FUNDER_TRAN_MST != null)) {
                    this.tableFA_FUNDER_TRAN_MST.InitVars();
                }
            }
            this.tableFA_FUNDER_TRAN_DTL = ((FA_FUNDER_TRAN_DTLDataTable)(base.Tables["FA_FUNDER_TRAN_DTL"]));
            if ((initTable == true)) {
                if ((this.tableFA_FUNDER_TRAN_DTL != null)) {
                    this.tableFA_FUNDER_TRAN_DTL.InitVars();
                }
            }
            this.tableFA_INVESTMENT_MASTER = ((FA_INVESTMENT_MASTERDataTable)(base.Tables["FA_INVESTMENT_MASTER"]));
            if ((initTable == true)) {
                if ((this.tableFA_INVESTMENT_MASTER != null)) {
                    this.tableFA_INVESTMENT_MASTER.InitVars();
                }
            }
            this.tableFA_INVESTMENT_TRAN_HDR = ((FA_INVESTMENT_TRAN_HDRDataTable)(base.Tables["FA_INVESTMENT_TRAN_HDR"]));
            if ((initTable == true)) {
                if ((this.tableFA_INVESTMENT_TRAN_HDR != null)) {
                    this.tableFA_INVESTMENT_TRAN_HDR.InitVars();
                }
            }
            this.tableFA_INVESTMENT_TRAN_DTL = ((FA_INVESTMENT_TRAN_DTLDataTable)(base.Tables["FA_INVESTMENT_TRAN_DTL"]));
            if ((initTable == true)) {
                if ((this.tableFA_INVESTMENT_TRAN_DTL != null)) {
                    this.tableFA_INVESTMENT_TRAN_DTL.InitVars();
                }
            }
            this.tableFA_INVESTMENT_TRAN_DTL_OTH = ((FA_INVESTMENT_TRAN_DTL_OTHDataTable)(base.Tables["FA_INVESTMENT_TRAN_DTL_OTH"]));
            if ((initTable == true)) {
                if ((this.tableFA_INVESTMENT_TRAN_DTL_OTH != null)) {
                    this.tableFA_INVESTMENT_TRAN_DTL_OTH.InitVars();
                }
            }
            this.tableFA_INVESTMENT_TRAN_ROI = ((FA_INVESTMENT_TRAN_ROIDataTable)(base.Tables["FA_INVESTMENT_TRAN_ROI"]));
            if ((initTable == true)) {
                if ((this.tableFA_INVESTMENT_TRAN_ROI != null)) {
                    this.tableFA_INVESTMENT_TRAN_ROI.InitVars();
                }
            }
            this.tableFA_FUNDER_LOADING_MST = ((FA_FUNDER_LOADING_MSTDataTable)(base.Tables["FA_FUNDER_LOADING_MST"]));
            if ((initTable == true)) {
                if ((this.tableFA_FUNDER_LOADING_MST != null)) {
                    this.tableFA_FUNDER_LOADING_MST.InitVars();
                }
            }
            this.tableFA_FUNDER_INT_DUE = ((FA_FUNDER_INT_DUEDataTable)(base.Tables["FA_FUNDER_INT_DUE"]));
            if ((initTable == true)) {
                if ((this.tableFA_FUNDER_INT_DUE != null)) {
                    this.tableFA_FUNDER_INT_DUE.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "FunderInvestment";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/FunderInvestment.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableFA_FUNDER_MST = new FA_FUNDER_MSTDataTable();
            base.Tables.Add(this.tableFA_FUNDER_MST);
            this.tableFA_FUNDER_TRAN_MST = new FA_FUNDER_TRAN_MSTDataTable();
            base.Tables.Add(this.tableFA_FUNDER_TRAN_MST);
            this.tableFA_FUNDER_TRAN_DTL = new FA_FUNDER_TRAN_DTLDataTable();
            base.Tables.Add(this.tableFA_FUNDER_TRAN_DTL);
            this.tableFA_INVESTMENT_MASTER = new FA_INVESTMENT_MASTERDataTable();
            base.Tables.Add(this.tableFA_INVESTMENT_MASTER);
            this.tableFA_INVESTMENT_TRAN_HDR = new FA_INVESTMENT_TRAN_HDRDataTable();
            base.Tables.Add(this.tableFA_INVESTMENT_TRAN_HDR);
            this.tableFA_INVESTMENT_TRAN_DTL = new FA_INVESTMENT_TRAN_DTLDataTable();
            base.Tables.Add(this.tableFA_INVESTMENT_TRAN_DTL);
            this.tableFA_INVESTMENT_TRAN_DTL_OTH = new FA_INVESTMENT_TRAN_DTL_OTHDataTable();
            base.Tables.Add(this.tableFA_INVESTMENT_TRAN_DTL_OTH);
            this.tableFA_INVESTMENT_TRAN_ROI = new FA_INVESTMENT_TRAN_ROIDataTable();
            base.Tables.Add(this.tableFA_INVESTMENT_TRAN_ROI);
            this.tableFA_FUNDER_LOADING_MST = new FA_FUNDER_LOADING_MSTDataTable();
            base.Tables.Add(this.tableFA_FUNDER_LOADING_MST);
            this.tableFA_FUNDER_INT_DUE = new FA_FUNDER_INT_DUEDataTable();
            base.Tables.Add(this.tableFA_FUNDER_INT_DUE);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_FUNDER_MST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_FUNDER_TRAN_MST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_FUNDER_TRAN_DTL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_INVESTMENT_MASTER() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_INVESTMENT_TRAN_HDR() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_INVESTMENT_TRAN_DTL() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_INVESTMENT_TRAN_DTL_OTH() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_INVESTMENT_TRAN_ROI() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_FUNDER_LOADING_MST() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeFA_FUNDER_INT_DUE() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            FunderInvestment ds = new FunderInvestment();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void FA_FUNDER_MSTRowChangeEventHandler(object sender, FA_FUNDER_MSTRowChangeEvent e);
        
        public delegate void FA_FUNDER_TRAN_MSTRowChangeEventHandler(object sender, FA_FUNDER_TRAN_MSTRowChangeEvent e);
        
        public delegate void FA_FUNDER_TRAN_DTLRowChangeEventHandler(object sender, FA_FUNDER_TRAN_DTLRowChangeEvent e);
        
        public delegate void FA_INVESTMENT_MASTERRowChangeEventHandler(object sender, FA_INVESTMENT_MASTERRowChangeEvent e);
        
        public delegate void FA_INVESTMENT_TRAN_HDRRowChangeEventHandler(object sender, FA_INVESTMENT_TRAN_HDRRowChangeEvent e);
        
        public delegate void FA_INVESTMENT_TRAN_DTLRowChangeEventHandler(object sender, FA_INVESTMENT_TRAN_DTLRowChangeEvent e);
        
        public delegate void FA_INVESTMENT_TRAN_DTL_OTHRowChangeEventHandler(object sender, FA_INVESTMENT_TRAN_DTL_OTHRowChangeEvent e);
        
        public delegate void FA_INVESTMENT_TRAN_ROIRowChangeEventHandler(object sender, FA_INVESTMENT_TRAN_ROIRowChangeEvent e);
        
        public delegate void FA_FUNDER_LOADING_MSTRowChangeEventHandler(object sender, FA_FUNDER_LOADING_MSTRowChangeEvent e);
        
        public delegate void FA_FUNDER_INT_DUERowChangeEventHandler(object sender, FA_FUNDER_INT_DUERowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_FUNDER_MSTDataTable : global::System.Data.TypedTableBase<FA_FUNDER_MSTRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnFunder_ID;
            
            private global::System.Data.DataColumn columnFunder_Code;
            
            private global::System.Data.DataColumn columnGL_Code;
            
            private global::System.Data.DataColumn columnSL_Code;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnFunder_Name;
            
            private global::System.Data.DataColumn columnIs_Active;
            
            private global::System.Data.DataColumn columnTXN_Date;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnVAT_Number;
            
            private global::System.Data.DataColumn columnTAX_Number;
            
            private global::System.Data.DataColumn columnPerm_Website;
            
            private global::System.Data.DataColumn columnPerm_EMail;
            
            private global::System.Data.DataColumn columnPerm_Telephone;
            
            private global::System.Data.DataColumn columnPerm_Mobile;
            
            private global::System.Data.DataColumn columnPerm_Pincode;
            
            private global::System.Data.DataColumn columnPerm_Country;
            
            private global::System.Data.DataColumn columnPerm_State;
            
            private global::System.Data.DataColumn columnPerm_City;
            
            private global::System.Data.DataColumn columnPerm_Address2;
            
            private global::System.Data.DataColumn columnPerm_Address1;
            
            private global::System.Data.DataColumn columnComm_Website;
            
            private global::System.Data.DataColumn columnComm_EMail;
            
            private global::System.Data.DataColumn columnComm_Telephone;
            
            private global::System.Data.DataColumn columnComm_Mobile;
            
            private global::System.Data.DataColumn columnComm_Pincode;
            
            private global::System.Data.DataColumn columnComm_Country;
            
            private global::System.Data.DataColumn columnComm_State;
            
            private global::System.Data.DataColumn columnComm_City;
            
            private global::System.Data.DataColumn columnComm_Address2;
            
            private global::System.Data.DataColumn columnComm_Address1;
            
            private global::System.Data.DataColumn columnXML_Conditions;
            
            private global::System.Data.DataColumn columnXML_Bank;
            
            private global::System.Data.DataColumn columnBase_Rate_Type;
            
            private global::System.Data.DataColumn columnBase_Rate_Value;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_MSTDataTable() {
                this.TableName = "FA_FUNDER_MST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_MSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_FUNDER_MSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_IDColumn {
                get {
                    return this.columnFunder_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_CodeColumn {
                get {
                    return this.columnFunder_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GL_CodeColumn {
                get {
                    return this.columnGL_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SL_CodeColumn {
                get {
                    return this.columnSL_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_NameColumn {
                get {
                    return this.columnFunder_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Is_ActiveColumn {
                get {
                    return this.columnIs_Active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TXN_DateColumn {
                get {
                    return this.columnTXN_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn VAT_NumberColumn {
                get {
                    return this.columnVAT_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TAX_NumberColumn {
                get {
                    return this.columnTAX_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_WebsiteColumn {
                get {
                    return this.columnPerm_Website;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_EMailColumn {
                get {
                    return this.columnPerm_EMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_TelephoneColumn {
                get {
                    return this.columnPerm_Telephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_MobileColumn {
                get {
                    return this.columnPerm_Mobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_PincodeColumn {
                get {
                    return this.columnPerm_Pincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_CountryColumn {
                get {
                    return this.columnPerm_Country;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_StateColumn {
                get {
                    return this.columnPerm_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_CityColumn {
                get {
                    return this.columnPerm_City;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_Address2Column {
                get {
                    return this.columnPerm_Address2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Perm_Address1Column {
                get {
                    return this.columnPerm_Address1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_WebsiteColumn {
                get {
                    return this.columnComm_Website;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_EMailColumn {
                get {
                    return this.columnComm_EMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_TelephoneColumn {
                get {
                    return this.columnComm_Telephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_MobileColumn {
                get {
                    return this.columnComm_Mobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_PincodeColumn {
                get {
                    return this.columnComm_Pincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_CountryColumn {
                get {
                    return this.columnComm_Country;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_StateColumn {
                get {
                    return this.columnComm_State;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_CityColumn {
                get {
                    return this.columnComm_City;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_Address2Column {
                get {
                    return this.columnComm_Address2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Comm_Address1Column {
                get {
                    return this.columnComm_Address1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_ConditionsColumn {
                get {
                    return this.columnXML_Conditions;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_BankColumn {
                get {
                    return this.columnXML_Bank;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Base_Rate_TypeColumn {
                get {
                    return this.columnBase_Rate_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Base_Rate_ValueColumn {
                get {
                    return this.columnBase_Rate_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_MSTRow this[int index] {
                get {
                    return ((FA_FUNDER_MSTRow)(this.Rows[index]));
                }
            }
            
            public event FA_FUNDER_MSTRowChangeEventHandler FA_FUNDER_MSTRowChanging;
            
            public event FA_FUNDER_MSTRowChangeEventHandler FA_FUNDER_MSTRowChanged;
            
            public event FA_FUNDER_MSTRowChangeEventHandler FA_FUNDER_MSTRowDeleting;
            
            public event FA_FUNDER_MSTRowChangeEventHandler FA_FUNDER_MSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_FUNDER_MSTRow(FA_FUNDER_MSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_MSTRow AddFA_FUNDER_MSTRow(
                        int Company_ID, 
                        string Funder_Code, 
                        string GL_Code, 
                        string SL_Code, 
                        int Location_ID, 
                        string Funder_Name, 
                        bool Is_Active, 
                        System.DateTime TXN_Date, 
                        int Modified_By, 
                        int Created_By, 
                        string Remarks, 
                        string VAT_Number, 
                        string TAX_Number, 
                        string Perm_Website, 
                        string Perm_EMail, 
                        string Perm_Telephone, 
                        string Perm_Mobile, 
                        string Perm_Pincode, 
                        string Perm_Country, 
                        string Perm_State, 
                        string Perm_City, 
                        string Perm_Address2, 
                        string Perm_Address1, 
                        string Comm_Website, 
                        string Comm_EMail, 
                        string Comm_Telephone, 
                        string Comm_Mobile, 
                        string Comm_Pincode, 
                        string Comm_Country, 
                        string Comm_State, 
                        string Comm_City, 
                        string Comm_Address2, 
                        string Comm_Address1, 
                        string XML_Conditions, 
                        string XML_Bank, 
                        string Base_Rate_Type, 
                        string Base_Rate_Value) {
                FA_FUNDER_MSTRow rowFA_FUNDER_MSTRow = ((FA_FUNDER_MSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        null,
                        Funder_Code,
                        GL_Code,
                        SL_Code,
                        Location_ID,
                        Funder_Name,
                        Is_Active,
                        TXN_Date,
                        Modified_By,
                        Created_By,
                        Remarks,
                        VAT_Number,
                        TAX_Number,
                        Perm_Website,
                        Perm_EMail,
                        Perm_Telephone,
                        Perm_Mobile,
                        Perm_Pincode,
                        Perm_Country,
                        Perm_State,
                        Perm_City,
                        Perm_Address2,
                        Perm_Address1,
                        Comm_Website,
                        Comm_EMail,
                        Comm_Telephone,
                        Comm_Mobile,
                        Comm_Pincode,
                        Comm_Country,
                        Comm_State,
                        Comm_City,
                        Comm_Address2,
                        Comm_Address1,
                        XML_Conditions,
                        XML_Bank,
                        Base_Rate_Type,
                        Base_Rate_Value};
                rowFA_FUNDER_MSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_FUNDER_MSTRow);
                return rowFA_FUNDER_MSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_FUNDER_MSTDataTable cln = ((FA_FUNDER_MSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_FUNDER_MSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnFunder_ID = base.Columns["Funder_ID"];
                this.columnFunder_Code = base.Columns["Funder_Code"];
                this.columnGL_Code = base.Columns["GL_Code"];
                this.columnSL_Code = base.Columns["SL_Code"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnFunder_Name = base.Columns["Funder_Name"];
                this.columnIs_Active = base.Columns["Is_Active"];
                this.columnTXN_Date = base.Columns["TXN_Date"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnVAT_Number = base.Columns["VAT_Number"];
                this.columnTAX_Number = base.Columns["TAX_Number"];
                this.columnPerm_Website = base.Columns["Perm_Website"];
                this.columnPerm_EMail = base.Columns["Perm_EMail"];
                this.columnPerm_Telephone = base.Columns["Perm_Telephone"];
                this.columnPerm_Mobile = base.Columns["Perm_Mobile"];
                this.columnPerm_Pincode = base.Columns["Perm_Pincode"];
                this.columnPerm_Country = base.Columns["Perm_Country"];
                this.columnPerm_State = base.Columns["Perm_State"];
                this.columnPerm_City = base.Columns["Perm_City"];
                this.columnPerm_Address2 = base.Columns["Perm_Address2"];
                this.columnPerm_Address1 = base.Columns["Perm_Address1"];
                this.columnComm_Website = base.Columns["Comm_Website"];
                this.columnComm_EMail = base.Columns["Comm_EMail"];
                this.columnComm_Telephone = base.Columns["Comm_Telephone"];
                this.columnComm_Mobile = base.Columns["Comm_Mobile"];
                this.columnComm_Pincode = base.Columns["Comm_Pincode"];
                this.columnComm_Country = base.Columns["Comm_Country"];
                this.columnComm_State = base.Columns["Comm_State"];
                this.columnComm_City = base.Columns["Comm_City"];
                this.columnComm_Address2 = base.Columns["Comm_Address2"];
                this.columnComm_Address1 = base.Columns["Comm_Address1"];
                this.columnXML_Conditions = base.Columns["XML_Conditions"];
                this.columnXML_Bank = base.Columns["XML_Bank"];
                this.columnBase_Rate_Type = base.Columns["Base_Rate_Type"];
                this.columnBase_Rate_Value = base.Columns["Base_Rate_Value"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnFunder_ID = new global::System.Data.DataColumn("Funder_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_ID);
                this.columnFunder_Code = new global::System.Data.DataColumn("Funder_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Code);
                this.columnGL_Code = new global::System.Data.DataColumn("GL_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGL_Code);
                this.columnSL_Code = new global::System.Data.DataColumn("SL_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL_Code);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnFunder_Name = new global::System.Data.DataColumn("Funder_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Name);
                this.columnIs_Active = new global::System.Data.DataColumn("Is_Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_Active);
                this.columnTXN_Date = new global::System.Data.DataColumn("TXN_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXN_Date);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnVAT_Number = new global::System.Data.DataColumn("VAT_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVAT_Number);
                this.columnTAX_Number = new global::System.Data.DataColumn("TAX_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTAX_Number);
                this.columnPerm_Website = new global::System.Data.DataColumn("Perm_Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_Website);
                this.columnPerm_EMail = new global::System.Data.DataColumn("Perm_EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_EMail);
                this.columnPerm_Telephone = new global::System.Data.DataColumn("Perm_Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_Telephone);
                this.columnPerm_Mobile = new global::System.Data.DataColumn("Perm_Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_Mobile);
                this.columnPerm_Pincode = new global::System.Data.DataColumn("Perm_Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_Pincode);
                this.columnPerm_Country = new global::System.Data.DataColumn("Perm_Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_Country);
                this.columnPerm_State = new global::System.Data.DataColumn("Perm_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_State);
                this.columnPerm_City = new global::System.Data.DataColumn("Perm_City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_City);
                this.columnPerm_Address2 = new global::System.Data.DataColumn("Perm_Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_Address2);
                this.columnPerm_Address1 = new global::System.Data.DataColumn("Perm_Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPerm_Address1);
                this.columnComm_Website = new global::System.Data.DataColumn("Comm_Website", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_Website);
                this.columnComm_EMail = new global::System.Data.DataColumn("Comm_EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_EMail);
                this.columnComm_Telephone = new global::System.Data.DataColumn("Comm_Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_Telephone);
                this.columnComm_Mobile = new global::System.Data.DataColumn("Comm_Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_Mobile);
                this.columnComm_Pincode = new global::System.Data.DataColumn("Comm_Pincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_Pincode);
                this.columnComm_Country = new global::System.Data.DataColumn("Comm_Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_Country);
                this.columnComm_State = new global::System.Data.DataColumn("Comm_State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_State);
                this.columnComm_City = new global::System.Data.DataColumn("Comm_City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_City);
                this.columnComm_Address2 = new global::System.Data.DataColumn("Comm_Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_Address2);
                this.columnComm_Address1 = new global::System.Data.DataColumn("Comm_Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnComm_Address1);
                this.columnXML_Conditions = new global::System.Data.DataColumn("XML_Conditions", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_Conditions);
                this.columnXML_Bank = new global::System.Data.DataColumn("XML_Bank", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_Bank);
                this.columnBase_Rate_Type = new global::System.Data.DataColumn("Base_Rate_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBase_Rate_Type);
                this.columnBase_Rate_Value = new global::System.Data.DataColumn("Base_Rate_Value", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBase_Rate_Value);
                this.columnCompany_ID.AllowDBNull = false;
                this.columnFunder_ID.AutoIncrement = true;
                this.columnFunder_ID.AutoIncrementSeed = -1;
                this.columnFunder_ID.AutoIncrementStep = -1;
                this.columnFunder_ID.ReadOnly = true;
                this.columnFunder_Code.AllowDBNull = false;
                this.columnFunder_Code.MaxLength = 60;
                this.columnGL_Code.AllowDBNull = false;
                this.columnGL_Code.MaxLength = 60;
                this.columnSL_Code.AllowDBNull = false;
                this.columnSL_Code.MaxLength = 60;
                this.columnFunder_Name.AllowDBNull = false;
                this.columnFunder_Name.MaxLength = 100;
                this.columnTXN_Date.AllowDBNull = false;
                this.columnRemarks.MaxLength = 200;
                this.columnVAT_Number.MaxLength = 22;
                this.columnTAX_Number.MaxLength = 22;
                this.columnPerm_Website.MaxLength = 100;
                this.columnPerm_EMail.MaxLength = 100;
                this.columnPerm_Telephone.MaxLength = 12;
                this.columnPerm_Mobile.MaxLength = 100;
                this.columnPerm_Pincode.MaxLength = 10;
                this.columnPerm_Country.MaxLength = 100;
                this.columnPerm_State.MaxLength = 100;
                this.columnPerm_City.MaxLength = 100;
                this.columnPerm_Address2.MaxLength = 100;
                this.columnPerm_Address1.MaxLength = 100;
                this.columnComm_Website.MaxLength = 60;
                this.columnComm_EMail.MaxLength = 60;
                this.columnComm_Telephone.MaxLength = 12;
                this.columnComm_Mobile.MaxLength = 12;
                this.columnComm_Pincode.MaxLength = 10;
                this.columnComm_Country.MaxLength = 60;
                this.columnComm_State.MaxLength = 100;
                this.columnComm_City.MaxLength = 100;
                this.columnComm_Address2.MaxLength = 100;
                this.columnComm_Address1.MaxLength = 100;
                this.columnBase_Rate_Type.Caption = "Base_rate";
                this.columnBase_Rate_Value.Caption = "Base_rate%";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_MSTRow NewFA_FUNDER_MSTRow() {
                return ((FA_FUNDER_MSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_FUNDER_MSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_FUNDER_MSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_FUNDER_MSTRowChanged != null)) {
                    this.FA_FUNDER_MSTRowChanged(this, new FA_FUNDER_MSTRowChangeEvent(((FA_FUNDER_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_FUNDER_MSTRowChanging != null)) {
                    this.FA_FUNDER_MSTRowChanging(this, new FA_FUNDER_MSTRowChangeEvent(((FA_FUNDER_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_FUNDER_MSTRowDeleted != null)) {
                    this.FA_FUNDER_MSTRowDeleted(this, new FA_FUNDER_MSTRowChangeEvent(((FA_FUNDER_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_FUNDER_MSTRowDeleting != null)) {
                    this.FA_FUNDER_MSTRowDeleting(this, new FA_FUNDER_MSTRowChangeEvent(((FA_FUNDER_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_FUNDER_MSTRow(FA_FUNDER_MSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_FUNDER_MSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_FUNDER_TRAN_MSTDataTable : global::System.Data.TypedTableBase<FA_FUNDER_TRAN_MSTRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnFunder_Tran_ID;
            
            private global::System.Data.DataColumn columnFunder_ID;
            
            private global::System.Data.DataColumn columnFunder_Tran_No;
            
            private global::System.Data.DataColumn columnFund_Type;
            
            private global::System.Data.DataColumn columnCommitment_Amt;
            
            private global::System.Data.DataColumn columnValidity_Date;
            
            private global::System.Data.DataColumn columnTenure;
            
            private global::System.Data.DataColumn columnCurrency_Code;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnTXN_Date;
            
            private global::System.Data.DataColumn columnXML_Tran_DTL;
            
            private global::System.Data.DataColumn columnXML_Tran_DTL1;
            
            private global::System.Data.DataColumn columnOption;
            
            private global::System.Data.DataColumn columnUser_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_MSTDataTable() {
                this.TableName = "FA_FUNDER_TRAN_MST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_TRAN_MSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_FUNDER_TRAN_MSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Tran_IDColumn {
                get {
                    return this.columnFunder_Tran_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_IDColumn {
                get {
                    return this.columnFunder_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Tran_NoColumn {
                get {
                    return this.columnFunder_Tran_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fund_TypeColumn {
                get {
                    return this.columnFund_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Commitment_AmtColumn {
                get {
                    return this.columnCommitment_Amt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Validity_DateColumn {
                get {
                    return this.columnValidity_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenureColumn {
                get {
                    return this.columnTenure;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Currency_CodeColumn {
                get {
                    return this.columnCurrency_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TXN_DateColumn {
                get {
                    return this.columnTXN_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_Tran_DTLColumn {
                get {
                    return this.columnXML_Tran_DTL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_Tran_DTL1Column {
                get {
                    return this.columnXML_Tran_DTL1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OptionColumn {
                get {
                    return this.columnOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn User_IDColumn {
                get {
                    return this.columnUser_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_MSTRow this[int index] {
                get {
                    return ((FA_FUNDER_TRAN_MSTRow)(this.Rows[index]));
                }
            }
            
            public event FA_FUNDER_TRAN_MSTRowChangeEventHandler FA_FUNDER_TRAN_MSTRowChanging;
            
            public event FA_FUNDER_TRAN_MSTRowChangeEventHandler FA_FUNDER_TRAN_MSTRowChanged;
            
            public event FA_FUNDER_TRAN_MSTRowChangeEventHandler FA_FUNDER_TRAN_MSTRowDeleting;
            
            public event FA_FUNDER_TRAN_MSTRowChangeEventHandler FA_FUNDER_TRAN_MSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_FUNDER_TRAN_MSTRow(FA_FUNDER_TRAN_MSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_MSTRow AddFA_FUNDER_TRAN_MSTRow(
                        int Company_ID, 
                        int Funder_Tran_ID, 
                        int Funder_ID, 
                        string Funder_Tran_No, 
                        string Fund_Type, 
                        decimal Commitment_Amt, 
                        System.DateTime Validity_Date, 
                        int Tenure, 
                        string Currency_Code, 
                        int Created_By, 
                        int Modified_By, 
                        System.DateTime TXN_Date, 
                        string XML_Tran_DTL, 
                        string XML_Tran_DTL1, 
                        int Option, 
                        int User_ID) {
                FA_FUNDER_TRAN_MSTRow rowFA_FUNDER_TRAN_MSTRow = ((FA_FUNDER_TRAN_MSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        Funder_Tran_ID,
                        Funder_ID,
                        Funder_Tran_No,
                        Fund_Type,
                        Commitment_Amt,
                        Validity_Date,
                        Tenure,
                        Currency_Code,
                        Created_By,
                        Modified_By,
                        TXN_Date,
                        XML_Tran_DTL,
                        XML_Tran_DTL1,
                        Option,
                        User_ID};
                rowFA_FUNDER_TRAN_MSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_FUNDER_TRAN_MSTRow);
                return rowFA_FUNDER_TRAN_MSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_FUNDER_TRAN_MSTDataTable cln = ((FA_FUNDER_TRAN_MSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_FUNDER_TRAN_MSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnFunder_Tran_ID = base.Columns["Funder_Tran_ID"];
                this.columnFunder_ID = base.Columns["Funder_ID"];
                this.columnFunder_Tran_No = base.Columns["Funder_Tran_No"];
                this.columnFund_Type = base.Columns["Fund_Type"];
                this.columnCommitment_Amt = base.Columns["Commitment_Amt"];
                this.columnValidity_Date = base.Columns["Validity_Date"];
                this.columnTenure = base.Columns["Tenure"];
                this.columnCurrency_Code = base.Columns["Currency_Code"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnTXN_Date = base.Columns["TXN_Date"];
                this.columnXML_Tran_DTL = base.Columns["XML_Tran_DTL"];
                this.columnXML_Tran_DTL1 = base.Columns["XML_Tran_DTL1"];
                this.columnOption = base.Columns["Option"];
                this.columnUser_ID = base.Columns["User_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnFunder_Tran_ID = new global::System.Data.DataColumn("Funder_Tran_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Tran_ID);
                this.columnFunder_ID = new global::System.Data.DataColumn("Funder_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_ID);
                this.columnFunder_Tran_No = new global::System.Data.DataColumn("Funder_Tran_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Tran_No);
                this.columnFund_Type = new global::System.Data.DataColumn("Fund_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund_Type);
                this.columnCommitment_Amt = new global::System.Data.DataColumn("Commitment_Amt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommitment_Amt);
                this.columnValidity_Date = new global::System.Data.DataColumn("Validity_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValidity_Date);
                this.columnTenure = new global::System.Data.DataColumn("Tenure", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenure);
                this.columnCurrency_Code = new global::System.Data.DataColumn("Currency_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCurrency_Code);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnTXN_Date = new global::System.Data.DataColumn("TXN_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTXN_Date);
                this.columnXML_Tran_DTL = new global::System.Data.DataColumn("XML_Tran_DTL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_Tran_DTL);
                this.columnXML_Tran_DTL1 = new global::System.Data.DataColumn("XML_Tran_DTL1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_Tran_DTL1);
                this.columnOption = new global::System.Data.DataColumn("Option", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption);
                this.columnUser_ID = new global::System.Data.DataColumn("User_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUser_ID);
                this.columnFunder_Tran_No.AllowDBNull = false;
                this.columnFunder_Tran_No.MaxLength = 10;
                this.columnFund_Type.MaxLength = 5;
                this.columnCurrency_Code.MaxLength = 10;
                this.columnXML_Tran_DTL1.Caption = "XML_Tran_DTL";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_MSTRow NewFA_FUNDER_TRAN_MSTRow() {
                return ((FA_FUNDER_TRAN_MSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_FUNDER_TRAN_MSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_FUNDER_TRAN_MSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_FUNDER_TRAN_MSTRowChanged != null)) {
                    this.FA_FUNDER_TRAN_MSTRowChanged(this, new FA_FUNDER_TRAN_MSTRowChangeEvent(((FA_FUNDER_TRAN_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_FUNDER_TRAN_MSTRowChanging != null)) {
                    this.FA_FUNDER_TRAN_MSTRowChanging(this, new FA_FUNDER_TRAN_MSTRowChangeEvent(((FA_FUNDER_TRAN_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_FUNDER_TRAN_MSTRowDeleted != null)) {
                    this.FA_FUNDER_TRAN_MSTRowDeleted(this, new FA_FUNDER_TRAN_MSTRowChangeEvent(((FA_FUNDER_TRAN_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_FUNDER_TRAN_MSTRowDeleting != null)) {
                    this.FA_FUNDER_TRAN_MSTRowDeleting(this, new FA_FUNDER_TRAN_MSTRowChangeEvent(((FA_FUNDER_TRAN_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_FUNDER_TRAN_MSTRow(FA_FUNDER_TRAN_MSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_FUNDER_TRAN_MSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_FUNDER_TRAN_DTLDataTable : global::System.Data.TypedTableBase<FA_FUNDER_TRAN_DTLRow> {
            
            private global::System.Data.DataColumn columnFunder_Tran_Details_ID;
            
            private global::System.Data.DataColumn columnFunder_Tran_ID;
            
            private global::System.Data.DataColumn columnFund_Ref_No;
            
            private global::System.Data.DataColumn columnFund_Rate;
            
            private global::System.Data.DataColumn columnDue_Date;
            
            private global::System.Data.DataColumn columnDue_Amount;
            
            private global::System.Data.DataColumn columnJV_No;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_DTLDataTable() {
                this.TableName = "FA_FUNDER_TRAN_DTL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_TRAN_DTLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_FUNDER_TRAN_DTLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Tran_Details_IDColumn {
                get {
                    return this.columnFunder_Tran_Details_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Tran_IDColumn {
                get {
                    return this.columnFunder_Tran_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fund_Ref_NoColumn {
                get {
                    return this.columnFund_Ref_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fund_RateColumn {
                get {
                    return this.columnFund_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Due_DateColumn {
                get {
                    return this.columnDue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Due_AmountColumn {
                get {
                    return this.columnDue_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn JV_NoColumn {
                get {
                    return this.columnJV_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_DTLRow this[int index] {
                get {
                    return ((FA_FUNDER_TRAN_DTLRow)(this.Rows[index]));
                }
            }
            
            public event FA_FUNDER_TRAN_DTLRowChangeEventHandler FA_FUNDER_TRAN_DTLRowChanging;
            
            public event FA_FUNDER_TRAN_DTLRowChangeEventHandler FA_FUNDER_TRAN_DTLRowChanged;
            
            public event FA_FUNDER_TRAN_DTLRowChangeEventHandler FA_FUNDER_TRAN_DTLRowDeleting;
            
            public event FA_FUNDER_TRAN_DTLRowChangeEventHandler FA_FUNDER_TRAN_DTLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_FUNDER_TRAN_DTLRow(FA_FUNDER_TRAN_DTLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_DTLRow AddFA_FUNDER_TRAN_DTLRow(int Funder_Tran_Details_ID, int Funder_Tran_ID, string Fund_Ref_No, decimal Fund_Rate, System.DateTime Due_Date, decimal Due_Amount, string JV_No) {
                FA_FUNDER_TRAN_DTLRow rowFA_FUNDER_TRAN_DTLRow = ((FA_FUNDER_TRAN_DTLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Funder_Tran_Details_ID,
                        Funder_Tran_ID,
                        Fund_Ref_No,
                        Fund_Rate,
                        Due_Date,
                        Due_Amount,
                        JV_No};
                rowFA_FUNDER_TRAN_DTLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_FUNDER_TRAN_DTLRow);
                return rowFA_FUNDER_TRAN_DTLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_FUNDER_TRAN_DTLDataTable cln = ((FA_FUNDER_TRAN_DTLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_FUNDER_TRAN_DTLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnFunder_Tran_Details_ID = base.Columns["Funder_Tran_Details_ID"];
                this.columnFunder_Tran_ID = base.Columns["Funder_Tran_ID"];
                this.columnFund_Ref_No = base.Columns["Fund_Ref_No"];
                this.columnFund_Rate = base.Columns["Fund_Rate"];
                this.columnDue_Date = base.Columns["Due_Date"];
                this.columnDue_Amount = base.Columns["Due_Amount"];
                this.columnJV_No = base.Columns["JV_No"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnFunder_Tran_Details_ID = new global::System.Data.DataColumn("Funder_Tran_Details_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Tran_Details_ID);
                this.columnFunder_Tran_ID = new global::System.Data.DataColumn("Funder_Tran_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Tran_ID);
                this.columnFund_Ref_No = new global::System.Data.DataColumn("Fund_Ref_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund_Ref_No);
                this.columnFund_Rate = new global::System.Data.DataColumn("Fund_Rate", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund_Rate);
                this.columnDue_Date = new global::System.Data.DataColumn("Due_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDue_Date);
                this.columnDue_Amount = new global::System.Data.DataColumn("Due_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDue_Amount);
                this.columnJV_No = new global::System.Data.DataColumn("JV_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJV_No);
                this.columnFunder_Tran_Details_ID.AllowDBNull = false;
                this.columnFunder_Tran_ID.AllowDBNull = false;
                this.columnFund_Ref_No.AllowDBNull = false;
                this.columnFund_Ref_No.MaxLength = 50;
                this.columnDue_Amount.AllowDBNull = false;
                this.columnJV_No.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_DTLRow NewFA_FUNDER_TRAN_DTLRow() {
                return ((FA_FUNDER_TRAN_DTLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_FUNDER_TRAN_DTLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_FUNDER_TRAN_DTLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_FUNDER_TRAN_DTLRowChanged != null)) {
                    this.FA_FUNDER_TRAN_DTLRowChanged(this, new FA_FUNDER_TRAN_DTLRowChangeEvent(((FA_FUNDER_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_FUNDER_TRAN_DTLRowChanging != null)) {
                    this.FA_FUNDER_TRAN_DTLRowChanging(this, new FA_FUNDER_TRAN_DTLRowChangeEvent(((FA_FUNDER_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_FUNDER_TRAN_DTLRowDeleted != null)) {
                    this.FA_FUNDER_TRAN_DTLRowDeleted(this, new FA_FUNDER_TRAN_DTLRowChangeEvent(((FA_FUNDER_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_FUNDER_TRAN_DTLRowDeleting != null)) {
                    this.FA_FUNDER_TRAN_DTLRowDeleting(this, new FA_FUNDER_TRAN_DTLRowChangeEvent(((FA_FUNDER_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_FUNDER_TRAN_DTLRow(FA_FUNDER_TRAN_DTLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_FUNDER_TRAN_DTLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_INVESTMENT_MASTERDataTable : global::System.Data.TypedTableBase<FA_INVESTMENT_MASTERRow> {
            
            private global::System.Data.DataColumn columnInvestMaster_ID;
            
            private global::System.Data.DataColumn columnCompany_Id;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnLocation_Code;
            
            private global::System.Data.DataColumn columnInvestment_Type;
            
            private global::System.Data.DataColumn columnInvestment_Lookup;
            
            private global::System.Data.DataColumn columnInvestment_Code;
            
            private global::System.Data.DataColumn columnInvestment_Desc;
            
            private global::System.Data.DataColumn columnInvestment_AddDesc;
            
            private global::System.Data.DataColumn columnUnit_Base;
            
            private global::System.Data.DataColumn columnUnit_FaceValue;
            
            private global::System.Data.DataColumn columnInterest_Periodicity;
            
            private global::System.Data.DataColumn columnInterest_Period_Lookup;
            
            private global::System.Data.DataColumn columnRate_of_Interest;
            
            private global::System.Data.DataColumn columnNature_of_Interest;
            
            private global::System.Data.DataColumn columnNatureofInterest_Lookup;
            
            private global::System.Data.DataColumn columnInterest_Type;
            
            private global::System.Data.DataColumn columnInteresttype_Lookup;
            
            private global::System.Data.DataColumn columnInterest_Frequency;
            
            private global::System.Data.DataColumn columnInterest_Freq_Lookup;
            
            private global::System.Data.DataColumn columnPrincipal_Frequency;
            
            private global::System.Data.DataColumn columnPrincipal_Freq_Lookup;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnIs_Active;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_Date;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_Date;
            
            private global::System.Data.DataColumn columnGL_Code;
            
            private global::System.Data.DataColumn columnSL_Code;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_MASTERDataTable() {
                this.TableName = "FA_INVESTMENT_MASTER";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_MASTERDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_INVESTMENT_MASTERDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn InvestMaster_IDColumn {
                get {
                    return this.columnInvestMaster_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IdColumn {
                get {
                    return this.columnCompany_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_CodeColumn {
                get {
                    return this.columnLocation_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_TypeColumn {
                get {
                    return this.columnInvestment_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_LookupColumn {
                get {
                    return this.columnInvestment_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_CodeColumn {
                get {
                    return this.columnInvestment_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_DescColumn {
                get {
                    return this.columnInvestment_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_AddDescColumn {
                get {
                    return this.columnInvestment_AddDesc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_BaseColumn {
                get {
                    return this.columnUnit_Base;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_FaceValueColumn {
                get {
                    return this.columnUnit_FaceValue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interest_PeriodicityColumn {
                get {
                    return this.columnInterest_Periodicity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interest_Period_LookupColumn {
                get {
                    return this.columnInterest_Period_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Rate_of_InterestColumn {
                get {
                    return this.columnRate_of_Interest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Nature_of_InterestColumn {
                get {
                    return this.columnNature_of_Interest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NatureofInterest_LookupColumn {
                get {
                    return this.columnNatureofInterest_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interest_TypeColumn {
                get {
                    return this.columnInterest_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interesttype_LookupColumn {
                get {
                    return this.columnInteresttype_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interest_FrequencyColumn {
                get {
                    return this.columnInterest_Frequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interest_Freq_LookupColumn {
                get {
                    return this.columnInterest_Freq_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Principal_FrequencyColumn {
                get {
                    return this.columnPrincipal_Frequency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Principal_Freq_LookupColumn {
                get {
                    return this.columnPrincipal_Freq_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Is_ActiveColumn {
                get {
                    return this.columnIs_Active;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_DateColumn {
                get {
                    return this.columnCreated_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_DateColumn {
                get {
                    return this.columnModified_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn GL_CodeColumn {
                get {
                    return this.columnGL_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SL_CodeColumn {
                get {
                    return this.columnSL_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_MASTERRow this[int index] {
                get {
                    return ((FA_INVESTMENT_MASTERRow)(this.Rows[index]));
                }
            }
            
            public event FA_INVESTMENT_MASTERRowChangeEventHandler FA_INVESTMENT_MASTERRowChanging;
            
            public event FA_INVESTMENT_MASTERRowChangeEventHandler FA_INVESTMENT_MASTERRowChanged;
            
            public event FA_INVESTMENT_MASTERRowChangeEventHandler FA_INVESTMENT_MASTERRowDeleting;
            
            public event FA_INVESTMENT_MASTERRowChangeEventHandler FA_INVESTMENT_MASTERRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_INVESTMENT_MASTERRow(FA_INVESTMENT_MASTERRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_MASTERRow AddFA_INVESTMENT_MASTERRow(
                        int Company_Id, 
                        int Location_ID, 
                        string Location_Code, 
                        int Investment_Type, 
                        int Investment_Lookup, 
                        string Investment_Code, 
                        string Investment_Desc, 
                        string Investment_AddDesc, 
                        decimal Unit_Base, 
                        decimal Unit_FaceValue, 
                        int Interest_Periodicity, 
                        int Interest_Period_Lookup, 
                        decimal Rate_of_Interest, 
                        int Nature_of_Interest, 
                        int NatureofInterest_Lookup, 
                        int Interest_Type, 
                        int Interesttype_Lookup, 
                        int Interest_Frequency, 
                        int Interest_Freq_Lookup, 
                        int Principal_Frequency, 
                        int Principal_Freq_Lookup, 
                        string Remarks, 
                        bool Is_Active, 
                        int Created_By, 
                        System.DateTime Created_Date, 
                        int Modified_By, 
                        System.DateTime Modified_Date, 
                        string GL_Code, 
                        string SL_Code) {
                FA_INVESTMENT_MASTERRow rowFA_INVESTMENT_MASTERRow = ((FA_INVESTMENT_MASTERRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company_Id,
                        Location_ID,
                        Location_Code,
                        Investment_Type,
                        Investment_Lookup,
                        Investment_Code,
                        Investment_Desc,
                        Investment_AddDesc,
                        Unit_Base,
                        Unit_FaceValue,
                        Interest_Periodicity,
                        Interest_Period_Lookup,
                        Rate_of_Interest,
                        Nature_of_Interest,
                        NatureofInterest_Lookup,
                        Interest_Type,
                        Interesttype_Lookup,
                        Interest_Frequency,
                        Interest_Freq_Lookup,
                        Principal_Frequency,
                        Principal_Freq_Lookup,
                        Remarks,
                        Is_Active,
                        Created_By,
                        Created_Date,
                        Modified_By,
                        Modified_Date,
                        GL_Code,
                        SL_Code};
                rowFA_INVESTMENT_MASTERRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_INVESTMENT_MASTERRow);
                return rowFA_INVESTMENT_MASTERRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_MASTERRow FindByInvestMaster_ID(long InvestMaster_ID) {
                return ((FA_INVESTMENT_MASTERRow)(this.Rows.Find(new object[] {
                            InvestMaster_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_INVESTMENT_MASTERDataTable cln = ((FA_INVESTMENT_MASTERDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_INVESTMENT_MASTERDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvestMaster_ID = base.Columns["InvestMaster_ID"];
                this.columnCompany_Id = base.Columns["Company_Id"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnLocation_Code = base.Columns["Location_Code"];
                this.columnInvestment_Type = base.Columns["Investment_Type"];
                this.columnInvestment_Lookup = base.Columns["Investment_Lookup"];
                this.columnInvestment_Code = base.Columns["Investment_Code"];
                this.columnInvestment_Desc = base.Columns["Investment_Desc"];
                this.columnInvestment_AddDesc = base.Columns["Investment_AddDesc"];
                this.columnUnit_Base = base.Columns["Unit_Base"];
                this.columnUnit_FaceValue = base.Columns["Unit_FaceValue"];
                this.columnInterest_Periodicity = base.Columns["Interest_Periodicity"];
                this.columnInterest_Period_Lookup = base.Columns["Interest_Period_Lookup"];
                this.columnRate_of_Interest = base.Columns["Rate_of_Interest"];
                this.columnNature_of_Interest = base.Columns["Nature_of_Interest"];
                this.columnNatureofInterest_Lookup = base.Columns["NatureofInterest_Lookup"];
                this.columnInterest_Type = base.Columns["Interest_Type"];
                this.columnInteresttype_Lookup = base.Columns["Interesttype_Lookup"];
                this.columnInterest_Frequency = base.Columns["Interest_Frequency"];
                this.columnInterest_Freq_Lookup = base.Columns["Interest_Freq_Lookup"];
                this.columnPrincipal_Frequency = base.Columns["Principal_Frequency"];
                this.columnPrincipal_Freq_Lookup = base.Columns["Principal_Freq_Lookup"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnIs_Active = base.Columns["Is_Active"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_Date = base.Columns["Created_Date"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_Date = base.Columns["Modified_Date"];
                this.columnGL_Code = base.Columns["GL_Code"];
                this.columnSL_Code = base.Columns["SL_Code"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvestMaster_ID = new global::System.Data.DataColumn("InvestMaster_ID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestMaster_ID);
                this.columnCompany_Id = new global::System.Data.DataColumn("Company_Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Id);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnLocation_Code = new global::System.Data.DataColumn("Location_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_Code);
                this.columnInvestment_Type = new global::System.Data.DataColumn("Investment_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Type);
                this.columnInvestment_Lookup = new global::System.Data.DataColumn("Investment_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Lookup);
                this.columnInvestment_Code = new global::System.Data.DataColumn("Investment_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Code);
                this.columnInvestment_Desc = new global::System.Data.DataColumn("Investment_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Desc);
                this.columnInvestment_AddDesc = new global::System.Data.DataColumn("Investment_AddDesc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_AddDesc);
                this.columnUnit_Base = new global::System.Data.DataColumn("Unit_Base", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Base);
                this.columnUnit_FaceValue = new global::System.Data.DataColumn("Unit_FaceValue", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_FaceValue);
                this.columnInterest_Periodicity = new global::System.Data.DataColumn("Interest_Periodicity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterest_Periodicity);
                this.columnInterest_Period_Lookup = new global::System.Data.DataColumn("Interest_Period_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterest_Period_Lookup);
                this.columnRate_of_Interest = new global::System.Data.DataColumn("Rate_of_Interest", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRate_of_Interest);
                this.columnNature_of_Interest = new global::System.Data.DataColumn("Nature_of_Interest", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNature_of_Interest);
                this.columnNatureofInterest_Lookup = new global::System.Data.DataColumn("NatureofInterest_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNatureofInterest_Lookup);
                this.columnInterest_Type = new global::System.Data.DataColumn("Interest_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterest_Type);
                this.columnInteresttype_Lookup = new global::System.Data.DataColumn("Interesttype_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInteresttype_Lookup);
                this.columnInterest_Frequency = new global::System.Data.DataColumn("Interest_Frequency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterest_Frequency);
                this.columnInterest_Freq_Lookup = new global::System.Data.DataColumn("Interest_Freq_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterest_Freq_Lookup);
                this.columnPrincipal_Frequency = new global::System.Data.DataColumn("Principal_Frequency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrincipal_Frequency);
                this.columnPrincipal_Freq_Lookup = new global::System.Data.DataColumn("Principal_Freq_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrincipal_Freq_Lookup);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnIs_Active = new global::System.Data.DataColumn("Is_Active", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_Active);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_Date = new global::System.Data.DataColumn("Created_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_Date);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_Date = new global::System.Data.DataColumn("Modified_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_Date);
                this.columnGL_Code = new global::System.Data.DataColumn("GL_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGL_Code);
                this.columnSL_Code = new global::System.Data.DataColumn("SL_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSL_Code);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvestMaster_ID}, true));
                this.columnInvestMaster_ID.AutoIncrement = true;
                this.columnInvestMaster_ID.AutoIncrementSeed = -1;
                this.columnInvestMaster_ID.AutoIncrementStep = -1;
                this.columnInvestMaster_ID.AllowDBNull = false;
                this.columnInvestMaster_ID.ReadOnly = true;
                this.columnInvestMaster_ID.Unique = true;
                this.columnLocation_Code.MaxLength = 30;
                this.columnInvestment_Code.MaxLength = 10;
                this.columnInvestment_Desc.MaxLength = 60;
                this.columnInvestment_AddDesc.MaxLength = 40;
                this.columnRemarks.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_MASTERRow NewFA_INVESTMENT_MASTERRow() {
                return ((FA_INVESTMENT_MASTERRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_INVESTMENT_MASTERRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_INVESTMENT_MASTERRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_INVESTMENT_MASTERRowChanged != null)) {
                    this.FA_INVESTMENT_MASTERRowChanged(this, new FA_INVESTMENT_MASTERRowChangeEvent(((FA_INVESTMENT_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_INVESTMENT_MASTERRowChanging != null)) {
                    this.FA_INVESTMENT_MASTERRowChanging(this, new FA_INVESTMENT_MASTERRowChangeEvent(((FA_INVESTMENT_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_INVESTMENT_MASTERRowDeleted != null)) {
                    this.FA_INVESTMENT_MASTERRowDeleted(this, new FA_INVESTMENT_MASTERRowChangeEvent(((FA_INVESTMENT_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_INVESTMENT_MASTERRowDeleting != null)) {
                    this.FA_INVESTMENT_MASTERRowDeleting(this, new FA_INVESTMENT_MASTERRowChangeEvent(((FA_INVESTMENT_MASTERRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_INVESTMENT_MASTERRow(FA_INVESTMENT_MASTERRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_INVESTMENT_MASTERDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_INVESTMENT_TRAN_HDRDataTable : global::System.Data.TypedTableBase<FA_INVESTMENT_TRAN_HDRRow> {
            
            private global::System.Data.DataColumn columnInvest_Header_ID;
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnLocation_Code;
            
            private global::System.Data.DataColumn columnActivity;
            
            private global::System.Data.DataColumn columnInvestment_Type;
            
            private global::System.Data.DataColumn columnInvestment_Code;
            
            private global::System.Data.DataColumn columnInvestment_Tran_No;
            
            private global::System.Data.DataColumn columnInvestment_Serial_No;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnInvest_Trans_Date;
            
            private global::System.Data.DataColumn columnInvest_Link_Key;
            
            private global::System.Data.DataColumn columnTransaction_Type;
            
            private global::System.Data.DataColumn columnTransactionType_Lookup;
            
            private global::System.Data.DataColumn columnEntity_Detail_ID;
            
            private global::System.Data.DataColumn columnEntity_Code;
            
            private global::System.Data.DataColumn columnIs_Authorized;
            
            private global::System.Data.DataColumn columnAuthorized_By;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_on;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_on;
            
            private global::System.Data.DataColumn columnXML_InvestTranDet;
            
            private global::System.Data.DataColumn columnXML_InvestTranDetOth;
            
            private global::System.Data.DataColumn columnXML_InvestTranROI;
            
            private global::System.Data.DataColumn columnXML_InvestDocumentDet;
            
            private global::System.Data.DataColumn columnXML_Interest_Det;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_HDRDataTable() {
                this.TableName = "FA_INVESTMENT_TRAN_HDR";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_HDRDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_INVESTMENT_TRAN_HDRDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invest_Header_IDColumn {
                get {
                    return this.columnInvest_Header_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_CodeColumn {
                get {
                    return this.columnLocation_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActivityColumn {
                get {
                    return this.columnActivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_TypeColumn {
                get {
                    return this.columnInvestment_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_CodeColumn {
                get {
                    return this.columnInvestment_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_Tran_NoColumn {
                get {
                    return this.columnInvestment_Tran_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_Serial_NoColumn {
                get {
                    return this.columnInvestment_Serial_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invest_Trans_DateColumn {
                get {
                    return this.columnInvest_Trans_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invest_Link_KeyColumn {
                get {
                    return this.columnInvest_Link_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Transaction_TypeColumn {
                get {
                    return this.columnTransaction_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TransactionType_LookupColumn {
                get {
                    return this.columnTransactionType_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Entity_Detail_IDColumn {
                get {
                    return this.columnEntity_Detail_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Entity_CodeColumn {
                get {
                    return this.columnEntity_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Is_AuthorizedColumn {
                get {
                    return this.columnIs_Authorized;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Authorized_ByColumn {
                get {
                    return this.columnAuthorized_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_onColumn {
                get {
                    return this.columnCreated_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_onColumn {
                get {
                    return this.columnModified_on;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_InvestTranDetColumn {
                get {
                    return this.columnXML_InvestTranDet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_InvestTranDetOthColumn {
                get {
                    return this.columnXML_InvestTranDetOth;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_InvestTranROIColumn {
                get {
                    return this.columnXML_InvestTranROI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_InvestDocumentDetColumn {
                get {
                    return this.columnXML_InvestDocumentDet;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_Interest_DetColumn {
                get {
                    return this.columnXML_Interest_Det;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_HDRRow this[int index] {
                get {
                    return ((FA_INVESTMENT_TRAN_HDRRow)(this.Rows[index]));
                }
            }
            
            public event FA_INVESTMENT_TRAN_HDRRowChangeEventHandler FA_INVESTMENT_TRAN_HDRRowChanging;
            
            public event FA_INVESTMENT_TRAN_HDRRowChangeEventHandler FA_INVESTMENT_TRAN_HDRRowChanged;
            
            public event FA_INVESTMENT_TRAN_HDRRowChangeEventHandler FA_INVESTMENT_TRAN_HDRRowDeleting;
            
            public event FA_INVESTMENT_TRAN_HDRRowChangeEventHandler FA_INVESTMENT_TRAN_HDRRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_INVESTMENT_TRAN_HDRRow(FA_INVESTMENT_TRAN_HDRRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_HDRRow AddFA_INVESTMENT_TRAN_HDRRow(
                        int Company_ID, 
                        int Location_ID, 
                        string Location_Code, 
                        int Activity, 
                        int Investment_Type, 
                        string Investment_Code, 
                        string Investment_Tran_No, 
                        string Investment_Serial_No, 
                        System.DateTime Date, 
                        System.DateTime Invest_Trans_Date, 
                        int Invest_Link_Key, 
                        int Transaction_Type, 
                        int TransactionType_Lookup, 
                        int Entity_Detail_ID, 
                        string Entity_Code, 
                        bool Is_Authorized, 
                        int Authorized_By, 
                        int Created_By, 
                        System.DateTime Created_on, 
                        int Modified_By, 
                        System.DateTime Modified_on, 
                        string XML_InvestTranDet, 
                        string XML_InvestTranDetOth, 
                        string XML_InvestTranROI, 
                        string XML_InvestDocumentDet, 
                        string XML_Interest_Det) {
                FA_INVESTMENT_TRAN_HDRRow rowFA_INVESTMENT_TRAN_HDRRow = ((FA_INVESTMENT_TRAN_HDRRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company_ID,
                        Location_ID,
                        Location_Code,
                        Activity,
                        Investment_Type,
                        Investment_Code,
                        Investment_Tran_No,
                        Investment_Serial_No,
                        Date,
                        Invest_Trans_Date,
                        Invest_Link_Key,
                        Transaction_Type,
                        TransactionType_Lookup,
                        Entity_Detail_ID,
                        Entity_Code,
                        Is_Authorized,
                        Authorized_By,
                        Created_By,
                        Created_on,
                        Modified_By,
                        Modified_on,
                        XML_InvestTranDet,
                        XML_InvestTranDetOth,
                        XML_InvestTranROI,
                        XML_InvestDocumentDet,
                        XML_Interest_Det};
                rowFA_INVESTMENT_TRAN_HDRRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_INVESTMENT_TRAN_HDRRow);
                return rowFA_INVESTMENT_TRAN_HDRRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_HDRRow FindByInvest_Header_ID(int Invest_Header_ID) {
                return ((FA_INVESTMENT_TRAN_HDRRow)(this.Rows.Find(new object[] {
                            Invest_Header_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_INVESTMENT_TRAN_HDRDataTable cln = ((FA_INVESTMENT_TRAN_HDRDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_INVESTMENT_TRAN_HDRDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvest_Header_ID = base.Columns["Invest_Header_ID"];
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnLocation_Code = base.Columns["Location_Code"];
                this.columnActivity = base.Columns["Activity"];
                this.columnInvestment_Type = base.Columns["Investment_Type"];
                this.columnInvestment_Code = base.Columns["Investment_Code"];
                this.columnInvestment_Tran_No = base.Columns["Investment_Tran_No"];
                this.columnInvestment_Serial_No = base.Columns["Investment_Serial_No"];
                this.columnDate = base.Columns["Date"];
                this.columnInvest_Trans_Date = base.Columns["Invest_Trans_Date"];
                this.columnInvest_Link_Key = base.Columns["Invest_Link_Key"];
                this.columnTransaction_Type = base.Columns["Transaction_Type"];
                this.columnTransactionType_Lookup = base.Columns["TransactionType_Lookup"];
                this.columnEntity_Detail_ID = base.Columns["Entity_Detail_ID"];
                this.columnEntity_Code = base.Columns["Entity_Code"];
                this.columnIs_Authorized = base.Columns["Is_Authorized"];
                this.columnAuthorized_By = base.Columns["Authorized_By"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_on = base.Columns["Created_on"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_on = base.Columns["Modified_on"];
                this.columnXML_InvestTranDet = base.Columns["XML_InvestTranDet"];
                this.columnXML_InvestTranDetOth = base.Columns["XML_InvestTranDetOth"];
                this.columnXML_InvestTranROI = base.Columns["XML_InvestTranROI"];
                this.columnXML_InvestDocumentDet = base.Columns["XML_InvestDocumentDet"];
                this.columnXML_Interest_Det = base.Columns["XML_Interest_Det"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvest_Header_ID = new global::System.Data.DataColumn("Invest_Header_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvest_Header_ID);
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnLocation_Code = new global::System.Data.DataColumn("Location_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_Code);
                this.columnActivity = new global::System.Data.DataColumn("Activity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivity);
                this.columnInvestment_Type = new global::System.Data.DataColumn("Investment_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Type);
                this.columnInvestment_Code = new global::System.Data.DataColumn("Investment_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Code);
                this.columnInvestment_Tran_No = new global::System.Data.DataColumn("Investment_Tran_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Tran_No);
                this.columnInvestment_Serial_No = new global::System.Data.DataColumn("Investment_Serial_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Serial_No);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnInvest_Trans_Date = new global::System.Data.DataColumn("Invest_Trans_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvest_Trans_Date);
                this.columnInvest_Link_Key = new global::System.Data.DataColumn("Invest_Link_Key", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvest_Link_Key);
                this.columnTransaction_Type = new global::System.Data.DataColumn("Transaction_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransaction_Type);
                this.columnTransactionType_Lookup = new global::System.Data.DataColumn("TransactionType_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTransactionType_Lookup);
                this.columnEntity_Detail_ID = new global::System.Data.DataColumn("Entity_Detail_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntity_Detail_ID);
                this.columnEntity_Code = new global::System.Data.DataColumn("Entity_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntity_Code);
                this.columnIs_Authorized = new global::System.Data.DataColumn("Is_Authorized", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIs_Authorized);
                this.columnAuthorized_By = new global::System.Data.DataColumn("Authorized_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorized_By);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_on = new global::System.Data.DataColumn("Created_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_on);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_on = new global::System.Data.DataColumn("Modified_on", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_on);
                this.columnXML_InvestTranDet = new global::System.Data.DataColumn("XML_InvestTranDet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_InvestTranDet);
                this.columnXML_InvestTranDetOth = new global::System.Data.DataColumn("XML_InvestTranDetOth", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_InvestTranDetOth);
                this.columnXML_InvestTranROI = new global::System.Data.DataColumn("XML_InvestTranROI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_InvestTranROI);
                this.columnXML_InvestDocumentDet = new global::System.Data.DataColumn("XML_InvestDocumentDet", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_InvestDocumentDet);
                this.columnXML_Interest_Det = new global::System.Data.DataColumn("XML_Interest_Det", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_Interest_Det);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvest_Header_ID}, true));
                this.columnInvest_Header_ID.AutoIncrement = true;
                this.columnInvest_Header_ID.AutoIncrementSeed = -1;
                this.columnInvest_Header_ID.AutoIncrementStep = -1;
                this.columnInvest_Header_ID.AllowDBNull = false;
                this.columnInvest_Header_ID.ReadOnly = true;
                this.columnInvest_Header_ID.Unique = true;
                this.columnLocation_Code.MaxLength = 50;
                this.columnInvestment_Code.MaxLength = 50;
                this.columnInvestment_Tran_No.MaxLength = 50;
                this.columnEntity_Code.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_HDRRow NewFA_INVESTMENT_TRAN_HDRRow() {
                return ((FA_INVESTMENT_TRAN_HDRRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_INVESTMENT_TRAN_HDRRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_INVESTMENT_TRAN_HDRRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_INVESTMENT_TRAN_HDRRowChanged != null)) {
                    this.FA_INVESTMENT_TRAN_HDRRowChanged(this, new FA_INVESTMENT_TRAN_HDRRowChangeEvent(((FA_INVESTMENT_TRAN_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_INVESTMENT_TRAN_HDRRowChanging != null)) {
                    this.FA_INVESTMENT_TRAN_HDRRowChanging(this, new FA_INVESTMENT_TRAN_HDRRowChangeEvent(((FA_INVESTMENT_TRAN_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_INVESTMENT_TRAN_HDRRowDeleted != null)) {
                    this.FA_INVESTMENT_TRAN_HDRRowDeleted(this, new FA_INVESTMENT_TRAN_HDRRowChangeEvent(((FA_INVESTMENT_TRAN_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_INVESTMENT_TRAN_HDRRowDeleting != null)) {
                    this.FA_INVESTMENT_TRAN_HDRRowDeleting(this, new FA_INVESTMENT_TRAN_HDRRowChangeEvent(((FA_INVESTMENT_TRAN_HDRRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_INVESTMENT_TRAN_HDRRow(FA_INVESTMENT_TRAN_HDRRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_INVESTMENT_TRAN_HDRDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_INVESTMENT_TRAN_DTLDataTable : global::System.Data.TypedTableBase<FA_INVESTMENT_TRAN_DTLRow> {
            
            private global::System.Data.DataColumn columnInvst_Tran_Det_ID;
            
            private global::System.Data.DataColumn columnInvest_Header_ID;
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnLocation_Code;
            
            private global::System.Data.DataColumn columnActivity;
            
            private global::System.Data.DataColumn columnInvestment_Tran_No;
            
            private global::System.Data.DataColumn columnInvest_Link_Key;
            
            private global::System.Data.DataColumn columnNoofUnits;
            
            private global::System.Data.DataColumn columnUnit_Value;
            
            private global::System.Data.DataColumn columnMarket_Value;
            
            private global::System.Data.DataColumn columnInvst_DInvst_Amount;
            
            private global::System.Data.DataColumn columnTenureType_Lookup;
            
            private global::System.Data.DataColumn columnTenure_ID;
            
            private global::System.Data.DataColumn columnTenure_Value;
            
            private global::System.Data.DataColumn columnMaturity_Date;
            
            private global::System.Data.DataColumn columnOther_Charges;
            
            private global::System.Data.DataColumn columnTaxes;
            
            private global::System.Data.DataColumn columnTotal_Amount;
            
            private global::System.Data.DataColumn columnProfit_Loss;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_On;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_On;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTLDataTable() {
                this.TableName = "FA_INVESTMENT_TRAN_DTL";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_DTLDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_INVESTMENT_TRAN_DTLDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invst_Tran_Det_IDColumn {
                get {
                    return this.columnInvst_Tran_Det_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invest_Header_IDColumn {
                get {
                    return this.columnInvest_Header_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_CodeColumn {
                get {
                    return this.columnLocation_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActivityColumn {
                get {
                    return this.columnActivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_Tran_NoColumn {
                get {
                    return this.columnInvestment_Tran_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invest_Link_KeyColumn {
                get {
                    return this.columnInvest_Link_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NoofUnitsColumn {
                get {
                    return this.columnNoofUnits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Unit_ValueColumn {
                get {
                    return this.columnUnit_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Market_ValueColumn {
                get {
                    return this.columnMarket_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invst_DInvst_AmountColumn {
                get {
                    return this.columnInvst_DInvst_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TenureType_LookupColumn {
                get {
                    return this.columnTenureType_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tenure_IDColumn {
                get {
                    return this.columnTenure_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tenure_ValueColumn {
                get {
                    return this.columnTenure_Value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Maturity_DateColumn {
                get {
                    return this.columnMaturity_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Other_ChargesColumn {
                get {
                    return this.columnOther_Charges;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TaxesColumn {
                get {
                    return this.columnTaxes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Total_AmountColumn {
                get {
                    return this.columnTotal_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Profit_LossColumn {
                get {
                    return this.columnProfit_Loss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_OnColumn {
                get {
                    return this.columnCreated_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_OnColumn {
                get {
                    return this.columnModified_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTLRow this[int index] {
                get {
                    return ((FA_INVESTMENT_TRAN_DTLRow)(this.Rows[index]));
                }
            }
            
            public event FA_INVESTMENT_TRAN_DTLRowChangeEventHandler FA_INVESTMENT_TRAN_DTLRowChanging;
            
            public event FA_INVESTMENT_TRAN_DTLRowChangeEventHandler FA_INVESTMENT_TRAN_DTLRowChanged;
            
            public event FA_INVESTMENT_TRAN_DTLRowChangeEventHandler FA_INVESTMENT_TRAN_DTLRowDeleting;
            
            public event FA_INVESTMENT_TRAN_DTLRowChangeEventHandler FA_INVESTMENT_TRAN_DTLRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_INVESTMENT_TRAN_DTLRow(FA_INVESTMENT_TRAN_DTLRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTLRow AddFA_INVESTMENT_TRAN_DTLRow(
                        int Invest_Header_ID, 
                        int Company_ID, 
                        int Location_ID, 
                        string Location_Code, 
                        int Activity, 
                        string Investment_Tran_No, 
                        int Invest_Link_Key, 
                        int NoofUnits, 
                        decimal Unit_Value, 
                        decimal Market_Value, 
                        decimal Invst_DInvst_Amount, 
                        int TenureType_Lookup, 
                        int Tenure_ID, 
                        int Tenure_Value, 
                        System.DateTime Maturity_Date, 
                        decimal Other_Charges, 
                        decimal Taxes, 
                        decimal Total_Amount, 
                        decimal Profit_Loss, 
                        int Created_By, 
                        System.DateTime Created_On, 
                        int Modified_By, 
                        System.DateTime Modified_On) {
                FA_INVESTMENT_TRAN_DTLRow rowFA_INVESTMENT_TRAN_DTLRow = ((FA_INVESTMENT_TRAN_DTLRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Invest_Header_ID,
                        Company_ID,
                        Location_ID,
                        Location_Code,
                        Activity,
                        Investment_Tran_No,
                        Invest_Link_Key,
                        NoofUnits,
                        Unit_Value,
                        Market_Value,
                        Invst_DInvst_Amount,
                        TenureType_Lookup,
                        Tenure_ID,
                        Tenure_Value,
                        Maturity_Date,
                        Other_Charges,
                        Taxes,
                        Total_Amount,
                        Profit_Loss,
                        Created_By,
                        Created_On,
                        Modified_By,
                        Modified_On};
                rowFA_INVESTMENT_TRAN_DTLRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_INVESTMENT_TRAN_DTLRow);
                return rowFA_INVESTMENT_TRAN_DTLRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTLRow FindByInvst_Tran_Det_ID(int Invst_Tran_Det_ID) {
                return ((FA_INVESTMENT_TRAN_DTLRow)(this.Rows.Find(new object[] {
                            Invst_Tran_Det_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_INVESTMENT_TRAN_DTLDataTable cln = ((FA_INVESTMENT_TRAN_DTLDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_INVESTMENT_TRAN_DTLDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvst_Tran_Det_ID = base.Columns["Invst_Tran_Det_ID"];
                this.columnInvest_Header_ID = base.Columns["Invest_Header_ID"];
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnLocation_Code = base.Columns["Location_Code"];
                this.columnActivity = base.Columns["Activity"];
                this.columnInvestment_Tran_No = base.Columns["Investment_Tran_No"];
                this.columnInvest_Link_Key = base.Columns["Invest_Link_Key"];
                this.columnNoofUnits = base.Columns["NoofUnits"];
                this.columnUnit_Value = base.Columns["Unit_Value"];
                this.columnMarket_Value = base.Columns["Market_Value"];
                this.columnInvst_DInvst_Amount = base.Columns["Invst_DInvst_Amount"];
                this.columnTenureType_Lookup = base.Columns["TenureType_Lookup"];
                this.columnTenure_ID = base.Columns["Tenure_ID"];
                this.columnTenure_Value = base.Columns["Tenure_Value"];
                this.columnMaturity_Date = base.Columns["Maturity_Date"];
                this.columnOther_Charges = base.Columns["Other_Charges"];
                this.columnTaxes = base.Columns["Taxes"];
                this.columnTotal_Amount = base.Columns["Total_Amount"];
                this.columnProfit_Loss = base.Columns["Profit_Loss"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_On = base.Columns["Created_On"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_On = base.Columns["Modified_On"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvst_Tran_Det_ID = new global::System.Data.DataColumn("Invst_Tran_Det_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvst_Tran_Det_ID);
                this.columnInvest_Header_ID = new global::System.Data.DataColumn("Invest_Header_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvest_Header_ID);
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnLocation_Code = new global::System.Data.DataColumn("Location_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_Code);
                this.columnActivity = new global::System.Data.DataColumn("Activity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivity);
                this.columnInvestment_Tran_No = new global::System.Data.DataColumn("Investment_Tran_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Tran_No);
                this.columnInvest_Link_Key = new global::System.Data.DataColumn("Invest_Link_Key", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvest_Link_Key);
                this.columnNoofUnits = new global::System.Data.DataColumn("NoofUnits", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNoofUnits);
                this.columnUnit_Value = new global::System.Data.DataColumn("Unit_Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnit_Value);
                this.columnMarket_Value = new global::System.Data.DataColumn("Market_Value", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarket_Value);
                this.columnInvst_DInvst_Amount = new global::System.Data.DataColumn("Invst_DInvst_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvst_DInvst_Amount);
                this.columnTenureType_Lookup = new global::System.Data.DataColumn("TenureType_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenureType_Lookup);
                this.columnTenure_ID = new global::System.Data.DataColumn("Tenure_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenure_ID);
                this.columnTenure_Value = new global::System.Data.DataColumn("Tenure_Value", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTenure_Value);
                this.columnMaturity_Date = new global::System.Data.DataColumn("Maturity_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaturity_Date);
                this.columnOther_Charges = new global::System.Data.DataColumn("Other_Charges", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOther_Charges);
                this.columnTaxes = new global::System.Data.DataColumn("Taxes", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxes);
                this.columnTotal_Amount = new global::System.Data.DataColumn("Total_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal_Amount);
                this.columnProfit_Loss = new global::System.Data.DataColumn("Profit_Loss", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfit_Loss);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_On = new global::System.Data.DataColumn("Created_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_On);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_On = new global::System.Data.DataColumn("Modified_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_On);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvst_Tran_Det_ID}, true));
                this.columnInvst_Tran_Det_ID.AutoIncrement = true;
                this.columnInvst_Tran_Det_ID.AutoIncrementSeed = -1;
                this.columnInvst_Tran_Det_ID.AutoIncrementStep = -1;
                this.columnInvst_Tran_Det_ID.AllowDBNull = false;
                this.columnInvst_Tran_Det_ID.ReadOnly = true;
                this.columnInvst_Tran_Det_ID.Unique = true;
                this.columnLocation_Code.MaxLength = 50;
                this.columnInvestment_Tran_No.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTLRow NewFA_INVESTMENT_TRAN_DTLRow() {
                return ((FA_INVESTMENT_TRAN_DTLRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_INVESTMENT_TRAN_DTLRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_INVESTMENT_TRAN_DTLRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_INVESTMENT_TRAN_DTLRowChanged != null)) {
                    this.FA_INVESTMENT_TRAN_DTLRowChanged(this, new FA_INVESTMENT_TRAN_DTLRowChangeEvent(((FA_INVESTMENT_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_INVESTMENT_TRAN_DTLRowChanging != null)) {
                    this.FA_INVESTMENT_TRAN_DTLRowChanging(this, new FA_INVESTMENT_TRAN_DTLRowChangeEvent(((FA_INVESTMENT_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_INVESTMENT_TRAN_DTLRowDeleted != null)) {
                    this.FA_INVESTMENT_TRAN_DTLRowDeleted(this, new FA_INVESTMENT_TRAN_DTLRowChangeEvent(((FA_INVESTMENT_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_INVESTMENT_TRAN_DTLRowDeleting != null)) {
                    this.FA_INVESTMENT_TRAN_DTLRowDeleting(this, new FA_INVESTMENT_TRAN_DTLRowChangeEvent(((FA_INVESTMENT_TRAN_DTLRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_INVESTMENT_TRAN_DTLRow(FA_INVESTMENT_TRAN_DTLRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_INVESTMENT_TRAN_DTLDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_INVESTMENT_TRAN_DTL_OTHDataTable : global::System.Data.TypedTableBase<FA_INVESTMENT_TRAN_DTL_OTHRow> {
            
            private global::System.Data.DataColumn columnTrans_Det_Oth_ID;
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnActivity;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnLocation_Code;
            
            private global::System.Data.DataColumn columnInvestment_Tran_No;
            
            private global::System.Data.DataColumn columnDetails_Serial_No;
            
            private global::System.Data.DataColumn columnInvest_Link_Key;
            
            private global::System.Data.DataColumn columnPhysical_Demat;
            
            private global::System.Data.DataColumn columnPhysical_Demat_Lookup;
            
            private global::System.Data.DataColumn columnDP_ID;
            
            private global::System.Data.DataColumn columnDP_Name;
            
            private global::System.Data.DataColumn columnClient_ID;
            
            private global::System.Data.DataColumn columnAccount_Number;
            
            private global::System.Data.DataColumn columnMaintained_At;
            
            private global::System.Data.DataColumn columnBought_Date;
            
            private global::System.Data.DataColumn columnBought_Quantity;
            
            private global::System.Data.DataColumn columnSale_Date;
            
            private global::System.Data.DataColumn columnSale_Quantity;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTL_OTHDataTable() {
                this.TableName = "FA_INVESTMENT_TRAN_DTL_OTH";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_DTL_OTHDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_INVESTMENT_TRAN_DTL_OTHDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Trans_Det_Oth_IDColumn {
                get {
                    return this.columnTrans_Det_Oth_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActivityColumn {
                get {
                    return this.columnActivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_CodeColumn {
                get {
                    return this.columnLocation_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_Tran_NoColumn {
                get {
                    return this.columnInvestment_Tran_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Details_Serial_NoColumn {
                get {
                    return this.columnDetails_Serial_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invest_Link_KeyColumn {
                get {
                    return this.columnInvest_Link_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Physical_DematColumn {
                get {
                    return this.columnPhysical_Demat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Physical_Demat_LookupColumn {
                get {
                    return this.columnPhysical_Demat_Lookup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DP_IDColumn {
                get {
                    return this.columnDP_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DP_NameColumn {
                get {
                    return this.columnDP_Name;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Client_IDColumn {
                get {
                    return this.columnClient_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Account_NumberColumn {
                get {
                    return this.columnAccount_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Maintained_AtColumn {
                get {
                    return this.columnMaintained_At;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bought_DateColumn {
                get {
                    return this.columnBought_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Bought_QuantityColumn {
                get {
                    return this.columnBought_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_DateColumn {
                get {
                    return this.columnSale_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Sale_QuantityColumn {
                get {
                    return this.columnSale_Quantity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTL_OTHRow this[int index] {
                get {
                    return ((FA_INVESTMENT_TRAN_DTL_OTHRow)(this.Rows[index]));
                }
            }
            
            public event FA_INVESTMENT_TRAN_DTL_OTHRowChangeEventHandler FA_INVESTMENT_TRAN_DTL_OTHRowChanging;
            
            public event FA_INVESTMENT_TRAN_DTL_OTHRowChangeEventHandler FA_INVESTMENT_TRAN_DTL_OTHRowChanged;
            
            public event FA_INVESTMENT_TRAN_DTL_OTHRowChangeEventHandler FA_INVESTMENT_TRAN_DTL_OTHRowDeleting;
            
            public event FA_INVESTMENT_TRAN_DTL_OTHRowChangeEventHandler FA_INVESTMENT_TRAN_DTL_OTHRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_INVESTMENT_TRAN_DTL_OTHRow(FA_INVESTMENT_TRAN_DTL_OTHRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTL_OTHRow AddFA_INVESTMENT_TRAN_DTL_OTHRow(
                        int Company_ID, 
                        int Activity, 
                        int Location_ID, 
                        string Location_Code, 
                        string Investment_Tran_No, 
                        int Details_Serial_No, 
                        int Invest_Link_Key, 
                        int Physical_Demat, 
                        int Physical_Demat_Lookup, 
                        string DP_ID, 
                        string DP_Name, 
                        string Client_ID, 
                        string Account_Number, 
                        string Maintained_At, 
                        System.DateTime Bought_Date, 
                        int Bought_Quantity, 
                        System.DateTime Sale_Date, 
                        int Sale_Quantity) {
                FA_INVESTMENT_TRAN_DTL_OTHRow rowFA_INVESTMENT_TRAN_DTL_OTHRow = ((FA_INVESTMENT_TRAN_DTL_OTHRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company_ID,
                        Activity,
                        Location_ID,
                        Location_Code,
                        Investment_Tran_No,
                        Details_Serial_No,
                        Invest_Link_Key,
                        Physical_Demat,
                        Physical_Demat_Lookup,
                        DP_ID,
                        DP_Name,
                        Client_ID,
                        Account_Number,
                        Maintained_At,
                        Bought_Date,
                        Bought_Quantity,
                        Sale_Date,
                        Sale_Quantity};
                rowFA_INVESTMENT_TRAN_DTL_OTHRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_INVESTMENT_TRAN_DTL_OTHRow);
                return rowFA_INVESTMENT_TRAN_DTL_OTHRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTL_OTHRow FindByTrans_Det_Oth_ID(int Trans_Det_Oth_ID) {
                return ((FA_INVESTMENT_TRAN_DTL_OTHRow)(this.Rows.Find(new object[] {
                            Trans_Det_Oth_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_INVESTMENT_TRAN_DTL_OTHDataTable cln = ((FA_INVESTMENT_TRAN_DTL_OTHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_INVESTMENT_TRAN_DTL_OTHDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTrans_Det_Oth_ID = base.Columns["Trans_Det_Oth_ID"];
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnActivity = base.Columns["Activity"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnLocation_Code = base.Columns["Location_Code"];
                this.columnInvestment_Tran_No = base.Columns["Investment_Tran_No"];
                this.columnDetails_Serial_No = base.Columns["Details_Serial_No"];
                this.columnInvest_Link_Key = base.Columns["Invest_Link_Key"];
                this.columnPhysical_Demat = base.Columns["Physical_Demat"];
                this.columnPhysical_Demat_Lookup = base.Columns["Physical_Demat_Lookup"];
                this.columnDP_ID = base.Columns["DP_ID"];
                this.columnDP_Name = base.Columns["DP_Name"];
                this.columnClient_ID = base.Columns["Client_ID"];
                this.columnAccount_Number = base.Columns["Account_Number"];
                this.columnMaintained_At = base.Columns["Maintained_At"];
                this.columnBought_Date = base.Columns["Bought_Date"];
                this.columnBought_Quantity = base.Columns["Bought_Quantity"];
                this.columnSale_Date = base.Columns["Sale_Date"];
                this.columnSale_Quantity = base.Columns["Sale_Quantity"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTrans_Det_Oth_ID = new global::System.Data.DataColumn("Trans_Det_Oth_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrans_Det_Oth_ID);
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnActivity = new global::System.Data.DataColumn("Activity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivity);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnLocation_Code = new global::System.Data.DataColumn("Location_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_Code);
                this.columnInvestment_Tran_No = new global::System.Data.DataColumn("Investment_Tran_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Tran_No);
                this.columnDetails_Serial_No = new global::System.Data.DataColumn("Details_Serial_No", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetails_Serial_No);
                this.columnInvest_Link_Key = new global::System.Data.DataColumn("Invest_Link_Key", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvest_Link_Key);
                this.columnPhysical_Demat = new global::System.Data.DataColumn("Physical_Demat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysical_Demat);
                this.columnPhysical_Demat_Lookup = new global::System.Data.DataColumn("Physical_Demat_Lookup", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhysical_Demat_Lookup);
                this.columnDP_ID = new global::System.Data.DataColumn("DP_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDP_ID);
                this.columnDP_Name = new global::System.Data.DataColumn("DP_Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDP_Name);
                this.columnClient_ID = new global::System.Data.DataColumn("Client_ID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClient_ID);
                this.columnAccount_Number = new global::System.Data.DataColumn("Account_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccount_Number);
                this.columnMaintained_At = new global::System.Data.DataColumn("Maintained_At", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaintained_At);
                this.columnBought_Date = new global::System.Data.DataColumn("Bought_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBought_Date);
                this.columnBought_Quantity = new global::System.Data.DataColumn("Bought_Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBought_Quantity);
                this.columnSale_Date = new global::System.Data.DataColumn("Sale_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Date);
                this.columnSale_Quantity = new global::System.Data.DataColumn("Sale_Quantity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSale_Quantity);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTrans_Det_Oth_ID}, true));
                this.columnTrans_Det_Oth_ID.AutoIncrement = true;
                this.columnTrans_Det_Oth_ID.AutoIncrementSeed = -1;
                this.columnTrans_Det_Oth_ID.AutoIncrementStep = -1;
                this.columnTrans_Det_Oth_ID.AllowDBNull = false;
                this.columnTrans_Det_Oth_ID.ReadOnly = true;
                this.columnTrans_Det_Oth_ID.Unique = true;
                this.columnLocation_Code.MaxLength = 50;
                this.columnInvestment_Tran_No.MaxLength = 50;
                this.columnDP_ID.MaxLength = 25;
                this.columnDP_Name.MaxLength = 100;
                this.columnClient_ID.MaxLength = 25;
                this.columnAccount_Number.MaxLength = 25;
                this.columnMaintained_At.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTL_OTHRow NewFA_INVESTMENT_TRAN_DTL_OTHRow() {
                return ((FA_INVESTMENT_TRAN_DTL_OTHRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_INVESTMENT_TRAN_DTL_OTHRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_INVESTMENT_TRAN_DTL_OTHRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_INVESTMENT_TRAN_DTL_OTHRowChanged != null)) {
                    this.FA_INVESTMENT_TRAN_DTL_OTHRowChanged(this, new FA_INVESTMENT_TRAN_DTL_OTHRowChangeEvent(((FA_INVESTMENT_TRAN_DTL_OTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_INVESTMENT_TRAN_DTL_OTHRowChanging != null)) {
                    this.FA_INVESTMENT_TRAN_DTL_OTHRowChanging(this, new FA_INVESTMENT_TRAN_DTL_OTHRowChangeEvent(((FA_INVESTMENT_TRAN_DTL_OTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_INVESTMENT_TRAN_DTL_OTHRowDeleted != null)) {
                    this.FA_INVESTMENT_TRAN_DTL_OTHRowDeleted(this, new FA_INVESTMENT_TRAN_DTL_OTHRowChangeEvent(((FA_INVESTMENT_TRAN_DTL_OTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_INVESTMENT_TRAN_DTL_OTHRowDeleting != null)) {
                    this.FA_INVESTMENT_TRAN_DTL_OTHRowDeleting(this, new FA_INVESTMENT_TRAN_DTL_OTHRowChangeEvent(((FA_INVESTMENT_TRAN_DTL_OTHRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_INVESTMENT_TRAN_DTL_OTHRow(FA_INVESTMENT_TRAN_DTL_OTHRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_INVESTMENT_TRAN_DTL_OTHDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_INVESTMENT_TRAN_ROIDataTable : global::System.Data.TypedTableBase<FA_INVESTMENT_TRAN_ROIRow> {
            
            private global::System.Data.DataColumn columnInvst_Tran_ROI_ID;
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnActivity;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnLocation_Code;
            
            private global::System.Data.DataColumn columnInvestment_Tran_No;
            
            private global::System.Data.DataColumn columnInvest_Link_Key;
            
            private global::System.Data.DataColumn columnInterest_Due_On;
            
            private global::System.Data.DataColumn columnInterest_Due_Amount;
            
            private global::System.Data.DataColumn columnTax_Deduction_Amount;
            
            private global::System.Data.DataColumn columnReceipt_Ref_No;
            
            private global::System.Data.DataColumn columnReceipt_Amount;
            
            private global::System.Data.DataColumn columnStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_ROIDataTable() {
                this.TableName = "FA_INVESTMENT_TRAN_ROI";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_ROIDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_INVESTMENT_TRAN_ROIDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invst_Tran_ROI_IDColumn {
                get {
                    return this.columnInvst_Tran_ROI_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ActivityColumn {
                get {
                    return this.columnActivity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_CodeColumn {
                get {
                    return this.columnLocation_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Investment_Tran_NoColumn {
                get {
                    return this.columnInvestment_Tran_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Invest_Link_KeyColumn {
                get {
                    return this.columnInvest_Link_Key;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interest_Due_OnColumn {
                get {
                    return this.columnInterest_Due_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Interest_Due_AmountColumn {
                get {
                    return this.columnInterest_Due_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tax_Deduction_AmountColumn {
                get {
                    return this.columnTax_Deduction_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_Ref_NoColumn {
                get {
                    return this.columnReceipt_Ref_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Receipt_AmountColumn {
                get {
                    return this.columnReceipt_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_ROIRow this[int index] {
                get {
                    return ((FA_INVESTMENT_TRAN_ROIRow)(this.Rows[index]));
                }
            }
            
            public event FA_INVESTMENT_TRAN_ROIRowChangeEventHandler FA_INVESTMENT_TRAN_ROIRowChanging;
            
            public event FA_INVESTMENT_TRAN_ROIRowChangeEventHandler FA_INVESTMENT_TRAN_ROIRowChanged;
            
            public event FA_INVESTMENT_TRAN_ROIRowChangeEventHandler FA_INVESTMENT_TRAN_ROIRowDeleting;
            
            public event FA_INVESTMENT_TRAN_ROIRowChangeEventHandler FA_INVESTMENT_TRAN_ROIRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_INVESTMENT_TRAN_ROIRow(FA_INVESTMENT_TRAN_ROIRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_ROIRow AddFA_INVESTMENT_TRAN_ROIRow(int Company_ID, int Activity, int Location_ID, string Location_Code, string Investment_Tran_No, int Invest_Link_Key, System.DateTime Interest_Due_On, decimal Interest_Due_Amount, decimal Tax_Deduction_Amount, string Receipt_Ref_No, decimal Receipt_Amount, string Status) {
                FA_INVESTMENT_TRAN_ROIRow rowFA_INVESTMENT_TRAN_ROIRow = ((FA_INVESTMENT_TRAN_ROIRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Company_ID,
                        Activity,
                        Location_ID,
                        Location_Code,
                        Investment_Tran_No,
                        Invest_Link_Key,
                        Interest_Due_On,
                        Interest_Due_Amount,
                        Tax_Deduction_Amount,
                        Receipt_Ref_No,
                        Receipt_Amount,
                        Status};
                rowFA_INVESTMENT_TRAN_ROIRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_INVESTMENT_TRAN_ROIRow);
                return rowFA_INVESTMENT_TRAN_ROIRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_ROIRow FindByInvst_Tran_ROI_ID(int Invst_Tran_ROI_ID) {
                return ((FA_INVESTMENT_TRAN_ROIRow)(this.Rows.Find(new object[] {
                            Invst_Tran_ROI_ID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_INVESTMENT_TRAN_ROIDataTable cln = ((FA_INVESTMENT_TRAN_ROIDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_INVESTMENT_TRAN_ROIDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnInvst_Tran_ROI_ID = base.Columns["Invst_Tran_ROI_ID"];
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnActivity = base.Columns["Activity"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnLocation_Code = base.Columns["Location_Code"];
                this.columnInvestment_Tran_No = base.Columns["Investment_Tran_No"];
                this.columnInvest_Link_Key = base.Columns["Invest_Link_Key"];
                this.columnInterest_Due_On = base.Columns["Interest_Due_On"];
                this.columnInterest_Due_Amount = base.Columns["Interest_Due_Amount"];
                this.columnTax_Deduction_Amount = base.Columns["Tax_Deduction_Amount"];
                this.columnReceipt_Ref_No = base.Columns["Receipt_Ref_No"];
                this.columnReceipt_Amount = base.Columns["Receipt_Amount"];
                this.columnStatus = base.Columns["Status"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnInvst_Tran_ROI_ID = new global::System.Data.DataColumn("Invst_Tran_ROI_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvst_Tran_ROI_ID);
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnActivity = new global::System.Data.DataColumn("Activity", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnActivity);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnLocation_Code = new global::System.Data.DataColumn("Location_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_Code);
                this.columnInvestment_Tran_No = new global::System.Data.DataColumn("Investment_Tran_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvestment_Tran_No);
                this.columnInvest_Link_Key = new global::System.Data.DataColumn("Invest_Link_Key", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInvest_Link_Key);
                this.columnInterest_Due_On = new global::System.Data.DataColumn("Interest_Due_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterest_Due_On);
                this.columnInterest_Due_Amount = new global::System.Data.DataColumn("Interest_Due_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInterest_Due_Amount);
                this.columnTax_Deduction_Amount = new global::System.Data.DataColumn("Tax_Deduction_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTax_Deduction_Amount);
                this.columnReceipt_Ref_No = new global::System.Data.DataColumn("Receipt_Ref_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_Ref_No);
                this.columnReceipt_Amount = new global::System.Data.DataColumn("Receipt_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReceipt_Amount);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnInvst_Tran_ROI_ID}, true));
                this.columnInvst_Tran_ROI_ID.AutoIncrement = true;
                this.columnInvst_Tran_ROI_ID.AutoIncrementSeed = -1;
                this.columnInvst_Tran_ROI_ID.AutoIncrementStep = -1;
                this.columnInvst_Tran_ROI_ID.AllowDBNull = false;
                this.columnInvst_Tran_ROI_ID.ReadOnly = true;
                this.columnInvst_Tran_ROI_ID.Unique = true;
                this.columnLocation_Code.MaxLength = 50;
                this.columnInvestment_Tran_No.Caption = "Investment_No";
                this.columnInvestment_Tran_No.MaxLength = 50;
                this.columnReceipt_Ref_No.MaxLength = 50;
                this.columnStatus.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_ROIRow NewFA_INVESTMENT_TRAN_ROIRow() {
                return ((FA_INVESTMENT_TRAN_ROIRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_INVESTMENT_TRAN_ROIRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_INVESTMENT_TRAN_ROIRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_INVESTMENT_TRAN_ROIRowChanged != null)) {
                    this.FA_INVESTMENT_TRAN_ROIRowChanged(this, new FA_INVESTMENT_TRAN_ROIRowChangeEvent(((FA_INVESTMENT_TRAN_ROIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_INVESTMENT_TRAN_ROIRowChanging != null)) {
                    this.FA_INVESTMENT_TRAN_ROIRowChanging(this, new FA_INVESTMENT_TRAN_ROIRowChangeEvent(((FA_INVESTMENT_TRAN_ROIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_INVESTMENT_TRAN_ROIRowDeleted != null)) {
                    this.FA_INVESTMENT_TRAN_ROIRowDeleted(this, new FA_INVESTMENT_TRAN_ROIRowChangeEvent(((FA_INVESTMENT_TRAN_ROIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_INVESTMENT_TRAN_ROIRowDeleting != null)) {
                    this.FA_INVESTMENT_TRAN_ROIRowDeleting(this, new FA_INVESTMENT_TRAN_ROIRowChangeEvent(((FA_INVESTMENT_TRAN_ROIRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_INVESTMENT_TRAN_ROIRow(FA_INVESTMENT_TRAN_ROIRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_INVESTMENT_TRAN_ROIDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_FUNDER_LOADING_MSTDataTable : global::System.Data.TypedTableBase<FA_FUNDER_LOADING_MSTRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnFunder_Loading_ID;
            
            private global::System.Data.DataColumn columnFunder_Loading_No;
            
            private global::System.Data.DataColumn columnFunder_ID;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnLast_Allocated_Date;
            
            private global::System.Data.DataColumn columnAllocation_Date;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_On;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_On;
            
            private global::System.Data.DataColumn columnXML_Loading_DTL;
            
            private global::System.Data.DataColumn columnOption;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_LOADING_MSTDataTable() {
                this.TableName = "FA_FUNDER_LOADING_MST";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_LOADING_MSTDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_FUNDER_LOADING_MSTDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Loading_IDColumn {
                get {
                    return this.columnFunder_Loading_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Loading_NoColumn {
                get {
                    return this.columnFunder_Loading_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_IDColumn {
                get {
                    return this.columnFunder_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Last_Allocated_DateColumn {
                get {
                    return this.columnLast_Allocated_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Allocation_DateColumn {
                get {
                    return this.columnAllocation_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_OnColumn {
                get {
                    return this.columnCreated_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_OnColumn {
                get {
                    return this.columnModified_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_Loading_DTLColumn {
                get {
                    return this.columnXML_Loading_DTL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OptionColumn {
                get {
                    return this.columnOption;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_LOADING_MSTRow this[int index] {
                get {
                    return ((FA_FUNDER_LOADING_MSTRow)(this.Rows[index]));
                }
            }
            
            public event FA_FUNDER_LOADING_MSTRowChangeEventHandler FA_FUNDER_LOADING_MSTRowChanging;
            
            public event FA_FUNDER_LOADING_MSTRowChangeEventHandler FA_FUNDER_LOADING_MSTRowChanged;
            
            public event FA_FUNDER_LOADING_MSTRowChangeEventHandler FA_FUNDER_LOADING_MSTRowDeleting;
            
            public event FA_FUNDER_LOADING_MSTRowChangeEventHandler FA_FUNDER_LOADING_MSTRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_FUNDER_LOADING_MSTRow(FA_FUNDER_LOADING_MSTRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_LOADING_MSTRow AddFA_FUNDER_LOADING_MSTRow(int Company_ID, int Funder_Loading_ID, string Funder_Loading_No, int Funder_ID, int Location_ID, System.DateTime Last_Allocated_Date, System.DateTime Allocation_Date, int Created_By, System.DateTime Created_On, int Modified_By, System.DateTime Modified_On, string XML_Loading_DTL, int Option) {
                FA_FUNDER_LOADING_MSTRow rowFA_FUNDER_LOADING_MSTRow = ((FA_FUNDER_LOADING_MSTRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        Funder_Loading_ID,
                        Funder_Loading_No,
                        Funder_ID,
                        Location_ID,
                        Last_Allocated_Date,
                        Allocation_Date,
                        Created_By,
                        Created_On,
                        Modified_By,
                        Modified_On,
                        XML_Loading_DTL,
                        Option};
                rowFA_FUNDER_LOADING_MSTRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_FUNDER_LOADING_MSTRow);
                return rowFA_FUNDER_LOADING_MSTRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_FUNDER_LOADING_MSTDataTable cln = ((FA_FUNDER_LOADING_MSTDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_FUNDER_LOADING_MSTDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnFunder_Loading_ID = base.Columns["Funder_Loading_ID"];
                this.columnFunder_Loading_No = base.Columns["Funder_Loading_No"];
                this.columnFunder_ID = base.Columns["Funder_ID"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnLast_Allocated_Date = base.Columns["Last_Allocated_Date"];
                this.columnAllocation_Date = base.Columns["Allocation_Date"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_On = base.Columns["Created_On"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_On = base.Columns["Modified_On"];
                this.columnXML_Loading_DTL = base.Columns["XML_Loading_DTL"];
                this.columnOption = base.Columns["Option"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnFunder_Loading_ID = new global::System.Data.DataColumn("Funder_Loading_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Loading_ID);
                this.columnFunder_Loading_No = new global::System.Data.DataColumn("Funder_Loading_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Loading_No);
                this.columnFunder_ID = new global::System.Data.DataColumn("Funder_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_ID);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnLast_Allocated_Date = new global::System.Data.DataColumn("Last_Allocated_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLast_Allocated_Date);
                this.columnAllocation_Date = new global::System.Data.DataColumn("Allocation_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllocation_Date);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_On = new global::System.Data.DataColumn("Created_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_On);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_On = new global::System.Data.DataColumn("Modified_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_On);
                this.columnXML_Loading_DTL = new global::System.Data.DataColumn("XML_Loading_DTL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_Loading_DTL);
                this.columnOption = new global::System.Data.DataColumn("Option", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOption);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_LOADING_MSTRow NewFA_FUNDER_LOADING_MSTRow() {
                return ((FA_FUNDER_LOADING_MSTRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_FUNDER_LOADING_MSTRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_FUNDER_LOADING_MSTRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_FUNDER_LOADING_MSTRowChanged != null)) {
                    this.FA_FUNDER_LOADING_MSTRowChanged(this, new FA_FUNDER_LOADING_MSTRowChangeEvent(((FA_FUNDER_LOADING_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_FUNDER_LOADING_MSTRowChanging != null)) {
                    this.FA_FUNDER_LOADING_MSTRowChanging(this, new FA_FUNDER_LOADING_MSTRowChangeEvent(((FA_FUNDER_LOADING_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_FUNDER_LOADING_MSTRowDeleted != null)) {
                    this.FA_FUNDER_LOADING_MSTRowDeleted(this, new FA_FUNDER_LOADING_MSTRowChangeEvent(((FA_FUNDER_LOADING_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_FUNDER_LOADING_MSTRowDeleting != null)) {
                    this.FA_FUNDER_LOADING_MSTRowDeleting(this, new FA_FUNDER_LOADING_MSTRowChangeEvent(((FA_FUNDER_LOADING_MSTRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_FUNDER_LOADING_MSTRow(FA_FUNDER_LOADING_MSTRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_FUNDER_LOADING_MSTDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class FA_FUNDER_INT_DUEDataTable : global::System.Data.TypedTableBase<FA_FUNDER_INT_DUERow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnLocation_ID;
            
            private global::System.Data.DataColumn columnLocation_Code;
            
            private global::System.Data.DataColumn columnFunder_Int_Due_Id;
            
            private global::System.Data.DataColumn columnFunder_Tran_ID;
            
            private global::System.Data.DataColumn columnFunder_ID;
            
            private global::System.Data.DataColumn columnSerial_Number;
            
            private global::System.Data.DataColumn columnFund_Ref_No;
            
            private global::System.Data.DataColumn columnDue_Date;
            
            private global::System.Data.DataColumn columnDue_Amount;
            
            private global::System.Data.DataColumn columnPayment_Ref_No;
            
            private global::System.Data.DataColumn columnPayment_Amount;
            
            private global::System.Data.DataColumn columnRemarks;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_On;
            
            private global::System.Data.DataColumn columnModified_By;
            
            private global::System.Data.DataColumn columnModified_On;
            
            private global::System.Data.DataColumn columnXML_Tran_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_INT_DUEDataTable() {
                this.TableName = "FA_FUNDER_INT_DUE";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_INT_DUEDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected FA_FUNDER_INT_DUEDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_IDColumn {
                get {
                    return this.columnLocation_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Location_CodeColumn {
                get {
                    return this.columnLocation_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Int_Due_IdColumn {
                get {
                    return this.columnFunder_Int_Due_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_Tran_IDColumn {
                get {
                    return this.columnFunder_Tran_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Funder_IDColumn {
                get {
                    return this.columnFunder_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Serial_NumberColumn {
                get {
                    return this.columnSerial_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fund_Ref_NoColumn {
                get {
                    return this.columnFund_Ref_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Due_DateColumn {
                get {
                    return this.columnDue_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Due_AmountColumn {
                get {
                    return this.columnDue_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Payment_Ref_NoColumn {
                get {
                    return this.columnPayment_Ref_No;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Payment_AmountColumn {
                get {
                    return this.columnPayment_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn RemarksColumn {
                get {
                    return this.columnRemarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_OnColumn {
                get {
                    return this.columnCreated_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_ByColumn {
                get {
                    return this.columnModified_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Modified_OnColumn {
                get {
                    return this.columnModified_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XML_Tran_DTLColumn {
                get {
                    return this.columnXML_Tran_DTL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_INT_DUERow this[int index] {
                get {
                    return ((FA_FUNDER_INT_DUERow)(this.Rows[index]));
                }
            }
            
            public event FA_FUNDER_INT_DUERowChangeEventHandler FA_FUNDER_INT_DUERowChanging;
            
            public event FA_FUNDER_INT_DUERowChangeEventHandler FA_FUNDER_INT_DUERowChanged;
            
            public event FA_FUNDER_INT_DUERowChangeEventHandler FA_FUNDER_INT_DUERowDeleting;
            
            public event FA_FUNDER_INT_DUERowChangeEventHandler FA_FUNDER_INT_DUERowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddFA_FUNDER_INT_DUERow(FA_FUNDER_INT_DUERow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_INT_DUERow AddFA_FUNDER_INT_DUERow(
                        int Company_ID, 
                        int Location_ID, 
                        string Location_Code, 
                        int Funder_Tran_ID, 
                        int Funder_ID, 
                        int Serial_Number, 
                        string Fund_Ref_No, 
                        System.DateTime Due_Date, 
                        decimal Due_Amount, 
                        string Payment_Ref_No, 
                        decimal Payment_Amount, 
                        string Remarks, 
                        int Created_By, 
                        System.DateTime Created_On, 
                        int Modified_By, 
                        System.DateTime Modified_On, 
                        string XML_Tran_DTL) {
                FA_FUNDER_INT_DUERow rowFA_FUNDER_INT_DUERow = ((FA_FUNDER_INT_DUERow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        Location_ID,
                        Location_Code,
                        null,
                        Funder_Tran_ID,
                        Funder_ID,
                        Serial_Number,
                        Fund_Ref_No,
                        Due_Date,
                        Due_Amount,
                        Payment_Ref_No,
                        Payment_Amount,
                        Remarks,
                        Created_By,
                        Created_On,
                        Modified_By,
                        Modified_On,
                        XML_Tran_DTL};
                rowFA_FUNDER_INT_DUERow.ItemArray = columnValuesArray;
                this.Rows.Add(rowFA_FUNDER_INT_DUERow);
                return rowFA_FUNDER_INT_DUERow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_INT_DUERow FindByFunder_Int_Due_Id(decimal Funder_Int_Due_Id) {
                return ((FA_FUNDER_INT_DUERow)(this.Rows.Find(new object[] {
                            Funder_Int_Due_Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                FA_FUNDER_INT_DUEDataTable cln = ((FA_FUNDER_INT_DUEDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new FA_FUNDER_INT_DUEDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnLocation_ID = base.Columns["Location_ID"];
                this.columnLocation_Code = base.Columns["Location_Code"];
                this.columnFunder_Int_Due_Id = base.Columns["Funder_Int_Due_Id"];
                this.columnFunder_Tran_ID = base.Columns["Funder_Tran_ID"];
                this.columnFunder_ID = base.Columns["Funder_ID"];
                this.columnSerial_Number = base.Columns["Serial_Number"];
                this.columnFund_Ref_No = base.Columns["Fund_Ref_No"];
                this.columnDue_Date = base.Columns["Due_Date"];
                this.columnDue_Amount = base.Columns["Due_Amount"];
                this.columnPayment_Ref_No = base.Columns["Payment_Ref_No"];
                this.columnPayment_Amount = base.Columns["Payment_Amount"];
                this.columnRemarks = base.Columns["Remarks"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_On = base.Columns["Created_On"];
                this.columnModified_By = base.Columns["Modified_By"];
                this.columnModified_On = base.Columns["Modified_On"];
                this.columnXML_Tran_DTL = base.Columns["XML_Tran_DTL"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnLocation_ID = new global::System.Data.DataColumn("Location_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_ID);
                this.columnLocation_Code = new global::System.Data.DataColumn("Location_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation_Code);
                this.columnFunder_Int_Due_Id = new global::System.Data.DataColumn("Funder_Int_Due_Id", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Int_Due_Id);
                this.columnFunder_Tran_ID = new global::System.Data.DataColumn("Funder_Tran_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_Tran_ID);
                this.columnFunder_ID = new global::System.Data.DataColumn("Funder_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFunder_ID);
                this.columnSerial_Number = new global::System.Data.DataColumn("Serial_Number", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSerial_Number);
                this.columnFund_Ref_No = new global::System.Data.DataColumn("Fund_Ref_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFund_Ref_No);
                this.columnDue_Date = new global::System.Data.DataColumn("Due_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDue_Date);
                this.columnDue_Amount = new global::System.Data.DataColumn("Due_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDue_Amount);
                this.columnPayment_Ref_No = new global::System.Data.DataColumn("Payment_Ref_No", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Ref_No);
                this.columnPayment_Amount = new global::System.Data.DataColumn("Payment_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPayment_Amount);
                this.columnRemarks = new global::System.Data.DataColumn("Remarks", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRemarks);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_On = new global::System.Data.DataColumn("Created_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_On);
                this.columnModified_By = new global::System.Data.DataColumn("Modified_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_By);
                this.columnModified_On = new global::System.Data.DataColumn("Modified_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified_On);
                this.columnXML_Tran_DTL = new global::System.Data.DataColumn("XML_Tran_DTL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXML_Tran_DTL);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnFunder_Int_Due_Id}, true));
                this.columnLocation_Code.MaxLength = 12;
                this.columnFunder_Int_Due_Id.AutoIncrement = true;
                this.columnFunder_Int_Due_Id.AutoIncrementSeed = -1;
                this.columnFunder_Int_Due_Id.AutoIncrementStep = -1;
                this.columnFunder_Int_Due_Id.AllowDBNull = false;
                this.columnFunder_Int_Due_Id.ReadOnly = true;
                this.columnFunder_Int_Due_Id.Unique = true;
                this.columnFunder_Tran_ID.AllowDBNull = false;
                this.columnSerial_Number.AllowDBNull = false;
                this.columnFund_Ref_No.AllowDBNull = false;
                this.columnFund_Ref_No.MaxLength = 50;
                this.columnPayment_Ref_No.MaxLength = 50;
                this.columnRemarks.MaxLength = 200;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_INT_DUERow NewFA_FUNDER_INT_DUERow() {
                return ((FA_FUNDER_INT_DUERow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new FA_FUNDER_INT_DUERow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(FA_FUNDER_INT_DUERow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.FA_FUNDER_INT_DUERowChanged != null)) {
                    this.FA_FUNDER_INT_DUERowChanged(this, new FA_FUNDER_INT_DUERowChangeEvent(((FA_FUNDER_INT_DUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.FA_FUNDER_INT_DUERowChanging != null)) {
                    this.FA_FUNDER_INT_DUERowChanging(this, new FA_FUNDER_INT_DUERowChangeEvent(((FA_FUNDER_INT_DUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.FA_FUNDER_INT_DUERowDeleted != null)) {
                    this.FA_FUNDER_INT_DUERowDeleted(this, new FA_FUNDER_INT_DUERowChangeEvent(((FA_FUNDER_INT_DUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.FA_FUNDER_INT_DUERowDeleting != null)) {
                    this.FA_FUNDER_INT_DUERowDeleting(this, new FA_FUNDER_INT_DUERowChangeEvent(((FA_FUNDER_INT_DUERow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveFA_FUNDER_INT_DUERow(FA_FUNDER_INT_DUERow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                FunderInvestment ds = new FunderInvestment();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "FA_FUNDER_INT_DUEDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_FUNDER_MSTRow : global::System.Data.DataRow {
            
            private FA_FUNDER_MSTDataTable tableFA_FUNDER_MST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_MSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_FUNDER_MST = ((FA_FUNDER_MSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    return ((int)(this[this.tableFA_FUNDER_MST.Company_IDColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_MST.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_MST.Funder_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Funder_ID\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Funder_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Funder_Code {
                get {
                    return ((string)(this[this.tableFA_FUNDER_MST.Funder_CodeColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_MST.Funder_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GL_Code {
                get {
                    return ((string)(this[this.tableFA_FUNDER_MST.GL_CodeColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_MST.GL_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SL_Code {
                get {
                    return ((string)(this[this.tableFA_FUNDER_MST.SL_CodeColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_MST.SL_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_MST.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Funder_Name {
                get {
                    return ((string)(this[this.tableFA_FUNDER_MST.Funder_NameColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_MST.Funder_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Active {
                get {
                    try {
                        return ((bool)(this[this.tableFA_FUNDER_MST.Is_ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Is_Active\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Is_ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TXN_Date {
                get {
                    return ((global::System.DateTime)(this[this.tableFA_FUNDER_MST.TXN_DateColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_MST.TXN_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_MST.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_MST.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string VAT_Number {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.VAT_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VAT_Number\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.VAT_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TAX_Number {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.TAX_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TAX_Number\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.TAX_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_Website {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_Website\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_EMail {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_EMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_EMail\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_Telephone {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_Telephone\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_Mobile {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_Mobile\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_Pincode {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_Pincode\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_Country {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_Country\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_State {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_State\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_City {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_City\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_Address2 {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_Address2\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Perm_Address1 {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Perm_Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Perm_Address1\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Perm_Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_Website {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_WebsiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_Website\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_WebsiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_EMail {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_EMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_EMail\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_Telephone {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_Telephone\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_Mobile {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_Mobile\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_Pincode {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_PincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_Pincode\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_PincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_Country {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_CountryColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_Country\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_State {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_StateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_State\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_City {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_CityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_City\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_Address2 {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_Address2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_Address2\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Comm_Address1 {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Comm_Address1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Comm_Address1\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Comm_Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_Conditions {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.XML_ConditionsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_Conditions\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.XML_ConditionsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_Bank {
                get {
                    if (this.IsXML_BankNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableFA_FUNDER_MST.XML_BankColumn]));
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.XML_BankColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Base_Rate_Type {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Base_Rate_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Base_Rate_Type\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Base_Rate_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Base_Rate_Value {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_MST.Base_Rate_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Base_Rate_Value\' in table \'FA_FUNDER_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_MST.Base_Rate_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunder_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Funder_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunder_IDNull() {
                this[this.tableFA_FUNDER_MST.Funder_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_FUNDER_MST.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIs_ActiveNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Is_ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIs_ActiveNull() {
                this[this.tableFA_FUNDER_MST.Is_ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableFA_FUNDER_MST.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableFA_FUNDER_MST.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableFA_FUNDER_MST.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsVAT_NumberNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.VAT_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetVAT_NumberNull() {
                this[this.tableFA_FUNDER_MST.VAT_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTAX_NumberNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.TAX_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTAX_NumberNull() {
                this[this.tableFA_FUNDER_MST.TAX_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_WebsiteNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_WebsiteNull() {
                this[this.tableFA_FUNDER_MST.Perm_WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_EMailNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_EMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_EMailNull() {
                this[this.tableFA_FUNDER_MST.Perm_EMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_TelephoneNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_TelephoneNull() {
                this[this.tableFA_FUNDER_MST.Perm_TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_MobileNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_MobileNull() {
                this[this.tableFA_FUNDER_MST.Perm_MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_PincodeNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_PincodeNull() {
                this[this.tableFA_FUNDER_MST.Perm_PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_CountryNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_CountryNull() {
                this[this.tableFA_FUNDER_MST.Perm_CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_StateNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_StateNull() {
                this[this.tableFA_FUNDER_MST.Perm_StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_CityNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_CityNull() {
                this[this.tableFA_FUNDER_MST.Perm_CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_Address2Null() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_Address2Null() {
                this[this.tableFA_FUNDER_MST.Perm_Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPerm_Address1Null() {
                return this.IsNull(this.tableFA_FUNDER_MST.Perm_Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPerm_Address1Null() {
                this[this.tableFA_FUNDER_MST.Perm_Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_WebsiteNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_WebsiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_WebsiteNull() {
                this[this.tableFA_FUNDER_MST.Comm_WebsiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_EMailNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_EMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_EMailNull() {
                this[this.tableFA_FUNDER_MST.Comm_EMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_TelephoneNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_TelephoneNull() {
                this[this.tableFA_FUNDER_MST.Comm_TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_MobileNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_MobileNull() {
                this[this.tableFA_FUNDER_MST.Comm_MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_PincodeNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_PincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_PincodeNull() {
                this[this.tableFA_FUNDER_MST.Comm_PincodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_CountryNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_CountryNull() {
                this[this.tableFA_FUNDER_MST.Comm_CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_StateNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_StateNull() {
                this[this.tableFA_FUNDER_MST.Comm_StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_CityNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_CityNull() {
                this[this.tableFA_FUNDER_MST.Comm_CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_Address2Null() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_Address2Null() {
                this[this.tableFA_FUNDER_MST.Comm_Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsComm_Address1Null() {
                return this.IsNull(this.tableFA_FUNDER_MST.Comm_Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetComm_Address1Null() {
                this[this.tableFA_FUNDER_MST.Comm_Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_ConditionsNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.XML_ConditionsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_ConditionsNull() {
                this[this.tableFA_FUNDER_MST.XML_ConditionsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_BankNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.XML_BankColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_BankNull() {
                this[this.tableFA_FUNDER_MST.XML_BankColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBase_Rate_TypeNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Base_Rate_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBase_Rate_TypeNull() {
                this[this.tableFA_FUNDER_MST.Base_Rate_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBase_Rate_ValueNull() {
                return this.IsNull(this.tableFA_FUNDER_MST.Base_Rate_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBase_Rate_ValueNull() {
                this[this.tableFA_FUNDER_MST.Base_Rate_ValueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_FUNDER_TRAN_MSTRow : global::System.Data.DataRow {
            
            private FA_FUNDER_TRAN_MSTDataTable tableFA_FUNDER_TRAN_MST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_TRAN_MSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_FUNDER_TRAN_MST = ((FA_FUNDER_TRAN_MSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_Tran_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.Funder_Tran_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Funder_Tran_ID\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Funder_Tran_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.Funder_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Funder_ID\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Funder_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Funder_Tran_No {
                get {
                    return ((string)(this[this.tableFA_FUNDER_TRAN_MST.Funder_Tran_NoColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Funder_Tran_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fund_Type {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_TRAN_MST.Fund_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund_Type\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Fund_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Commitment_Amt {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_FUNDER_TRAN_MST.Commitment_AmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Commitment_Amt\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Commitment_AmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Validity_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_TRAN_MST.Validity_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Validity_Date\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Validity_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tenure {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.TenureColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tenure\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.TenureColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Currency_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_TRAN_MST.Currency_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Currency_Code\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Currency_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime TXN_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_TRAN_MST.TXN_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TXN_Date\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.TXN_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_Tran_DTL {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_Tran_DTL\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_Tran_DTL1 {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTL1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_Tran_DTL1\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTL1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.OptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Option\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.OptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int User_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_TRAN_MST.User_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'User_ID\' in table \'FA_FUNDER_TRAN_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_MST.User_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunder_Tran_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Funder_Tran_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunder_Tran_IDNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Funder_Tran_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunder_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Funder_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunder_IDNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Funder_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFund_TypeNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Fund_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFund_TypeNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Fund_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCommitment_AmtNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Commitment_AmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCommitment_AmtNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Commitment_AmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsValidity_DateNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Validity_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetValidity_DateNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Validity_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenureNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.TenureColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenureNull() {
                this[this.tableFA_FUNDER_TRAN_MST.TenureColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCurrency_CodeNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Currency_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCurrency_CodeNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Currency_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableFA_FUNDER_TRAN_MST.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTXN_DateNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.TXN_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTXN_DateNull() {
                this[this.tableFA_FUNDER_TRAN_MST.TXN_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_Tran_DTLNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_Tran_DTLNull() {
                this[this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_Tran_DTL1Null() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTL1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_Tran_DTL1Null() {
                this[this.tableFA_FUNDER_TRAN_MST.XML_Tran_DTL1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOptionNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.OptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOptionNull() {
                this[this.tableFA_FUNDER_TRAN_MST.OptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUser_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_MST.User_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUser_IDNull() {
                this[this.tableFA_FUNDER_TRAN_MST.User_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_FUNDER_TRAN_DTLRow : global::System.Data.DataRow {
            
            private FA_FUNDER_TRAN_DTLDataTable tableFA_FUNDER_TRAN_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_TRAN_DTLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_FUNDER_TRAN_DTL = ((FA_FUNDER_TRAN_DTLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_Tran_Details_ID {
                get {
                    return ((int)(this[this.tableFA_FUNDER_TRAN_DTL.Funder_Tran_Details_IDColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_DTL.Funder_Tran_Details_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_Tran_ID {
                get {
                    return ((int)(this[this.tableFA_FUNDER_TRAN_DTL.Funder_Tran_IDColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_DTL.Funder_Tran_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fund_Ref_No {
                get {
                    return ((string)(this[this.tableFA_FUNDER_TRAN_DTL.Fund_Ref_NoColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_DTL.Fund_Ref_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Fund_Rate {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_FUNDER_TRAN_DTL.Fund_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fund_Rate\' in table \'FA_FUNDER_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_DTL.Fund_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Due_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_TRAN_DTL.Due_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Due_Date\' in table \'FA_FUNDER_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_DTL.Due_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Due_Amount {
                get {
                    return ((decimal)(this[this.tableFA_FUNDER_TRAN_DTL.Due_AmountColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_DTL.Due_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string JV_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_TRAN_DTL.JV_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JV_No\' in table \'FA_FUNDER_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_TRAN_DTL.JV_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFund_RateNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_DTL.Fund_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFund_RateNull() {
                this[this.tableFA_FUNDER_TRAN_DTL.Fund_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDue_DateNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_DTL.Due_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDue_DateNull() {
                this[this.tableFA_FUNDER_TRAN_DTL.Due_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsJV_NoNull() {
                return this.IsNull(this.tableFA_FUNDER_TRAN_DTL.JV_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetJV_NoNull() {
                this[this.tableFA_FUNDER_TRAN_DTL.JV_NoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_INVESTMENT_MASTERRow : global::System.Data.DataRow {
            
            private FA_INVESTMENT_MASTERDataTable tableFA_INVESTMENT_MASTER;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_MASTERRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_INVESTMENT_MASTER = ((FA_INVESTMENT_MASTERDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long InvestMaster_ID {
                get {
                    return ((long)(this[this.tableFA_INVESTMENT_MASTER.InvestMaster_IDColumn]));
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.InvestMaster_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_Id {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Company_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_Id\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Company_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_MASTER.Location_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_Code\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Location_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Investment_Type {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Investment_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Type\' in table \'FA_INVESTMENT_MASTER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Investment_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Investment_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Investment_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Lookup\' in table \'FA_INVESTMENT_MASTER\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Investment_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_MASTER.Investment_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Code\' in table \'FA_INVESTMENT_MASTER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Investment_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Desc {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_MASTER.Investment_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Desc\' in table \'FA_INVESTMENT_MASTER\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Investment_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_AddDesc {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_MASTER.Investment_AddDescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_AddDesc\' in table \'FA_INVESTMENT_MASTER\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Investment_AddDescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Unit_Base {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_MASTER.Unit_BaseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Base\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Unit_BaseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Unit_FaceValue {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_MASTER.Unit_FaceValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_FaceValue\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Unit_FaceValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Interest_Periodicity {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Interest_PeriodicityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interest_Periodicity\' in table \'FA_INVESTMENT_MASTER\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Interest_PeriodicityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Interest_Period_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Interest_Period_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interest_Period_Lookup\' in table \'FA_INVESTMENT_MASTER\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Interest_Period_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Rate_of_Interest {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_MASTER.Rate_of_InterestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Rate_of_Interest\' in table \'FA_INVESTMENT_MASTER\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Rate_of_InterestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Nature_of_Interest {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Nature_of_InterestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nature_of_Interest\' in table \'FA_INVESTMENT_MASTER\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Nature_of_InterestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NatureofInterest_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.NatureofInterest_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NatureofInterest_Lookup\' in table \'FA_INVESTMENT_MASTER\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.NatureofInterest_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Interest_Type {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Interest_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interest_Type\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Interest_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Interesttype_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Interesttype_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interesttype_Lookup\' in table \'FA_INVESTMENT_MASTER\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Interesttype_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Interest_Frequency {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Interest_FrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interest_Frequency\' in table \'FA_INVESTMENT_MASTER\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Interest_FrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Interest_Freq_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Interest_Freq_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interest_Freq_Lookup\' in table \'FA_INVESTMENT_MASTER\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Interest_Freq_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Principal_Frequency {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Principal_FrequencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Principal_Frequency\' in table \'FA_INVESTMENT_MASTER\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Principal_FrequencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Principal_Freq_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Principal_Freq_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Principal_Freq_Lookup\' in table \'FA_INVESTMENT_MASTER\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Principal_Freq_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_MASTER.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Active {
                get {
                    try {
                        return ((bool)(this[this.tableFA_INVESTMENT_MASTER.Is_ActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Is_Active\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Is_ActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_MASTER.Created_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_Date\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Created_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_MASTER.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_MASTER.Modified_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_Date\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.Modified_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string GL_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_MASTER.GL_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GL_Code\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.GL_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SL_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_MASTER.SL_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SL_Code\' in table \'FA_INVESTMENT_MASTER\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_MASTER.SL_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IdNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Company_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IdNull() {
                this[this.tableFA_INVESTMENT_MASTER.Company_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_INVESTMENT_MASTER.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Location_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_CodeNull() {
                this[this.tableFA_INVESTMENT_MASTER.Location_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_TypeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Investment_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_TypeNull() {
                this[this.tableFA_INVESTMENT_MASTER.Investment_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Investment_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_LookupNull() {
                this[this.tableFA_INVESTMENT_MASTER.Investment_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Investment_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_CodeNull() {
                this[this.tableFA_INVESTMENT_MASTER.Investment_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_DescNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Investment_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_DescNull() {
                this[this.tableFA_INVESTMENT_MASTER.Investment_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_AddDescNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Investment_AddDescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_AddDescNull() {
                this[this.tableFA_INVESTMENT_MASTER.Investment_AddDescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_BaseNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Unit_BaseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_BaseNull() {
                this[this.tableFA_INVESTMENT_MASTER.Unit_BaseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_FaceValueNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Unit_FaceValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_FaceValueNull() {
                this[this.tableFA_INVESTMENT_MASTER.Unit_FaceValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterest_PeriodicityNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Interest_PeriodicityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterest_PeriodicityNull() {
                this[this.tableFA_INVESTMENT_MASTER.Interest_PeriodicityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterest_Period_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Interest_Period_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterest_Period_LookupNull() {
                this[this.tableFA_INVESTMENT_MASTER.Interest_Period_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRate_of_InterestNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Rate_of_InterestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRate_of_InterestNull() {
                this[this.tableFA_INVESTMENT_MASTER.Rate_of_InterestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNature_of_InterestNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Nature_of_InterestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNature_of_InterestNull() {
                this[this.tableFA_INVESTMENT_MASTER.Nature_of_InterestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNatureofInterest_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.NatureofInterest_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNatureofInterest_LookupNull() {
                this[this.tableFA_INVESTMENT_MASTER.NatureofInterest_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterest_TypeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Interest_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterest_TypeNull() {
                this[this.tableFA_INVESTMENT_MASTER.Interest_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInteresttype_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Interesttype_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInteresttype_LookupNull() {
                this[this.tableFA_INVESTMENT_MASTER.Interesttype_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterest_FrequencyNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Interest_FrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterest_FrequencyNull() {
                this[this.tableFA_INVESTMENT_MASTER.Interest_FrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterest_Freq_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Interest_Freq_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterest_Freq_LookupNull() {
                this[this.tableFA_INVESTMENT_MASTER.Interest_Freq_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrincipal_FrequencyNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Principal_FrequencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrincipal_FrequencyNull() {
                this[this.tableFA_INVESTMENT_MASTER.Principal_FrequencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPrincipal_Freq_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Principal_Freq_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPrincipal_Freq_LookupNull() {
                this[this.tableFA_INVESTMENT_MASTER.Principal_Freq_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableFA_INVESTMENT_MASTER.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIs_ActiveNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Is_ActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIs_ActiveNull() {
                this[this.tableFA_INVESTMENT_MASTER.Is_ActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableFA_INVESTMENT_MASTER.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_DateNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Created_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_DateNull() {
                this[this.tableFA_INVESTMENT_MASTER.Created_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableFA_INVESTMENT_MASTER.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_DateNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.Modified_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_DateNull() {
                this[this.tableFA_INVESTMENT_MASTER.Modified_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsGL_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.GL_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetGL_CodeNull() {
                this[this.tableFA_INVESTMENT_MASTER.GL_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSL_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_MASTER.SL_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSL_CodeNull() {
                this[this.tableFA_INVESTMENT_MASTER.SL_CodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_INVESTMENT_TRAN_HDRRow : global::System.Data.DataRow {
            
            private FA_INVESTMENT_TRAN_HDRDataTable tableFA_INVESTMENT_TRAN_HDR;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_HDRRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_INVESTMENT_TRAN_HDR = ((FA_INVESTMENT_TRAN_HDRDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invest_Header_ID {
                get {
                    return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Header_IDColumn]));
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Header_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.Location_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_Code\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Location_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Activity {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.ActivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Activity\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.ActivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Investment_Type {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Type\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Code\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Tran_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_Tran_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Tran_No\' in table \'FA_INVESTMENT_TRAN_HDR\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_Tran_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Serial_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_Serial_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Serial_No\' in table \'FA_INVESTMENT_TRAN_HDR\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_Serial_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_HDR.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Invest_Trans_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Trans_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invest_Trans_Date\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Trans_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invest_Link_Key {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Link_KeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invest_Link_Key\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Link_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Transaction_Type {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Transaction_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Transaction_Type\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Transaction_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TransactionType_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.TransactionType_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TransactionType_Lookup\' in table \'FA_INVESTMENT_TRAN_HDR\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.TransactionType_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Entity_Detail_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Entity_Detail_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entity_Detail_ID\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Entity_Detail_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Entity_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.Entity_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entity_Code\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Entity_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_Authorized {
                get {
                    try {
                        return ((bool)(this[this.tableFA_INVESTMENT_TRAN_HDR.Is_AuthorizedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Is_Authorized\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Is_AuthorizedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Authorized_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Authorized_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Authorized_By\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Authorized_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_HDR.Created_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_on\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Created_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_HDR.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_on {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_HDR.Modified_onColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_on\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.Modified_onColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_InvestTranDet {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_InvestTranDet\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_InvestTranDetOth {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetOthColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_InvestTranDetOth\' in table \'FA_INVESTMENT_TRAN_HDR\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetOthColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_InvestTranROI {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranROIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_InvestTranROI\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranROIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_InvestDocumentDet {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestDocumentDetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_InvestDocumentDet\' in table \'FA_INVESTMENT_TRAN_HDR\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestDocumentDetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_Interest_Det {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_HDR.XML_Interest_DetColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_Interest_Det\' in table \'FA_INVESTMENT_TRAN_HDR\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_HDR.XML_Interest_DetColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Location_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_CodeNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Location_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivityNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.ActivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivityNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.ActivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_TypeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Investment_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_TypeNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Investment_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_CodeNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_Tran_NoNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Investment_Tran_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_Tran_NoNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_Tran_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_Serial_NoNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Investment_Serial_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_Serial_NoNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Investment_Serial_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDateNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDateNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvest_Trans_DateNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Invest_Trans_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvest_Trans_DateNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Trans_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvest_Link_KeyNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Invest_Link_KeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvest_Link_KeyNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Invest_Link_KeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransaction_TypeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Transaction_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransaction_TypeNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Transaction_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransactionType_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.TransactionType_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransactionType_LookupNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.TransactionType_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntity_Detail_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Entity_Detail_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntity_Detail_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Entity_Detail_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntity_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Entity_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntity_CodeNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Entity_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIs_AuthorizedNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Is_AuthorizedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIs_AuthorizedNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Is_AuthorizedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAuthorized_ByNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Authorized_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAuthorized_ByNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Authorized_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_onNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Created_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_onNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Created_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_onNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.Modified_onColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_onNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.Modified_onColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_InvestTranDetNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_InvestTranDetNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_InvestTranDetOthNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetOthColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_InvestTranDetOthNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranDetOthColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_InvestTranROINull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranROIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_InvestTranROINull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestTranROIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_InvestDocumentDetNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestDocumentDetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_InvestDocumentDetNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.XML_InvestDocumentDetColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_Interest_DetNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_HDR.XML_Interest_DetColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_Interest_DetNull() {
                this[this.tableFA_INVESTMENT_TRAN_HDR.XML_Interest_DetColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_INVESTMENT_TRAN_DTLRow : global::System.Data.DataRow {
            
            private FA_INVESTMENT_TRAN_DTLDataTable tableFA_INVESTMENT_TRAN_DTL;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_DTLRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_INVESTMENT_TRAN_DTL = ((FA_INVESTMENT_TRAN_DTLDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invst_Tran_Det_ID {
                get {
                    return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Invst_Tran_Det_IDColumn]));
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Invst_Tran_Det_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invest_Header_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Invest_Header_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invest_Header_ID\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Invest_Header_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL.Location_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_Code\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Location_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Activity {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.ActivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Activity\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.ActivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Tran_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL.Investment_Tran_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Tran_No\' in table \'FA_INVESTMENT_TRAN_DTL\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Investment_Tran_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invest_Link_Key {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Invest_Link_KeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invest_Link_Key\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Invest_Link_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NoofUnits {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.NoofUnitsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NoofUnits\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.NoofUnitsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Unit_Value {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_DTL.Unit_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Unit_Value\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Unit_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Market_Value {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_DTL.Market_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Market_Value\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Market_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Invst_DInvst_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_DTL.Invst_DInvst_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invst_DInvst_Amount\' in table \'FA_INVESTMENT_TRAN_DTL\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Invst_DInvst_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TenureType_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.TenureType_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TenureType_Lookup\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.TenureType_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tenure_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Tenure_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tenure_ID\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Tenure_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tenure_Value {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Tenure_ValueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tenure_Value\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Tenure_ValueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Maturity_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_DTL.Maturity_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Maturity_Date\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Maturity_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Other_Charges {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_DTL.Other_ChargesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Other_Charges\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Other_ChargesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Taxes {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_DTL.TaxesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Taxes\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.TaxesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Total_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_DTL.Total_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total_Amount\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Total_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Profit_Loss {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_DTL.Profit_LossColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Profit_Loss\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Profit_LossColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_DTL.Created_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_On\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Created_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_DTL.Modified_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_On\' in table \'FA_INVESTMENT_TRAN_DTL\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL.Modified_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvest_Header_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Invest_Header_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvest_Header_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Invest_Header_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Location_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_CodeNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Location_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivityNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.ActivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivityNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.ActivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_Tran_NoNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Investment_Tran_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_Tran_NoNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Investment_Tran_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvest_Link_KeyNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Invest_Link_KeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvest_Link_KeyNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Invest_Link_KeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNoofUnitsNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.NoofUnitsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNoofUnitsNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.NoofUnitsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUnit_ValueNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Unit_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUnit_ValueNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Unit_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMarket_ValueNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Market_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMarket_ValueNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Market_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvst_DInvst_AmountNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Invst_DInvst_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvst_DInvst_AmountNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Invst_DInvst_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenureType_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.TenureType_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenureType_LookupNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.TenureType_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenure_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Tenure_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenure_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Tenure_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTenure_ValueNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Tenure_ValueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTenure_ValueNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Tenure_ValueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaturity_DateNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Maturity_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaturity_DateNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Maturity_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOther_ChargesNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Other_ChargesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOther_ChargesNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Other_ChargesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTaxesNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.TaxesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTaxesNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.TaxesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTotal_AmountNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Total_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTotal_AmountNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Total_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProfit_LossNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Profit_LossColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProfit_LossNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Profit_LossColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_OnNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Created_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_OnNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Created_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_OnNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL.Modified_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_OnNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL.Modified_OnColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_INVESTMENT_TRAN_DTL_OTHRow : global::System.Data.DataRow {
            
            private FA_INVESTMENT_TRAN_DTL_OTHDataTable tableFA_INVESTMENT_TRAN_DTL_OTH;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_DTL_OTHRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_INVESTMENT_TRAN_DTL_OTH = ((FA_INVESTMENT_TRAN_DTL_OTHDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Trans_Det_Oth_ID {
                get {
                    return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Trans_Det_Oth_IDColumn]));
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Trans_Det_Oth_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Activity {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.ActivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Activity\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.ActivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_Code\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Tran_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Investment_Tran_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Tran_No\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Investment_Tran_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Details_Serial_No {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Details_Serial_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Details_Serial_No\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Details_Serial_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invest_Link_Key {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Invest_Link_KeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invest_Link_Key\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Invest_Link_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Physical_Demat {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_DematColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Physical_Demat\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_DematColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Physical_Demat_Lookup {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_Demat_LookupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Physical_Demat_Lookup\' in table \'FA_INVESTMENT_TRAN_DTL_OTH" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_Demat_LookupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DP_ID {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DP_ID\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DP_Name {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DP_Name\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Client_ID {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Client_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Client_ID\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Client_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Account_Number {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Account_NumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Account_Number\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Account_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Maintained_At {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Maintained_AtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Maintained_At\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Maintained_AtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Bought_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bought_Date\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Bought_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Bought_Quantity\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Sale_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Date\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Sale_Quantity {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_QuantityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sale_Quantity\' in table \'FA_INVESTMENT_TRAN_DTL_OTH\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_QuantityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivityNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.ActivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivityNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.ActivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_CodeNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Location_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_Tran_NoNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Investment_Tran_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_Tran_NoNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Investment_Tran_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDetails_Serial_NoNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Details_Serial_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDetails_Serial_NoNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Details_Serial_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvest_Link_KeyNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Invest_Link_KeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvest_Link_KeyNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Invest_Link_KeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysical_DematNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_DematColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysical_DematNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_DematColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhysical_Demat_LookupNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_Demat_LookupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhysical_Demat_LookupNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Physical_Demat_LookupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDP_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDP_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDP_NameNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDP_NameNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.DP_NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClient_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Client_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClient_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Client_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAccount_NumberNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Account_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAccount_NumberNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Account_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMaintained_AtNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Maintained_AtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMaintained_AtNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Maintained_AtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBought_DateNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBought_DateNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsBought_QuantityNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetBought_QuantityNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Bought_QuantityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_DateNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_DateNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSale_QuantityNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_QuantityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSale_QuantityNull() {
                this[this.tableFA_INVESTMENT_TRAN_DTL_OTH.Sale_QuantityColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_INVESTMENT_TRAN_ROIRow : global::System.Data.DataRow {
            
            private FA_INVESTMENT_TRAN_ROIDataTable tableFA_INVESTMENT_TRAN_ROI;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_INVESTMENT_TRAN_ROIRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_INVESTMENT_TRAN_ROI = ((FA_INVESTMENT_TRAN_ROIDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invst_Tran_ROI_ID {
                get {
                    return ((int)(this[this.tableFA_INVESTMENT_TRAN_ROI.Invst_Tran_ROI_IDColumn]));
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Invst_Tran_ROI_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_ROI.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Activity {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_ROI.ActivityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Activity\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.ActivityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_ROI.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_ROI.Location_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_Code\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Location_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Investment_Tran_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_ROI.Investment_Tran_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Investment_Tran_No\' in table \'FA_INVESTMENT_TRAN_ROI\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Investment_Tran_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Invest_Link_Key {
                get {
                    try {
                        return ((int)(this[this.tableFA_INVESTMENT_TRAN_ROI.Invest_Link_KeyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Invest_Link_Key\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Invest_Link_KeyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Interest_Due_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interest_Due_On\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Interest_Due_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Interest_Due_Amount\' in table \'FA_INVESTMENT_TRAN_ROI\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Tax_Deduction_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_ROI.Tax_Deduction_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tax_Deduction_Amount\' in table \'FA_INVESTMENT_TRAN_ROI\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Tax_Deduction_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Receipt_Ref_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_ROI.Receipt_Ref_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_Ref_No\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Receipt_Ref_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Receipt_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_INVESTMENT_TRAN_ROI.Receipt_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Receipt_Amount\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.Receipt_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Status {
                get {
                    try {
                        return ((string)(this[this.tableFA_INVESTMENT_TRAN_ROI.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'FA_INVESTMENT_TRAN_ROI\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_INVESTMENT_TRAN_ROI.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsActivityNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.ActivityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetActivityNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.ActivityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_CodeNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Location_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_CodeNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Location_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvestment_Tran_NoNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Investment_Tran_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvestment_Tran_NoNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Investment_Tran_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInvest_Link_KeyNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Invest_Link_KeyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInvest_Link_KeyNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Invest_Link_KeyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterest_Due_OnNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterest_Due_OnNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsInterest_Due_AmountNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetInterest_Due_AmountNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Interest_Due_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTax_Deduction_AmountNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Tax_Deduction_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTax_Deduction_AmountNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Tax_Deduction_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_Ref_NoNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Receipt_Ref_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_Ref_NoNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Receipt_Ref_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReceipt_AmountNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.Receipt_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReceipt_AmountNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.Receipt_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatusNull() {
                return this.IsNull(this.tableFA_INVESTMENT_TRAN_ROI.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatusNull() {
                this[this.tableFA_INVESTMENT_TRAN_ROI.StatusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_FUNDER_LOADING_MSTRow : global::System.Data.DataRow {
            
            private FA_FUNDER_LOADING_MSTDataTable tableFA_FUNDER_LOADING_MST;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_LOADING_MSTRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_FUNDER_LOADING_MST = ((FA_FUNDER_LOADING_MSTDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_LOADING_MST.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_Loading_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_LOADING_MST.Funder_Loading_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Funder_Loading_ID\' in table \'FA_FUNDER_LOADING_MST\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Funder_Loading_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Funder_Loading_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_LOADING_MST.Funder_Loading_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Funder_Loading_No\' in table \'FA_FUNDER_LOADING_MST\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Funder_Loading_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_LOADING_MST.Funder_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Funder_ID\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Funder_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_LOADING_MST.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Last_Allocated_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_LOADING_MST.Last_Allocated_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Last_Allocated_Date\' in table \'FA_FUNDER_LOADING_MST\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Last_Allocated_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Allocation_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_LOADING_MST.Allocation_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Allocation_Date\' in table \'FA_FUNDER_LOADING_MST\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Allocation_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_LOADING_MST.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_LOADING_MST.Created_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_On\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Created_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_LOADING_MST.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_LOADING_MST.Modified_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_On\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.Modified_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_Loading_DTL {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_LOADING_MST.XML_Loading_DTLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_Loading_DTL\' in table \'FA_FUNDER_LOADING_MST\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.XML_Loading_DTLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Option {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_LOADING_MST.OptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Option\' in table \'FA_FUNDER_LOADING_MST\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_LOADING_MST.OptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunder_Loading_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Funder_Loading_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunder_Loading_IDNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Funder_Loading_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunder_Loading_NoNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Funder_Loading_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunder_Loading_NoNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Funder_Loading_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunder_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Funder_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunder_IDNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Funder_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLast_Allocated_DateNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Last_Allocated_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLast_Allocated_DateNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Last_Allocated_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAllocation_DateNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Allocation_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAllocation_DateNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Allocation_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_OnNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Created_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_OnNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Created_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_OnNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.Modified_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_OnNull() {
                this[this.tableFA_FUNDER_LOADING_MST.Modified_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_Loading_DTLNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.XML_Loading_DTLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_Loading_DTLNull() {
                this[this.tableFA_FUNDER_LOADING_MST.XML_Loading_DTLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOptionNull() {
                return this.IsNull(this.tableFA_FUNDER_LOADING_MST.OptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetOptionNull() {
                this[this.tableFA_FUNDER_LOADING_MST.OptionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class FA_FUNDER_INT_DUERow : global::System.Data.DataRow {
            
            private FA_FUNDER_INT_DUEDataTable tableFA_FUNDER_INT_DUE;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal FA_FUNDER_INT_DUERow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableFA_FUNDER_INT_DUE = ((FA_FUNDER_INT_DUEDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_INT_DUE.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Location_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_INT_DUE.Location_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_ID\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Location_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Location_Code {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_INT_DUE.Location_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Location_Code\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Location_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Funder_Int_Due_Id {
                get {
                    return ((decimal)(this[this.tableFA_FUNDER_INT_DUE.Funder_Int_Due_IdColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Funder_Int_Due_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_Tran_ID {
                get {
                    return ((int)(this[this.tableFA_FUNDER_INT_DUE.Funder_Tran_IDColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Funder_Tran_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Funder_ID {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_INT_DUE.Funder_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Funder_ID\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Funder_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Serial_Number {
                get {
                    return ((int)(this[this.tableFA_FUNDER_INT_DUE.Serial_NumberColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Serial_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Fund_Ref_No {
                get {
                    return ((string)(this[this.tableFA_FUNDER_INT_DUE.Fund_Ref_NoColumn]));
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Fund_Ref_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Due_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_INT_DUE.Due_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Due_Date\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Due_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Due_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_FUNDER_INT_DUE.Due_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Due_Amount\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Due_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Payment_Ref_No {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_INT_DUE.Payment_Ref_NoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment_Ref_No\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Payment_Ref_NoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Payment_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableFA_FUNDER_INT_DUE.Payment_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Payment_Amount\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Payment_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Remarks {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_INT_DUE.RemarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Remarks\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.RemarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_INT_DUE.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_INT_DUE.Created_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_On\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Created_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Modified_By {
                get {
                    try {
                        return ((int)(this[this.tableFA_FUNDER_INT_DUE.Modified_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_By\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Modified_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Modified_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableFA_FUNDER_INT_DUE.Modified_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Modified_On\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.Modified_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XML_Tran_DTL {
                get {
                    try {
                        return ((string)(this[this.tableFA_FUNDER_INT_DUE.XML_Tran_DTLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XML_Tran_DTL\' in table \'FA_FUNDER_INT_DUE\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableFA_FUNDER_INT_DUE.XML_Tran_DTLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableFA_FUNDER_INT_DUE.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Location_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_IDNull() {
                this[this.tableFA_FUNDER_INT_DUE.Location_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocation_CodeNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Location_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocation_CodeNull() {
                this[this.tableFA_FUNDER_INT_DUE.Location_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFunder_IDNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Funder_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFunder_IDNull() {
                this[this.tableFA_FUNDER_INT_DUE.Funder_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDue_DateNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Due_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDue_DateNull() {
                this[this.tableFA_FUNDER_INT_DUE.Due_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDue_AmountNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Due_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDue_AmountNull() {
                this[this.tableFA_FUNDER_INT_DUE.Due_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_Ref_NoNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Payment_Ref_NoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_Ref_NoNull() {
                this[this.tableFA_FUNDER_INT_DUE.Payment_Ref_NoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPayment_AmountNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Payment_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPayment_AmountNull() {
                this[this.tableFA_FUNDER_INT_DUE.Payment_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRemarksNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.RemarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRemarksNull() {
                this[this.tableFA_FUNDER_INT_DUE.RemarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableFA_FUNDER_INT_DUE.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_OnNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Created_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_OnNull() {
                this[this.tableFA_FUNDER_INT_DUE.Created_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_ByNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Modified_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_ByNull() {
                this[this.tableFA_FUNDER_INT_DUE.Modified_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModified_OnNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.Modified_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModified_OnNull() {
                this[this.tableFA_FUNDER_INT_DUE.Modified_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXML_Tran_DTLNull() {
                return this.IsNull(this.tableFA_FUNDER_INT_DUE.XML_Tran_DTLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXML_Tran_DTLNull() {
                this[this.tableFA_FUNDER_INT_DUE.XML_Tran_DTLColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_FUNDER_MSTRowChangeEvent : global::System.EventArgs {
            
            private FA_FUNDER_MSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_MSTRowChangeEvent(FA_FUNDER_MSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_MSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_FUNDER_TRAN_MSTRowChangeEvent : global::System.EventArgs {
            
            private FA_FUNDER_TRAN_MSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_MSTRowChangeEvent(FA_FUNDER_TRAN_MSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_MSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_FUNDER_TRAN_DTLRowChangeEvent : global::System.EventArgs {
            
            private FA_FUNDER_TRAN_DTLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_DTLRowChangeEvent(FA_FUNDER_TRAN_DTLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_TRAN_DTLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_INVESTMENT_MASTERRowChangeEvent : global::System.EventArgs {
            
            private FA_INVESTMENT_MASTERRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_MASTERRowChangeEvent(FA_INVESTMENT_MASTERRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_MASTERRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_INVESTMENT_TRAN_HDRRowChangeEvent : global::System.EventArgs {
            
            private FA_INVESTMENT_TRAN_HDRRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_HDRRowChangeEvent(FA_INVESTMENT_TRAN_HDRRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_HDRRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_INVESTMENT_TRAN_DTLRowChangeEvent : global::System.EventArgs {
            
            private FA_INVESTMENT_TRAN_DTLRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTLRowChangeEvent(FA_INVESTMENT_TRAN_DTLRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTLRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_INVESTMENT_TRAN_DTL_OTHRowChangeEvent : global::System.EventArgs {
            
            private FA_INVESTMENT_TRAN_DTL_OTHRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTL_OTHRowChangeEvent(FA_INVESTMENT_TRAN_DTL_OTHRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_DTL_OTHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_INVESTMENT_TRAN_ROIRowChangeEvent : global::System.EventArgs {
            
            private FA_INVESTMENT_TRAN_ROIRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_ROIRowChangeEvent(FA_INVESTMENT_TRAN_ROIRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_INVESTMENT_TRAN_ROIRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_FUNDER_LOADING_MSTRowChangeEvent : global::System.EventArgs {
            
            private FA_FUNDER_LOADING_MSTRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_LOADING_MSTRowChangeEvent(FA_FUNDER_LOADING_MSTRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_LOADING_MSTRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class FA_FUNDER_INT_DUERowChangeEvent : global::System.EventArgs {
            
            private FA_FUNDER_INT_DUERow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_INT_DUERowChangeEvent(FA_FUNDER_INT_DUERow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public FA_FUNDER_INT_DUERow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591