//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4984
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace S3GBusEntity.TradeAdvance {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("TradeAdvanceMgtServices")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class TradeAdvanceMgtServices : global::System.Data.DataSet {
        
        private TASchemeMasterDataTable tableTASchemeMaster;
        
        private S3G_TA_AppProcessDataTable tableS3G_TA_AppProcess;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TradeAdvanceMgtServices() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected TradeAdvanceMgtServices(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["TASchemeMaster"] != null)) {
                    base.Tables.Add(new TASchemeMasterDataTable(ds.Tables["TASchemeMaster"]));
                }
                if ((ds.Tables["S3G_TA_AppProcess"] != null)) {
                    base.Tables.Add(new S3G_TA_AppProcessDataTable(ds.Tables["S3G_TA_AppProcess"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TASchemeMasterDataTable TASchemeMaster {
            get {
                return this.tableTASchemeMaster;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public S3G_TA_AppProcessDataTable S3G_TA_AppProcess {
            get {
                return this.tableS3G_TA_AppProcess;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            TradeAdvanceMgtServices cln = ((TradeAdvanceMgtServices)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["TASchemeMaster"] != null)) {
                    base.Tables.Add(new TASchemeMasterDataTable(ds.Tables["TASchemeMaster"]));
                }
                if ((ds.Tables["S3G_TA_AppProcess"] != null)) {
                    base.Tables.Add(new S3G_TA_AppProcessDataTable(ds.Tables["S3G_TA_AppProcess"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableTASchemeMaster = ((TASchemeMasterDataTable)(base.Tables["TASchemeMaster"]));
            if ((initTable == true)) {
                if ((this.tableTASchemeMaster != null)) {
                    this.tableTASchemeMaster.InitVars();
                }
            }
            this.tableS3G_TA_AppProcess = ((S3G_TA_AppProcessDataTable)(base.Tables["S3G_TA_AppProcess"]));
            if ((initTable == true)) {
                if ((this.tableS3G_TA_AppProcess != null)) {
                    this.tableS3G_TA_AppProcess.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "TradeAdvanceMgtServices";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/TradeAdvanceMgtServices.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableTASchemeMaster = new TASchemeMasterDataTable();
            base.Tables.Add(this.tableTASchemeMaster);
            this.tableS3G_TA_AppProcess = new S3G_TA_AppProcessDataTable();
            base.Tables.Add(this.tableS3G_TA_AppProcess);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTASchemeMaster() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeS3G_TA_AppProcess() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            TradeAdvanceMgtServices ds = new TradeAdvanceMgtServices();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void TASchemeMasterRowChangeEventHandler(object sender, TASchemeMasterRowChangeEvent e);
        
        public delegate void S3G_TA_AppProcessRowChangeEventHandler(object sender, S3G_TA_AppProcessRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TASchemeMasterDataTable : global::System.Data.TypedTableBase<TASchemeMasterRow> {
            
            private global::System.Data.DataColumn columnProduct_Code;
            
            private global::System.Data.DataColumn columnProduct_Desc;
            
            private global::System.Data.DataColumn columnProduct_Type;
            
            private global::System.Data.DataColumn columnLOB;
            
            private global::System.Data.DataColumn columnXml_Rate;
            
            private global::System.Data.DataColumn columnCompany_Id;
            
            private global::System.Data.DataColumn columnIsActive;
            
            private global::System.Data.DataColumn columnProduct_ID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TASchemeMasterDataTable() {
                this.TableName = "TASchemeMaster";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TASchemeMasterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TASchemeMasterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_CodeColumn {
                get {
                    return this.columnProduct_Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_DescColumn {
                get {
                    return this.columnProduct_Desc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_TypeColumn {
                get {
                    return this.columnProduct_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LOBColumn {
                get {
                    return this.columnLOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Xml_RateColumn {
                get {
                    return this.columnXml_Rate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IdColumn {
                get {
                    return this.columnCompany_Id;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn IsActiveColumn {
                get {
                    return this.columnIsActive;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Product_IDColumn {
                get {
                    return this.columnProduct_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TASchemeMasterRow this[int index] {
                get {
                    return ((TASchemeMasterRow)(this.Rows[index]));
                }
            }
            
            public event TASchemeMasterRowChangeEventHandler TASchemeMasterRowChanging;
            
            public event TASchemeMasterRowChangeEventHandler TASchemeMasterRowChanged;
            
            public event TASchemeMasterRowChangeEventHandler TASchemeMasterRowDeleting;
            
            public event TASchemeMasterRowChangeEventHandler TASchemeMasterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTASchemeMasterRow(TASchemeMasterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TASchemeMasterRow AddTASchemeMasterRow(string Product_Code, string Product_Desc, string Product_Type, string LOB, string Xml_Rate, string Company_Id, string IsActive, int Product_ID) {
                TASchemeMasterRow rowTASchemeMasterRow = ((TASchemeMasterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Product_Code,
                        Product_Desc,
                        Product_Type,
                        LOB,
                        Xml_Rate,
                        Company_Id,
                        IsActive,
                        Product_ID};
                rowTASchemeMasterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTASchemeMasterRow);
                return rowTASchemeMasterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TASchemeMasterDataTable cln = ((TASchemeMasterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TASchemeMasterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnProduct_Code = base.Columns["Product_Code"];
                this.columnProduct_Desc = base.Columns["Product_Desc"];
                this.columnProduct_Type = base.Columns["Product_Type"];
                this.columnLOB = base.Columns["LOB"];
                this.columnXml_Rate = base.Columns["Xml_Rate"];
                this.columnCompany_Id = base.Columns["Company_Id"];
                this.columnIsActive = base.Columns["IsActive"];
                this.columnProduct_ID = base.Columns["Product_ID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnProduct_Code = new global::System.Data.DataColumn("Product_Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Code);
                this.columnProduct_Desc = new global::System.Data.DataColumn("Product_Desc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Desc);
                this.columnProduct_Type = new global::System.Data.DataColumn("Product_Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_Type);
                this.columnLOB = new global::System.Data.DataColumn("LOB", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLOB);
                this.columnXml_Rate = new global::System.Data.DataColumn("Xml_Rate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXml_Rate);
                this.columnCompany_Id = new global::System.Data.DataColumn("Company_Id", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_Id);
                this.columnIsActive = new global::System.Data.DataColumn("IsActive", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsActive);
                this.columnProduct_ID = new global::System.Data.DataColumn("Product_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProduct_ID);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TASchemeMasterRow NewTASchemeMasterRow() {
                return ((TASchemeMasterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TASchemeMasterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TASchemeMasterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TASchemeMasterRowChanged != null)) {
                    this.TASchemeMasterRowChanged(this, new TASchemeMasterRowChangeEvent(((TASchemeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TASchemeMasterRowChanging != null)) {
                    this.TASchemeMasterRowChanging(this, new TASchemeMasterRowChangeEvent(((TASchemeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TASchemeMasterRowDeleted != null)) {
                    this.TASchemeMasterRowDeleted(this, new TASchemeMasterRowChangeEvent(((TASchemeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TASchemeMasterRowDeleting != null)) {
                    this.TASchemeMasterRowDeleting(this, new TASchemeMasterRowChangeEvent(((TASchemeMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTASchemeMasterRow(TASchemeMasterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TradeAdvanceMgtServices ds = new TradeAdvanceMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TASchemeMasterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class S3G_TA_AppProcessDataTable : global::System.Data.TypedTableBase<S3G_TA_AppProcessRow> {
            
            private global::System.Data.DataColumn columnCompany_ID;
            
            private global::System.Data.DataColumn columnEntity_ID;
            
            private global::System.Data.DataColumn columnApplication_ID;
            
            private global::System.Data.DataColumn columnApplication_Number;
            
            private global::System.Data.DataColumn columnApplication_Date;
            
            private global::System.Data.DataColumn columnFinance_Amount;
            
            private global::System.Data.DataColumn columnCreated_By;
            
            private global::System.Data.DataColumn columnCreated_On;
            
            private global::System.Data.DataColumn columnXMLReqDtls;
            
            private global::System.Data.DataColumn columnXMLApprovalDtls;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_TA_AppProcessDataTable() {
                this.TableName = "S3G_TA_AppProcess";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_TA_AppProcessDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected S3G_TA_AppProcessDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Company_IDColumn {
                get {
                    return this.columnCompany_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Entity_IDColumn {
                get {
                    return this.columnEntity_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Application_IDColumn {
                get {
                    return this.columnApplication_ID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Application_NumberColumn {
                get {
                    return this.columnApplication_Number;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Application_DateColumn {
                get {
                    return this.columnApplication_Date;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Finance_AmountColumn {
                get {
                    return this.columnFinance_Amount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_ByColumn {
                get {
                    return this.columnCreated_By;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Created_OnColumn {
                get {
                    return this.columnCreated_On;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XMLReqDtlsColumn {
                get {
                    return this.columnXMLReqDtls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn XMLApprovalDtlsColumn {
                get {
                    return this.columnXMLApprovalDtls;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_TA_AppProcessRow this[int index] {
                get {
                    return ((S3G_TA_AppProcessRow)(this.Rows[index]));
                }
            }
            
            public event S3G_TA_AppProcessRowChangeEventHandler S3G_TA_AppProcessRowChanging;
            
            public event S3G_TA_AppProcessRowChangeEventHandler S3G_TA_AppProcessRowChanged;
            
            public event S3G_TA_AppProcessRowChangeEventHandler S3G_TA_AppProcessRowDeleting;
            
            public event S3G_TA_AppProcessRowChangeEventHandler S3G_TA_AppProcessRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddS3G_TA_AppProcessRow(S3G_TA_AppProcessRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_TA_AppProcessRow AddS3G_TA_AppProcessRow(int Company_ID, int Entity_ID, string Application_Number, System.DateTime Application_Date, decimal Finance_Amount, int Created_By, System.DateTime Created_On, string XMLReqDtls, string XMLApprovalDtls) {
                S3G_TA_AppProcessRow rowS3G_TA_AppProcessRow = ((S3G_TA_AppProcessRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Company_ID,
                        Entity_ID,
                        null,
                        Application_Number,
                        Application_Date,
                        Finance_Amount,
                        Created_By,
                        Created_On,
                        XMLReqDtls,
                        XMLApprovalDtls};
                rowS3G_TA_AppProcessRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowS3G_TA_AppProcessRow);
                return rowS3G_TA_AppProcessRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                S3G_TA_AppProcessDataTable cln = ((S3G_TA_AppProcessDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new S3G_TA_AppProcessDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCompany_ID = base.Columns["Company_ID"];
                this.columnEntity_ID = base.Columns["Entity_ID"];
                this.columnApplication_ID = base.Columns["Application_ID"];
                this.columnApplication_Number = base.Columns["Application_Number"];
                this.columnApplication_Date = base.Columns["Application_Date"];
                this.columnFinance_Amount = base.Columns["Finance_Amount"];
                this.columnCreated_By = base.Columns["Created_By"];
                this.columnCreated_On = base.Columns["Created_On"];
                this.columnXMLReqDtls = base.Columns["XMLReqDtls"];
                this.columnXMLApprovalDtls = base.Columns["XMLApprovalDtls"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCompany_ID = new global::System.Data.DataColumn("Company_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCompany_ID);
                this.columnEntity_ID = new global::System.Data.DataColumn("Entity_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntity_ID);
                this.columnApplication_ID = new global::System.Data.DataColumn("Application_ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplication_ID);
                this.columnApplication_Number = new global::System.Data.DataColumn("Application_Number", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplication_Number);
                this.columnApplication_Date = new global::System.Data.DataColumn("Application_Date", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplication_Date);
                this.columnFinance_Amount = new global::System.Data.DataColumn("Finance_Amount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinance_Amount);
                this.columnCreated_By = new global::System.Data.DataColumn("Created_By", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_By);
                this.columnCreated_On = new global::System.Data.DataColumn("Created_On", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreated_On);
                this.columnXMLReqDtls = new global::System.Data.DataColumn("XMLReqDtls", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXMLReqDtls);
                this.columnXMLApprovalDtls = new global::System.Data.DataColumn("XMLApprovalDtls", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnXMLApprovalDtls);
                this.columnApplication_ID.AutoIncrement = true;
                this.columnApplication_ID.AutoIncrementSeed = -1;
                this.columnApplication_ID.AutoIncrementStep = -1;
                this.columnApplication_ID.ReadOnly = true;
                this.columnApplication_Number.MaxLength = 12;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_TA_AppProcessRow NewS3G_TA_AppProcessRow() {
                return ((S3G_TA_AppProcessRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new S3G_TA_AppProcessRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(S3G_TA_AppProcessRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.S3G_TA_AppProcessRowChanged != null)) {
                    this.S3G_TA_AppProcessRowChanged(this, new S3G_TA_AppProcessRowChangeEvent(((S3G_TA_AppProcessRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.S3G_TA_AppProcessRowChanging != null)) {
                    this.S3G_TA_AppProcessRowChanging(this, new S3G_TA_AppProcessRowChangeEvent(((S3G_TA_AppProcessRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.S3G_TA_AppProcessRowDeleted != null)) {
                    this.S3G_TA_AppProcessRowDeleted(this, new S3G_TA_AppProcessRowChangeEvent(((S3G_TA_AppProcessRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.S3G_TA_AppProcessRowDeleting != null)) {
                    this.S3G_TA_AppProcessRowDeleting(this, new S3G_TA_AppProcessRowChangeEvent(((S3G_TA_AppProcessRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveS3G_TA_AppProcessRow(S3G_TA_AppProcessRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                TradeAdvanceMgtServices ds = new TradeAdvanceMgtServices();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "S3G_TA_AppProcessDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TASchemeMasterRow : global::System.Data.DataRow {
            
            private TASchemeMasterDataTable tableTASchemeMaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TASchemeMasterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTASchemeMaster = ((TASchemeMasterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Code {
                get {
                    try {
                        return ((string)(this[this.tableTASchemeMaster.Product_CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_Code\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.Product_CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Desc {
                get {
                    try {
                        return ((string)(this[this.tableTASchemeMaster.Product_DescColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_Desc\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.Product_DescColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Product_Type {
                get {
                    try {
                        return ((string)(this[this.tableTASchemeMaster.Product_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_Type\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.Product_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LOB {
                get {
                    try {
                        return ((string)(this[this.tableTASchemeMaster.LOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LOB\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.LOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Xml_Rate {
                get {
                    try {
                        return ((string)(this[this.tableTASchemeMaster.Xml_RateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Xml_Rate\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.Xml_RateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Company_Id {
                get {
                    try {
                        return ((string)(this[this.tableTASchemeMaster.Company_IdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_Id\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.Company_IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string IsActive {
                get {
                    try {
                        return ((string)(this[this.tableTASchemeMaster.IsActiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsActive\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.IsActiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Product_ID {
                get {
                    try {
                        return ((int)(this[this.tableTASchemeMaster.Product_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Product_ID\' in table \'TASchemeMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTASchemeMaster.Product_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_CodeNull() {
                return this.IsNull(this.tableTASchemeMaster.Product_CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_CodeNull() {
                this[this.tableTASchemeMaster.Product_CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_DescNull() {
                return this.IsNull(this.tableTASchemeMaster.Product_DescColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_DescNull() {
                this[this.tableTASchemeMaster.Product_DescColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_TypeNull() {
                return this.IsNull(this.tableTASchemeMaster.Product_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_TypeNull() {
                this[this.tableTASchemeMaster.Product_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLOBNull() {
                return this.IsNull(this.tableTASchemeMaster.LOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLOBNull() {
                this[this.tableTASchemeMaster.LOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXml_RateNull() {
                return this.IsNull(this.tableTASchemeMaster.Xml_RateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXml_RateNull() {
                this[this.tableTASchemeMaster.Xml_RateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IdNull() {
                return this.IsNull(this.tableTASchemeMaster.Company_IdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IdNull() {
                this[this.tableTASchemeMaster.Company_IdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIsActiveNull() {
                return this.IsNull(this.tableTASchemeMaster.IsActiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIsActiveNull() {
                this[this.tableTASchemeMaster.IsActiveColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsProduct_IDNull() {
                return this.IsNull(this.tableTASchemeMaster.Product_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetProduct_IDNull() {
                this[this.tableTASchemeMaster.Product_IDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class S3G_TA_AppProcessRow : global::System.Data.DataRow {
            
            private S3G_TA_AppProcessDataTable tableS3G_TA_AppProcess;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal S3G_TA_AppProcessRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableS3G_TA_AppProcess = ((S3G_TA_AppProcessDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Company_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_TA_AppProcess.Company_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Company_ID\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Company_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Entity_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_TA_AppProcess.Entity_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Entity_ID\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Entity_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Application_ID {
                get {
                    try {
                        return ((int)(this[this.tableS3G_TA_AppProcess.Application_IDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Application_ID\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Application_IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Application_Number {
                get {
                    if (this.IsApplication_NumberNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableS3G_TA_AppProcess.Application_NumberColumn]));
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Application_NumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Application_Date {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_TA_AppProcess.Application_DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Application_Date\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Application_DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Finance_Amount {
                get {
                    try {
                        return ((decimal)(this[this.tableS3G_TA_AppProcess.Finance_AmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Finance_Amount\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Finance_AmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Created_By {
                get {
                    try {
                        return ((int)(this[this.tableS3G_TA_AppProcess.Created_ByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_By\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Created_ByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Created_On {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableS3G_TA_AppProcess.Created_OnColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Created_On\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.Created_OnColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XMLReqDtls {
                get {
                    try {
                        return ((string)(this[this.tableS3G_TA_AppProcess.XMLReqDtlsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XMLReqDtls\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.XMLReqDtlsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string XMLApprovalDtls {
                get {
                    try {
                        return ((string)(this[this.tableS3G_TA_AppProcess.XMLApprovalDtlsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'XMLApprovalDtls\' in table \'S3G_TA_AppProcess\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableS3G_TA_AppProcess.XMLApprovalDtlsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCompany_IDNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Company_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCompany_IDNull() {
                this[this.tableS3G_TA_AppProcess.Company_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEntity_IDNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Entity_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEntity_IDNull() {
                this[this.tableS3G_TA_AppProcess.Entity_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplication_IDNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Application_IDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplication_IDNull() {
                this[this.tableS3G_TA_AppProcess.Application_IDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplication_NumberNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Application_NumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplication_NumberNull() {
                this[this.tableS3G_TA_AppProcess.Application_NumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplication_DateNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Application_DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplication_DateNull() {
                this[this.tableS3G_TA_AppProcess.Application_DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFinance_AmountNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Finance_AmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFinance_AmountNull() {
                this[this.tableS3G_TA_AppProcess.Finance_AmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_ByNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Created_ByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_ByNull() {
                this[this.tableS3G_TA_AppProcess.Created_ByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCreated_OnNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.Created_OnColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCreated_OnNull() {
                this[this.tableS3G_TA_AppProcess.Created_OnColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXMLReqDtlsNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.XMLReqDtlsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXMLReqDtlsNull() {
                this[this.tableS3G_TA_AppProcess.XMLReqDtlsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsXMLApprovalDtlsNull() {
                return this.IsNull(this.tableS3G_TA_AppProcess.XMLApprovalDtlsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetXMLApprovalDtlsNull() {
                this[this.tableS3G_TA_AppProcess.XMLApprovalDtlsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TASchemeMasterRowChangeEvent : global::System.EventArgs {
            
            private TASchemeMasterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TASchemeMasterRowChangeEvent(TASchemeMasterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TASchemeMasterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class S3G_TA_AppProcessRowChangeEvent : global::System.EventArgs {
            
            private S3G_TA_AppProcessRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_TA_AppProcessRowChangeEvent(S3G_TA_AppProcessRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public S3G_TA_AppProcessRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591