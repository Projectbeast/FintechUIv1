create or replace Package Body CBOPKG00003 
IS
/*
*/
PV_N_CNT                  NUMBER :=0;
PV_V_CONTINUE_PROCESS     VARCHAR2(1):='Y';
PV_N_COMMIT_FREQUENCY     NUMBER:=0;
PV_N_GRACE_DAYS           NUMBER;
PV_D_DATE                 DATE;

Procedure LP_UPDATE_RUN_DATA(IV_N_SHEET_ID NUMBER,IV_V_IND VARCHAR2 DEFAULT NULL,IV_N_REC_CNT NUMBER DEFAULT 0)IS
    Begin
     IF IV_V_IND = 'S' THEN
         Begin
           SELECT NVL(COMMIT_FREQUENCY,1000)
             INTO PV_N_COMMIT_FREQUENCY
             FROM CBO_RUN_DATA_DIR_DAILY
            WHERE SHEET_ID = IV_N_SHEET_ID
              AND RUN_FLAG = 'Y'
              AND NVL(STOP_COUNT,1)>0;

           UPDATE CBO_RUN_DATA_DIR_DAILY
              SET START_TIME = SYSDATE
            WHERE SHEET_ID = IV_N_SHEET_ID;

           PV_N_CNT := 1;

        Exception
        WHEN NO_DATA_FOUND THEN
             PV_N_CNT := 0;
        End;

    Elsif IV_V_IND = 'E' THEN
           UPDATE CBO_RUN_DATA_DIR_DAILY
              SET END_TIME     = SYSDATE,
                  RECORD_COUNT = NVL(RECORD_COUNT,0)+IV_N_REC_CNT
            WHERE SHEET_ID = IV_N_SHEET_ID;
            
    Elsif IV_V_IND = 'C' THEN
           UPDATE CBO_RUN_DATA_DIR_DAILY
              SET RECORD_COUNT = NVL(RECORD_COUNT,0)+IV_N_REC_CNT
               WHERE SHEET_ID = IV_N_SHEET_ID;

           Begin
               SELECT 'Y'
              INTO PV_V_CONTINUE_PROCESS
              FROM CBO_RUN_DATA_DIR_DAILY
              WHERE SHEET_ID = IV_N_SHEET_ID
              AND (STOP_COUNT IS NULL OR STOP_COUNT > RECORD_COUNT);
           Exception
                   WHEN OTHERS THEN
                  PV_V_CONTINUE_PROCESS := 'N';
           End;
        End If;
        Commit;
END LP_UPDATE_RUN_DATA;

Function Lf_V_Cbo_Purpose_Cr_Facility(IV_V_CUSTOMER_CODE VARCHAR2)Return VARCHAR2 IS
LV_V_ECON_CODE                   VARCHAR2(3) := NULL;
LV_V_ECONOMIC_CODE           VARCHAR2(3) := NULL;
LV_V_OCCUPATION            VARCHAR2(3) := NULL;
Begin
   Begin
      SELECT OCCUPATION
        INTO LV_V_OCCUPATION
        FROM S3G_ORG_CUSTMASTER
       WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE         
         AND ROWNUM < 2;
    Exception
     WHEN OTHERS THEN
       LV_V_OCCUPATION := NULL;
   End;

   If NVL(LV_V_OCCUPATION,'~') IN (2,1) THEN
    SELECT INDUSTRY_ID
      INTO LV_V_ECON_CODE
      FROM S3G_ORG_CUSTMASTER
     WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ;

        If LV_V_ECON_CODE = '1'  THEN
           LV_V_ECONOMIC_CODE := '016';
        Elsif Lv_v_Econ_code = '2' THEN
           LV_V_ECONOMIC_CODE := '017';
        Elsif Lv_v_Econ_code = '3' THEN
           LV_V_ECONOMIC_CODE := '008';
        Elsif Lv_v_Econ_code = '4' THEN
           LV_V_ECONOMIC_CODE := '007';
        Elsif LV_V_ECON_CODE ='5' THEN
           LV_V_ECONOMIC_CODE := '006';
        Elsif Lv_v_Econ_code = '6' THEN
           LV_V_ECONOMIC_CODE := '003';
        Elsif Lv_v_Econ_code = '7' THEN
           LV_V_ECONOMIC_CODE := '001';
        Elsif Lv_v_Econ_code = '8' THEN
           LV_V_ECONOMIC_CODE := '002';
        Elsif Lv_v_Econ_code = '9' THEN
           LV_V_ECONOMIC_CODE := '009';
        Elsif Lv_v_Econ_code = '10' THEN
           LV_V_ECONOMIC_CODE := '010';
        Elsif Lv_v_Econ_code = '11' THEN
           LV_V_ECONOMIC_CODE := '011';
        Elsif Lv_v_Econ_code = '12' THEN
           LV_V_ECONOMIC_CODE := '012';
        Elsif Lv_v_Econ_code = '13' THEN
           LV_V_ECONOMIC_CODE := '013';
        Elsif Lv_v_Econ_code = '14' THEN
           LV_V_ECONOMIC_CODE := '014';
        Elsif Lv_v_Econ_code = '15' THEN
           LV_V_ECONOMIC_CODE := '015';
        Elsif Lv_v_Econ_code = '16' THEN
           LV_V_ECONOMIC_CODE := '004';
        Elsif Lv_v_Econ_code = '17' THEN
           LV_V_ECONOMIC_CODE := '005';
        ELSE
           LV_V_ECONOMIC_CODE := '018';
        End If;
    ELSE
      LV_V_ECONOMIC_CODE := NULL;
    End If;

    Return LV_V_ECONOMIC_CODE;
Exception
    WHEN OTHERS THEN
         LV_V_ECONOMIC_CODE := NULL;
         Return LV_V_ECONOMIC_CODE;
End Lf_V_Cbo_Purpose_Cr_Facility;

Function LF_D_CBO_FACT_CLOSING_DATE (IV_V_REFERENCE_NUMBER IN VARCHAR2) Return DATE IS
   LV_D_CLOSING_DATE       DATE;
Begin
 Begin
    SELECT NVL(MLA_VALIDITY_TO , FACILITY_END_DATE )
      INTO LV_D_CLOSING_DATE
      FROM S3G_ORG_APPPROC A , 
           S3G_LAD_ACCCREATION B
     WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID 
      AND  B.PANUM  = IV_V_REFERENCE_NUMBER;
 Exception
   WHEN OTHERS THEN
     Return NULL;
 End;
    Return LV_D_CLOSING_DATE;
End LF_D_CBO_FACT_CLOSING_DATE;

Function Lf_Sr_Member_Details (IV_V_SR_MEMBER_CODE IN VARCHAR2 , IV_V_TYPE IN VARCHAR2) Return VARCHAR2 IS
   LV_V_VALUES VARCHAR2(50); 
Begin
     If IV_V_TYPE = 1 THEN -- CONSTITUTION_ID

         SELECT CONSTITUTION_ID INTO LV_V_VALUES
           FROM S3G_ORG_CUSTMASTER
          WHERE CUSTOMER_CODE = IV_V_SR_MEMBER_CODE ;

      Elsif IV_V_TYPE = 2 THEN -- RESIDENTIAL_CODE

        SELECT NATIONALITY INTO LV_V_VALUES
         FROM S3G_ORG_CUSTMASTER
        WHERE CUSTOMER_CODE = IV_V_SR_MEMBER_CODE ;

     Elsif IV_V_TYPE = 3 THEN -- CUSTOMER_REFERENCE

         SELECT NID_CR_RID_NUMBER  INTO LV_V_VALUES
          FROM S3G_ORG_CUSTMASTER
          WHERE CUSTOMER_CODE = IV_V_SR_MEMBER_CODE ;
    End If;
     Return LV_V_VALUES ;
    Exception
         WHEN OTHERS THEN
     Return NULL;
End Lf_Sr_Member_Details;




Procedure DP_CBO_GENERATE_DATA (IV_D_From_DATE IN DATE, IV_D_To_DATE IN DATE) 
IS
LV_N_transaction_id   NUMBER;
LV_V_USERID           VARCHAR2(25);
Lv_v_error_flag       VARCHAR2(1);
Lv_v_error_type       VARCHAR2(1);
Lv_v_error_mesg       VARCHAR2(1000);

lv_n_accnt_cnt        NUMBER := 0;
lv_n_fw_accnt_cnt     NUMBER := 0;

/*

Cursor c1 IS

insert into CBO_LEASE
(PANUM)
Select DISTINCT PANUM  CONTRACT_NUMBER 
FROM 
(
select PANUM 
  from S3G_LAD_ACCCREATION a 
  where CREATION_DATE BETWEEN IV_D_From_DATE AND IV_D_To_DATE  AND 
    PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
	  AND 
    (    TRUNC(A.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
        )
    AND A.LOB_ID in (1,2,3)
UNION ALL
 Select PANUM   
  from S3G_ORG_APPPROC A ,
       S3G_LAD_ACCCREATION  B
 WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID   
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
   AND A.APPLICAION_PROCESS_DATE  <= IV_D_To_DATE
   AND (      TRUNC(B.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE 
           OR TRUNC(B.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   
       )
   AND A.LOB_ID in (1,2,3)
UNION ALL
  select B.PANUM  
   from S3G_ORG_CUSTMASTER A ,	S3G_LAD_ACCCREATION  B
  WHERE ( TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
    AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
    AND A.CUSTOMER_ID = B.CUSTOMER_ID 	
    AND B.LOB_ID in (1,2,3)
UNION ALL
select  B.PANUM  
  from S3G_OR_CUST_GROUP C , S3G_ORG_CUSTMASTER A ,S3G_LAD_ACCCREATION  B
WHERE ( TRUNC(C.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
  AND C.CUST_GROUP_ID = A.GROUP_ID
  AND A.CUSTOMER_ID = B.CUSTOMER_ID 
  AND B.LOB_ID in (1,2,3)
UNION ALL  
 Select A.PANUM 
   from S3G_INS_ASTINSENTRY A,S3G_LAD_ACCCREATION  B
  WHERE  (    TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR  TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    )
     AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
     AND A.PANUM  = B.PANUM 
     AND B.LOB_ID in (1,2,3)
UNION ALL  	
	Select A.PANUM 
	  from S3G_LAD_ACCCLOSR A,S3G_LAD_ACCCREATION  B	  
	  where (     TRUNC(A.CREATED_ON)BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
            OR  TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    )
	  AND A.PANUM  = B.PANUM 	  	
    AND B.LOB_ID in (1,2,3)
UNION ALL	
	Select PANUM 
	  from S3G_LR_CASEMASTER
	  where (   TRUNC(CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
              OR 
              TRUNC(MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
     AND LOB_ID in (1,2,3)         
UNION ALL
	select DET.REFERENCE_NUMBER PANUM
    from S3G_JV_HDR HDR , S3G_JV_DET DET 
    WHERE TRUNC(HDR.JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
      AND HDR.ACCOUNT_LINK_KEY = DET.ACCOUNT_LINK_KEY	  
      AND HDR.LOB_ID in (1,2,3) and  DET.REFERENCE_NUMBER is not null
UNION ALL
select B.PANUM  
  from S3G_LAD_PYMNTREQST A , S3G_LAD_PAYMENTREQSTDET B
 where A.REQUEST_NO = B.REQUEST_NO
  AND (    TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    
        OR TRUNC(A.MODIFIED_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
  AND A.LOB_ID in (1,2,3)      
union all
Select B.PANUM 
  from S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B
WHERE A.RECEIPT_ID  = B.RECEIPT_ID
  AND TRUNC(A.RECEIPT_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
  AND A.LOB_ID in (1,2,3)
union all
SELECT PANUM  
  FROM S3G_LAD_DELIVRYINSTRU A
 where ( TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
 AND A.LOB_ID in (1,2,3)
 union all 
 SELECT B.PANUM 
   FROM S3G_CLN_CHEQRETPROC C , S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B  
  where C.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = C.RECEIPT_ID  
   and TRUNC(C.CHEQUE_RETURN_ADVICE_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
   AND A.LOB_ID in (1,2,3)
UNION ALL
sELECT A.PANUM  
    FROM S3G_LAD_MANUALJNDET a , S3G_LAD_MANUALJN B
   WHERE A.MANUAL_JOURNAL_VOUCHER_ID = B.MANUAL_JV_ID
     AND TRUNC(B.MANUAL_JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
     and a.LOB_ID in (1,2,3)
);
--WHERE PANUM IN ('BKV029699','BKV055393','BKV055529','BKV058269','BKV059325',
--'BKN044629','BKV064774','HON044107','HON045007','HOV071163','BKV075586','SUV069844')

--IN ( 'BKV029699','BKV055393','BKV055529','BKV058269','BKV059325','BKV059545','BKV059845','BKV060073', 'BKV060618','BKV060648','BKV061132','BKV061590','BKV061823','BKV062159','BKV062269','BKV063210', 'BKV063263','BKV063553','BKV063687','BKV063745','BKV064273','BKV064389','BKV064577','BKV064670', 'BKV064709','BKV064910','BKV065010','BKV065089','BKV065179','BKV065401','BKV065485','BKV065743', 'BKV065757','BKV066244','BKV066371','BKV066543','BKV066591','BKV066673','BKV066913','BKV066926', 'BKV067312','BKV067388','BKV067857','BKV068060','BKV068306','BKV068338','BKV068340','BKV068692', 'BKV068735','BKV068859','BKV068860','BKV068861','BKV068885', 'BKV069118', 'BKV069131', 'BKV069223', 'BKV069488', 'BKV069517', 'BKV069577', 'BKV069591', 'BKV069838', 'BKV069889', 'BKV069952', 'BKV069993', 'BKV070543', 'BKV070657', 'BKV070664', 'BKV070687', 'BKV071054', 'BKV071088', 'BKV071101', 'BKV071237', 'BKV071289', 'BKV071507', 'BKV071571', 'BKV071682', 'BKV071874', 'BKV071966',
--  'BKV072004', 'BKV072005', 'BKV072007', 'BKV072320', 'BKV072426', 'BKV072514', 'BKV072540', 'BKV072662', 'BKV072703', 'BKV072746', 'BKV072817', 'BKV073219', 'BKV073237', 'BKV073381', 'BKV073465', 'BKV073557', 'BKV073620', 'BKV073726', 'BKV073790', 'BKV073962', 'BKV073988', 'BKV074145', 'BKV074188', 'BKV074643', 'BKV074977', 'BKV074981', 'BKV075024', 'BKV075118', 'BKV075177', 'BKV075536', 'BKV075575', 'BKV075579', 'BKV075754', 'BKV075954', 'BKV076064', 'BKV076092', 'BKV076103', 'BKV076350', 'BKV076403', 'BKV076511', 'BKV076655', 'BKV076815', 'FL640001', 'HOC050944', 'HOC051125', 'HOC051130', 'HOC051135', 'HOC051136', 'HOC051165', 'HOC051167', 'HOC051177', 'HOC051179', 'HOC051185', 'HOC051191', 'HOC051193', 'HOC051197', 'HOC051200', 'HOC051206', 'HOC051207', 'HOC051209', 'HOC051216', 'HOC051219', 'HOC051226', 'HON010714', 'HON013881', 'HON045134', 'HON045375', 'HON045626', 'HOV040931', 'HOV049739', 'HOV051729', 'HOV051891', 'HOV051948', 'HOV052243', 'HOV052363', 'HOV052621',
--  'HOV052810', 'HOV053982', 'HOV054267', 'HOV054511', 'HOV054909', 'HOV055018', 'HOV055028', 'HOV055391', 'HOV055606', 'HOV056043', 'HOV056141', 'HOV056287', 'HOV056319', 'HOV056330', 'HOV056504', 'HOV056699', 'HOV056804', 'HOV056854', 'HOV056859', 'HOV057002', 'HOV057007', 'HOV057038', 'HOV057079', 'HOV057196', 'HOV057217', 'HOV057229', 'HOV057287', 'HOV057312', 'HOV057355', 'HOV057375', 'HOV057397', 'HOV057417', 'HOV057552', 'HOV057576', 'HOV057583', 'HOV057601', 'HOV057611', 'HOV057698', 'HOV057702', 'HOV057709', 'HOV057904', 'HOV057905', 'HOV058011', 'HOV058014', 'HOV058100', 'HOV058161', 'HOV058366', 'HOV058624', 'HOV058654', 'HOV058671', 'HOV058672', 'HOV058699', 'HOV058738', 'HOV058746', 'HOV058752', 'HOV058790', 'HOV058812', 'HOV058937', 'HOV058949', 'HOV058951', 'HOV058952', 'HOV058961', 'HOV059116', 'HOV059124', 'HOV059129', 'HOV059137', 'HOV059167', 'HOV059206', 'HOV059207', 'HOV059264', 'HOV059271', 'HOV059306', 'HOV059516', 'HOV059553', 'HOV059579', 'HOV059830'
--  );
  


Cursor c2 IS
Select DISTINCT PANUM  CONTRACT_NUMBER 
FROM 
(
select PANUM 
  from S3G_LAD_ACCCREATION A 
  where CREATION_DATE  BETWEEN IV_D_From_DATE AND IV_D_To_DATE
    AND PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
	  AND (    TRUNC(A.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
        )
    AND A.LOB_ID in (4,5,6)
UNION ALL
 Select PANUM   
  from S3G_ORG_APPPROC A ,
       S3G_LAD_ACCCREATION  B
 WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID   
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
   AND A.APPLICAION_PROCESS_DATE  <= IV_D_To_DATE
   AND (      TRUNC(B.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE 
           OR TRUNC(B.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   
       )
   AND A.LOB_ID in (4,5,6)
UNION ALL
  select B.PANUM  
   from S3G_ORG_CUSTMASTER A ,	S3G_LAD_ACCCREATION  B
  WHERE ( TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
    AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
    AND A.CUSTOMER_ID = B.CUSTOMER_ID 	
    AND B.LOB_ID in (4,5,6)
UNION ALL
select  B.PANUM  
  from S3G_OR_CUST_GROUP C , S3G_ORG_CUSTMASTER A ,S3G_LAD_ACCCREATION  B
WHERE ( TRUNC(C.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
  AND C.CUST_GROUP_ID = A.GROUP_ID
  AND A.CUSTOMER_ID = B.CUSTOMER_ID 
  AND B.LOB_ID in (4,5,6)
UNION ALL  	
	Select A.PANUM 
	  from S3G_LAD_ACCCLOSR A,S3G_LAD_ACCCREATION  B	  
	  where (     TRUNC(A.CREATED_ON)BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
            OR  TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    )
	  AND A.PANUM  = B.PANUM 	  	
    AND B.LOB_ID in (4,5,6)
UNION ALL	
	Select PANUM 
	  from S3G_LR_CASEMASTER
	  where (   TRUNC(CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
              OR 
              TRUNC(MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
     AND LOB_ID in (4,5,6)
UNION ALL
	select DET.REFERENCE_NUMBER PANUM
    from S3G_JV_HDR HDR , S3G_JV_DET DET 
    WHERE TRUNC(HDR.JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
      AND HDR.ACCOUNT_LINK_KEY = DET.ACCOUNT_LINK_KEY	  
      AND HDR.LOB_ID in (4,5,6) and  DET.REFERENCE_NUMBER is not null
UNION ALL
select B.PANUM  
  from S3G_LAD_PYMNTREQST A , S3G_LAD_PAYMENTREQSTDET B
 where A.REQUEST_NO = B.REQUEST_NO
  AND (    TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    
        OR TRUNC(A.MODIFIED_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
  AND A.LOB_ID in (4,5,6)      
union all
Select B.PANUM 
  from S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B
WHERE A.RECEIPT_ID  = B.RECEIPT_ID
  AND TRUNC(A.RECEIPT_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
  AND A.LOB_ID in (4,5,6)
 union all 
 SELECT B.PANUM 
   FROM S3G_CLN_CHEQRETPROC C , S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B  
  where C.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = C.RECEIPT_ID  
   and TRUNC(C.CHEQUE_RETURN_ADVICE_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
   AND A.LOB_ID in (4,5,6)
UNION ALL
sELECT A.PANUM  
    FROM S3G_LAD_MANUALJNDET a , S3G_LAD_MANUALJN B
   WHERE A.MANUAL_JOURNAL_VOUCHER_ID = B.MANUAL_JV_ID
     AND TRUNC(B.MANUAL_JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
     and a.LOB_ID in (4,5,6)
);
--WHERE PANUM IN ('109','1182','1184','1195','1209','1210','1212','1228','1236');

*/
Type PT_LIVE_CONTRACT_TAB    IS TABLE OF VARCHAR2(32767) INDEX BY BINARY_INTEGER;
Type PT_V_FW_LIVE_CONTRACT IS TABLE OF VARCHAR2(32767) INDEX BY BINARY_INTEGER;

LV_V_CONTRACT_NUMBER    PT_LIVE_CONTRACT_TAB ;
LV_V_ACCOUNT_NUMBER     PT_V_FW_LIVE_CONTRACT ;


BEGIN
DELETE FROM CBO_LEASE;
insert into CBO_LEASE
(PANUM,PA_SA_REF_ID)
Select DISTINCT T.PANUM  CONTRACT_NUMBER ,PASA.PA_SA_REF_ID
FROM 
(
select PANUM 
  from S3G_LAD_ACCCREATION a 
  where CREATION_DATE BETWEEN IV_D_From_DATE AND IV_D_To_DATE  AND 
    PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
	  AND 
    (    TRUNC(A.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
        )
    AND A.LOB_ID in (1,2,3)
UNION ALL
 Select PANUM   
  from S3G_ORG_APPPROC A ,
       S3G_LAD_ACCCREATION  B
 WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID   
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
   AND A.APPLICAION_PROCESS_DATE  <= IV_D_To_DATE
   AND (      TRUNC(B.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE 
           OR TRUNC(B.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   
       )
   AND A.LOB_ID in (1,2,3)
UNION ALL
  select B.PANUM  
   from S3G_ORG_CUSTMASTER A ,	S3G_LAD_ACCCREATION  B
  WHERE ( TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
    AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
    AND A.CUSTOMER_ID = B.CUSTOMER_ID 	
    AND B.LOB_ID in (1,2,3)
UNION ALL
select  B.PANUM  
  from S3G_OR_CUST_GROUP C , S3G_ORG_CUSTMASTER A ,S3G_LAD_ACCCREATION  B
WHERE ( TRUNC(C.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
  AND C.CUST_GROUP_ID = A.GROUP_ID
  AND A.CUSTOMER_ID = B.CUSTOMER_ID 
  AND B.LOB_ID in (1,2,3)
UNION ALL  
 Select A.PANUM 
   from S3G_INS_ASTINSENTRY A,S3G_LAD_ACCCREATION  B
  WHERE  (    TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR  TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    )
     AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
     AND A.PANUM  = B.PANUM 
     AND B.LOB_ID in (1,2,3)
UNION ALL  	
	Select A.PANUM 
	  from S3G_LAD_ACCCLOSR A,S3G_LAD_ACCCREATION  B	  
	  where (     TRUNC(A.CREATED_ON)BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
            OR  TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    )
	  AND A.PANUM  = B.PANUM 	  	
    AND B.LOB_ID in (1,2,3)
UNION ALL	
	Select PANUM 
	  from S3G_LR_CASEMASTER
	  where (   TRUNC(CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
              OR 
              TRUNC(MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
     AND LOB_ID in (1,2,3)         
UNION ALL
	select DET.REFERENCE_NUMBER PANUM
    from S3G_JV_HDR HDR , S3G_JV_DET DET 
    WHERE TRUNC(HDR.JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
      AND HDR.ACCOUNT_LINK_KEY = DET.ACCOUNT_LINK_KEY	  
      AND HDR.LOB_ID in (1,2,3) and  DET.REFERENCE_NUMBER is not null
UNION ALL
select B.PANUM  
  from S3G_LAD_PYMNTREQST A , S3G_LAD_PAYMENTREQSTDET B
 where A.REQUEST_NO = B.REQUEST_NO
  AND (    TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    
        OR TRUNC(A.MODIFIED_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
  AND A.LOB_ID in (1,2,3)      
union all
Select B.PANUM 
  from S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B
WHERE A.RECEIPT_ID  = B.RECEIPT_ID
  AND TRUNC(A.RECEIPT_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
  AND A.LOB_ID in (1,2,3)
union all
SELECT PANUM  
  FROM S3G_LAD_DELIVRYINSTRU A
 where ( TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
 AND A.LOB_ID in (1,2,3)
 union all 
 SELECT B.PANUM 
   FROM S3G_CLN_CHEQRETPROC C , S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B  
  where C.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = C.RECEIPT_ID  
   and TRUNC(C.CHEQUE_RETURN_ADVICE_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
   AND A.LOB_ID in (1,2,3)
UNION ALL
sELECT A.PANUM  
    FROM S3G_LAD_MANUALJNDET a , S3G_LAD_MANUALJN B
   WHERE A.MANUAL_JOURNAL_VOUCHER_ID = B.MANUAL_JV_ID
     AND TRUNC(B.MANUAL_JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
     and a.LOB_ID in (1,2,3)
)T
INNER JOIN  S3G_LAD_ACCPASADET PASA
ON PASA.PANUM=T.PANUM
--where pasa.panum='BKV062674'

;


---FW CONTRACTS
BEGIN
DELETE FROM CBO_FW;
INSERT INTO CBO_FW
(
PANUM,PA_SA_REF_ID
)
Select DISTINCT T.PANUM  CONTRACT_NUMBER ,PASA.PA_SA_REF_ID
FROM 
(
select PANUM 
  from S3G_LAD_ACCCREATION A 
  where CREATION_DATE  BETWEEN IV_D_From_DATE AND IV_D_To_DATE
    AND PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
	  AND (    TRUNC(A.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
        )
    AND A.LOB_ID in (4,5,6)
UNION ALL
 Select PANUM   
  from S3G_ORG_APPPROC A ,
       S3G_LAD_ACCCREATION  B
 WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID   
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
   AND A.APPLICAION_PROCESS_DATE  <= IV_D_To_DATE
   AND (      TRUNC(B.CREATED_ON)  BETWEEN IV_D_From_DATE AND IV_D_To_DATE 
           OR TRUNC(B.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   
       )
   AND A.LOB_ID in (4,5,6)
UNION ALL
  select B.PANUM  
   from S3G_ORG_CUSTMASTER A ,	S3G_LAD_ACCCREATION  B
  WHERE ( TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
          OR TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
    AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
    AND A.CUSTOMER_ID = B.CUSTOMER_ID 	
    AND B.LOB_ID in (4,5,6)
UNION ALL
select  B.PANUM  
  from S3G_OR_CUST_GROUP C , S3G_ORG_CUSTMASTER A ,S3G_LAD_ACCCREATION  B
WHERE ( TRUNC(C.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   )
   AND B.PA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
  AND C.CUST_GROUP_ID = A.GROUP_ID
  AND A.CUSTOMER_ID = B.CUSTOMER_ID 
  AND B.LOB_ID in (4,5,6)
UNION ALL  	
	Select A.PANUM 
	  from S3G_LAD_ACCCLOSR A,S3G_LAD_ACCCREATION  B	  
	  where (     TRUNC(A.CREATED_ON)BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
            OR  TRUNC(A.MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    )
	  AND A.PANUM  = B.PANUM 	  	
    AND B.LOB_ID in (4,5,6)
UNION ALL	
	Select PANUM 
	  from S3G_LR_CASEMASTER
	  where (   TRUNC(CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
              OR 
              TRUNC(MODIFIED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
     AND LOB_ID in (4,5,6)
UNION ALL
	select DET.REFERENCE_NUMBER PANUM
    from S3G_JV_HDR HDR , S3G_JV_DET DET 
    WHERE TRUNC(HDR.JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
      AND HDR.ACCOUNT_LINK_KEY = DET.ACCOUNT_LINK_KEY	  
      AND HDR.LOB_ID in (4,5,6) and  DET.REFERENCE_NUMBER is not null
UNION ALL
select B.PANUM  
  from S3G_LAD_PYMNTREQST A , S3G_LAD_PAYMENTREQSTDET B
 where A.REQUEST_NO = B.REQUEST_NO
  AND (    TRUNC(A.CREATED_ON) BETWEEN IV_D_From_DATE AND IV_D_To_DATE    
        OR TRUNC(A.MODIFIED_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE   ) 
  AND A.LOB_ID in (4,5,6)      
union all
Select B.PANUM 
  from S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B
WHERE A.RECEIPT_ID  = B.RECEIPT_ID
  AND TRUNC(A.RECEIPT_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
  AND A.LOB_ID in (4,5,6)
 union all 
 SELECT B.PANUM 
   FROM S3G_CLN_CHEQRETPROC C , S3G_CLN_RCPTPROC A, S3G_CLN_RCPTPROCDTL B  
  where C.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = A.RECEIPT_ID  
   and B.RECEIPT_ID = C.RECEIPT_ID  
   and TRUNC(C.CHEQUE_RETURN_ADVICE_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
   AND A.LOB_ID in (4,5,6)
UNION ALL
sELECT A.PANUM  
    FROM S3G_LAD_MANUALJNDET a , S3G_LAD_MANUALJN B
   WHERE A.MANUAL_JOURNAL_VOUCHER_ID = B.MANUAL_JV_ID
     AND TRUNC(B.MANUAL_JV_DATE) BETWEEN IV_D_From_DATE AND IV_D_To_DATE  
     and a.LOB_ID in (4,5,6)
)T
INNER JOIN  S3G_LAD_ACCPASADET PASA
ON PASA.PANUM=T.PANUM

;
END;--FW CONTRATCS


  
  PV_N_GRACE_DAYS  := Cbopkg00003.Df_N_Get_GRACE_DAY(1,1);
  PV_D_DATE        := IV_D_To_DATE;
  Begin
      UPDATE CBO_RUN_DATA_DIR_DAILY
         SET START_TIME = NULL,
             END_TIME = NULL,
             RECORD_COUNT = 0,
             REPORT_DATE = IV_D_To_DATE;

      Commit;
   End;

  Begin
    SELECT USER_ID
      INTO LV_V_USERID
      FROM S3G_sysad_usermaster
     WHERE USER_CODE = 'SYSADMIN';
Exception
    WHEN OTHERS THEN
     LV_V_USERID:=1;
End;
--> Lob ID (1,2,3)
  BEGIN
DELETE FROM CBO_CONTRACT_MASTER_DAILY;
COMMIT;

--      If C1%ISOPEN THEN
--          Close C1;
--      End If;
--
--      Open C1;
--            Fetch C1 Bulk Collect INTO LV_V_CONTRACT_NUMBER;
--      Close c1;
      
    --If LV_V_CONTRACT_NUMBER.COUNT > 0 THEN

--    FOR J IN LV_V_CONTRACT_NUMBER.FIRST .. LV_V_CONTRACT_NUMBER.LAST
--    Loop

FOR I IN ( 

/**ssL
Select A.PANUM CONTRACT_NUMBER, B.CUSTOMER_CODE CUSTOMER_CODE, A.LOCATION_CODE CONTRACT_BRANCH, NULL AMOUNT_REPAYABLE, A.FINANCE_AMOUNT AMOUNT_PAID, 
                 NULL SCHEME_CODE, A.PA_STATUS_CODE CONTRACT_STATUS, C.APPLICATION_NUMBER APPLICATION_NUMBER, 1 CONTRACT_GROUP, A.LOCATION_CODE APPLICATION_BRANCH, 
                 A.LOB_ID  PRODUCT_CODE,                  
                 NULL TOTAL_ASSET_COST, A.FINANCE_AMOUNT  AMOUNT_FINANCED, NULL NOOF_UNITS, 
                 C.TENURE HIRE_PERIOD, C.TENURE INSTALMENTS,C.CONTRACT_TYPE, E.REPAYMENT_CODE REPAYMENT_MODE, A.CREATION_DATE AGREEMENT_DATE, 
                 NULL  PAYMENT_DATE, 
                 (Select RATE from S3G_LAD_ACCOFFERROIDET B WHERE B.PANUM = A.PANUM and rownum < 2)FLAT_RATE, 
                 null AFC_RATE, null TXN_ID, null FIRST_INSTALMENT_DATE,
                 NULL  CREDIT_DAYS, NULL  DOWN_PAYMENT, NULL  CONTRACT_IRR, NULL  DOWN_PAYMENT_TO_DEALER, NULL  SEQUENCE_KEY_ID, NULL  ADDRESS_SLNO,
                 A.CREATION_DATE CREATION_DATE, NULL  ADVANCE_ARREARS_IND, NULL  REPAYMENT_FREQUENCY, NULL  FINANCE_CHARGES, NULL  AFC_CREDIT_RATE,
                 NULL  MASTER_AGREEMENT_TYPE, NULL  MASTER_AGREEMENT_NUMBER, A.CREATION_DATE MASTER_AGREEMENT_DATE, null MASTER_AGREEMENT_REFERENCE,
                 null LIST_PRICE, null DISCOUNT, null LAST_BILL_RUN_DATE, 'IRR' CALCULATION_TYPE 
                 ,E.PA_SA_REF_ID
            From S3G_LAD_ACCCREATION A  ,
                 S3G_ORG_CUSTMASTER  B  ,
                 S3G_ORG_APPPROC C ,
                 S3g_Lad_Accpasadet E ,
                 ( SELECT  PANUM , ROUND( NVL (cbopkg00003.Df_N_Get_Rent_Arrears ( PANUM , IV_D_To_DATE ),0)
                                        + NVL (cbopkg00003.Df_N_Get_NIL_Balance(  PANUM , IV_D_To_DATE),0)) exposure,
                                          cbopkg00003.Df_N_Get_Contract_Status  (lob_id , PANUM , IV_D_To_DATE ) status
                                                FROM S3G_LAD_ACCCREATION) D
            WHERE A.CUSTOMER_ID            = B.CUSTOMER_ID
              AND A.APPLICATION_PROCESS_ID = C.APPLICATION_PROCESS_ID
              AND A.PANUM = D.PANUM
              AND A.PANUM = E.PANUM
              AND A.LOB_ID IN (1,2,3)
              AND A.PANUM = LV_V_CONTRACT_NUMBER(J)
               AND (     (status = 1 AND EXPOSURE > = 0 ) 
                    OR (    (  ( status = 1 AND exposure > = 0)
                              OR status = 2
                              )
                             AND EXISTS ( SELECT 1 FROM S3G_LAD_ACCCLOSR DCCH 
                                               WHERE DCCH.PANUM = A.PANUM
                                                 AND DCCH.CLOSURE_DATE IS NOT NULL 
                                                 AND DCCH.CLOSURE_TYPE in (2,3)  )
                         )
                        OR (status NOT IN (1,2)  AND EXPOSURE >= 0)
                    )
                    
                    */
                    
                    
            Select A.PANUM CONTRACT_NUMBER, B.CUSTOMER_CODE CUSTOMER_CODE, A.LOCATION_CODE CONTRACT_BRANCH, NULL AMOUNT_REPAYABLE, A.FINANCE_AMOUNT AMOUNT_PAID, 
                 NULL SCHEME_CODE, A.PA_STATUS_CODE CONTRACT_STATUS, C.APPLICATION_NUMBER APPLICATION_NUMBER, 1 CONTRACT_GROUP, A.LOCATION_CODE APPLICATION_BRANCH, 
                 A.LOB_ID  PRODUCT_CODE,                  
                 NULL TOTAL_ASSET_COST, A.FINANCE_AMOUNT  AMOUNT_FINANCED, NULL NOOF_UNITS, 
                 C.TENURE HIRE_PERIOD, C.TENURE INSTALMENTS,C.CONTRACT_TYPE, E.REPAYMENT_CODE REPAYMENT_MODE, A.CREATION_DATE AGREEMENT_DATE, 
                 NULL  PAYMENT_DATE, 
                 (Select RATE from S3G_LAD_ACCOFFERROIDET B WHERE B.PANUM = A.PANUM and rownum < 2)FLAT_RATE, 
                 null AFC_RATE, null TXN_ID, null FIRST_INSTALMENT_DATE,
                 NULL  CREDIT_DAYS, NULL  DOWN_PAYMENT, NULL  CONTRACT_IRR, NULL  DOWN_PAYMENT_TO_DEALER, NULL  SEQUENCE_KEY_ID, NULL  ADDRESS_SLNO,
                 A.CREATION_DATE CREATION_DATE, NULL  ADVANCE_ARREARS_IND, NULL  REPAYMENT_FREQUENCY, NULL  FINANCE_CHARGES, NULL  AFC_CREDIT_RATE,
                 NULL  MASTER_AGREEMENT_TYPE, NULL  MASTER_AGREEMENT_NUMBER, A.CREATION_DATE MASTER_AGREEMENT_DATE, null MASTER_AGREEMENT_REFERENCE,
                 null LIST_PRICE, null DISCOUNT, null LAST_BILL_RUN_DATE, 'IRR' CALCULATION_TYPE 
                 ,E.PA_SA_REF_ID
            From 
            
            S3G_LAD_ACCCREATION a
            inner join S3G_ORG_CUSTMASTER b
            on b.CUSTOMER_ID=a.CUSTOMER_ID
            inner join S3G_ORG_APPPROC c
            on a.APPLICATION_PROCESS_ID=c.APPLICATION_PROCESS_ID
            inner join S3g_Lad_Accpasadet e
            on e.ACCOUNT_CREATION_ID=a.ACCOUNT_CREATION_ID
            INNER JOIN CBO_LEASE CLEASE
            ON CLEASE.PA_SA_REF_ID=E.PA_SA_REF_ID
            INNER JOIN
            (
            SELECT t.PA_SA_REF_ID,t.OPENINGDEMAND FROM (SELECT NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE = 0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND,PA_SA_REF_ID          
            FROM S3G_CLN_DMDDS4 D4    
            WHERE D4.DOCUMENT_DATE <= IV_D_To_DATE   
            AND D4.DUE_FLAG IN (23,108)
           --AND D4.PANUM  = Iv_v_PANUM         
            GROUP BY D4.PA_SA_REF_ID)T WHERE T.OPENINGDEMAND>0
            )TRENTARREAR
            ON TRENTARREAR.PA_SA_REF_ID=E.PA_SA_REF_ID
            
            INNER JOIN 
            (
            Select SUM(NVL(PRINCIPALAMOUNT,0)) AS NILLBAL,PA_SA_REF_ID
            from S3G_LAD_ACCAMORTSTRUCT
            WHERE 
            INSTALLMENTDATE > IV_D_To_DATE----Panum= Iv_v_PANUM AND 
            GROUP BY PA_SA_REF_ID
            )TNILLBAL
            ON TNILLBAL.PA_SA_REF_ID=E.PA_SA_REF_ID
            
           
            
--            S3G_LAD_ACCCREATION A  ,
--                 S3G_ORG_CUSTMASTER  B  ,
--                 S3G_ORG_APPPROC C ,
--                 S3g_Lad_Accpasadet E --,
--                 ( SELECT  PANUM , ROUND( NVL (cbopkg00003.Df_N_Get_Rent_Arrears ( PANUM , '03-SEP-2019' ),0)
--                                        + NVL (cbopkg00003.Df_N_Get_NIL_Balance(  PANUM , '03-SEP-2019'),0)) exposure,
--                                          cbopkg00003.Df_N_Get_Contract_Status  (lob_id , PANUM , '03-SEP-2019' ) status
--                                                FROM S3G_LAD_ACCCREATION) D
            WHERe A.LOB_ID IN (1,2,3) AND  TNILLBAL.NILLBAL+TRENTARREAR.OPENINGDEMAND>=0
            AND e.SA_STATUS_CODE IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61)
            --AND A.PANUM = LV_V_CONTRACT_NUMBER(J)
--               AND (     (status = 1 AND EXPOSURE > = 0 ) 
--                    OR (    (  ( status = 1 AND exposure > = 0)
--                              OR status = 2
--                              )
--                             AND EXISTS ( SELECT 1 FROM S3G_LAD_ACCCLOSR DCCH 
--                                               WHERE DCCH.PANUM = A.PANUM
--                                                 AND DCCH.CLOSURE_DATE IS NOT NULL 
--                                                 AND DCCH.CLOSURE_TYPE in (2,3)  )
--                         )
--                        OR (status
          )   
 Loop
            lv_n_accnt_cnt := lv_n_accnt_cnt + 1;
            CBO_DP_AUTO_TRAN('CBO_CONTRACT_MASTER_DAILY-INSERT-I.CONTRACT_NUMBER==>'||I.CONTRACT_NUMBER);
            Begin
            INSERT INTO CBO_CONTRACT_MASTER_DAILY (CONTRACT_NUMBER, CUSTOMER_CODE, CONTRACT_BRANCH, AMOUNT_REPAYABLE, AMOUNT_PAID, SCHEME_CODE, CONTRACT_STATUS, APPLICATION_NUMBER, CONTRACT_GROUP, APPLICATION_BRANCH, PRODUCT_CODE, TOTAL_ASSET_COST, AMOUNT_FINANCED, NOOF_UNITS, HIRE_PERIOD, INSTALMENTS, CONTRACT_TYPE, REPAYMENT_MODE, AGREEMENT_DATE, PAYMENT_DATE, FLAT_RATE, AFC_RATE, TXN_ID, FIRST_INSTALMENT_DATE, CREDIT_DAYS, DOWN_PAYMENT, CONTRACT_IRR, DOWN_PAYMENT_TO_DEALER, SEQUENCE_KEY_ID, ADDRESS_SLNO, CREATION_DATE, ADVANCE_ARREARS_IND, REPAYMENT_FREQUENCY, FINANCE_CHARGES, AFC_CREDIT_RATE, MASTER_AGREEMENT_TYPE, MASTER_AGREEMENT_NUMBER, MASTER_AGREEMENT_DATE, MASTER_AGREEMENT_REFERENCE, LIST_PRICE, DISCOUNT, LAST_BILL_RUN_DATE, CALCULATION_TYPE,PA_SA_REF_ID)
            VALUES (I.CONTRACT_NUMBER, I.CUSTOMER_CODE, I.CONTRACT_BRANCH, I.AMOUNT_REPAYABLE, I.AMOUNT_PAID, I.SCHEME_CODE,
                       I.CONTRACT_STATUS, I.APPLICATION_NUMBER, I.CONTRACT_GROUP, I.APPLICATION_BRANCH, I.PRODUCT_CODE,
                       I.TOTAL_ASSET_COST, I.AMOUNT_FINANCED, I.NOOF_UNITS, I.HIRE_PERIOD, I.INSTALMENTS, I.CONTRACT_TYPE,
                       I.REPAYMENT_MODE, I.AGREEMENT_DATE, I.PAYMENT_DATE, I.FLAT_RATE, I.AFC_RATE, I.TXN_ID, I.FIRST_INSTALMENT_DATE,
                       I.CREDIT_DAYS, I.DOWN_PAYMENT, I.CONTRACT_IRR, I.DOWN_PAYMENT_TO_DEALER, I.SEQUENCE_KEY_ID, I.ADDRESS_SLNO,
                       I.CREATION_DATE, I.ADVANCE_ARREARS_IND, I.REPAYMENT_FREQUENCY, I.FINANCE_CHARGES, I.AFC_CREDIT_RATE,
                       I.MASTER_AGREEMENT_TYPE, I.MASTER_AGREEMENT_NUMBER, I.MASTER_AGREEMENT_DATE, I.MASTER_AGREEMENT_REFERENCE,
                       I.LIST_PRICE, I.DISCOUNT, I.LAST_BILL_RUN_DATE, I.CALCULATION_TYPE
                       ,I.PA_SA_REF_ID);
            Exception
              WHEN OTHERS THEN
                      Dp_Set_Error('CBO_CONTRACT_MASTER_DAILY_101_'||I.CONTRACT_NUMBER||'~'|| Sqlerrm);                      
              End;

            If MOD(lv_n_accnt_cnt, 100) = 0 THEN
               Commit;
            End If;
       -- End Loop;
    End Loop;
  -- End If;
      Commit;
END ;
--> Lob ID (4,5,6)
  Begin
    DELETE FROM FW_REGISTRATION_MASTER_DAILY;
    Commit;

--      If C2%ISOPEN THEN
--         Close C2;
--      End If;
--    Open C2;
--    Fetch C2 Bulk Collect INTO LV_V_ACCOUNT_NUMBER;
--    Close C2;
    
    --   If LV_V_ACCOUNT_NUMBER.COUNT > 0 THEN

--    FOR J IN LV_V_ACCOUNT_NUMBER.FIRST .. LV_V_ACCOUNT_NUMBER.LAST
--    Loop

     FOR I IN ( Select  A.PANUM ACCOUNT_NUMBER,
        A.CREATION_DATE APPROVAL_DATE,
        A.LOCATION_CODE BRANCH_CODE,
        B.CUSTOMER_CODE CLIENT_CODE,
        NVL(C.MLA_VALIDITY_TO,C.FACILITY_END_DATE)            FACILITY_END_DATE,
        NVL(C.MLA_VALIDITY_FROM,C.FACILITY_START_DATE )       FACILITY_START_DATE,
        NULL  FW_ID,
        A.LOB_ID PRODUCT_CODE,
        NULL SCHEME_TYPE,
        A.PA_STATUS_CODE  STATUS_CODE
From S3G_LAD_ACCCREATION A  ,
       S3G_ORG_CUSTMASTER  B  ,
       S3G_ORG_APPPROC C  ,
       CBO_FW D
  WHERE A.CUSTOMER_ID            = B.CUSTOMER_ID
    AND A.APPLICATION_PROCESS_ID = C.APPLICATION_PROCESS_ID    
    AND A.LOB_ID IN (4,5,6)
    AND D.PANUM=A.PANUM
    --AND A.PANUM = LV_V_ACCOUNT_NUMBER(J) 
    )
     Loop
         lv_n_fw_accnt_cnt := lv_n_fw_accnt_cnt + 1;

            INSERT INTO FW_REGISTRATION_MASTER_DAILY(FW_ID, ACCOUNT_NUMBER, PRODUCT_CODE, SCHEME_TYPE, CLIENT_CODE, BRANCH_CODE, STATUS_CODE, FACILITY_START_DATE, FACILITY_END_DATE, APPROVAL_DATE)
                  VALUES(I.FW_ID, I.ACCOUNT_NUMBER, I.PRODUCT_CODE, I.SCHEME_TYPE, I.CLIENT_CODE, I.BRANCH_CODE, I.STATUS_CODE, I.FACILITY_START_DATE, I.FACILITY_END_DATE, I.APPROVAL_DATE);

            If MOD(lv_n_fw_accnt_cnt, 100) = 0 THEN
               Commit;
            End If;
        End Loop;
 --   End Loop;


 -- End If;


  Commit;
      
END ;


LP_UPDATE_RUN_DATA (1, 'S');
    IF PV_N_CNT > 0 THEN
       Cbopkg00003.DP_CBO_CONSUMER_INPUT(IV_D_To_DATE);  --1
       LP_UPDATE_RUN_DATA (1, 'E');
    End If;
--    
             LP_UPDATE_RUN_DATA (9, 'S');
         If PV_N_CNT > 0 THEN
               Cbopkg00003.DP_CBO_CONSUMER_DISHONOR(IV_D_To_DATE);
               LP_UPDATE_RUN_DATA (9, 'E');
         End If;
--
         LP_UPDATE_RUN_DATA (14, 'S');
         If PV_N_CNT > 0 THEN
               Cbopkg00003.DP_CBO_CONSUMER_LITIGATION(IV_D_To_DATE);
               LP_UPDATE_RUN_DATA (14, 'E');
         End If;

         LP_UPDATE_RUN_DATA (19, 'S');
         If PV_N_CNT > 0 THEN
               Cbopkg00003.DP_CBO_CORPORATE_INPUT(IV_D_To_DATE);
               LP_UPDATE_RUN_DATA (19, 'E');
         End If;

         LP_UPDATE_RUN_DATA (26, 'S');
         If PV_N_CNT > 0 THEN
               Cbopkg00003.DP_CBO_CORPORATE_DISHONOR(IV_D_To_DATE);
               LP_UPDATE_RUN_DATA (26, 'E');
         End If;

         LP_UPDATE_RUN_DATA (31, 'S');
         If PV_N_CNT > 0 THEN
               Cbopkg00003.DP_CBO_CORPORATE_LITIGATION(IV_D_To_DATE);
               LP_UPDATE_RUN_DATA (31, 'E');
         End If;
--
         LP_UPDATE_RUN_DATA (36, 'S');
         If PV_N_CNT > 0 THEN
               Cbopkg00003.DP_CBO_SENIOR_MEMBER(IV_D_To_DATE);
               LP_UPDATE_RUN_DATA (36, 'E');
            End If;


    
EXCEPTION 
WHEN OTHERS THEN 
     Dp_Set_Error('CBO DP_CBO_GENERATE_DATA_102'||'_'||Sqlerrm);
END DP_CBO_GENERATE_DATA;

FUNCTION Df_N_Get_NIL_Balance(Iv_v_PANUM IN VARCHAR2, iv_d_cutoff_date IN DATE)
RETURN NUMBER
IS
Lv_N_Principal_Amount NUMBER := 0;
BEGIN
    BEGIN
          Select SUM(NVL(PRINCIPALAMOUNT,0))
            INTO Lv_N_Principal_Amount
            from S3G_LAD_ACCAMORTSTRUCT
           WHERE Panum= Iv_v_PANUM
             AND INSTALLMENTDATE > iv_d_cutoff_date;
    EXCEPTION 
     WHEN NO_DATA_FOUND THEN 
         Lv_N_Principal_Amount := 0;
    WHEN OTHERS THEN 
         Lv_N_Principal_Amount := 0;
    END ;
Return NVL(Lv_N_Principal_Amount,0);    
END Df_N_Get_NIL_Balance;

FUNCTION Df_N_Get_Rent_Arrears(Iv_v_PANUM IN VARCHAR2, iv_d_cutoff_date IN DATE,d_PA_SA_REF_ID number)
RETURN NUMBER
IS
LV_V_RENT_AMOUNT NUMBER := 0;
BEGIN
BEGIN

  SELECT NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE = 0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND          
    INTO LV_V_RENT_AMOUNT 
    FROM S3G_CLN_DMDDS4 D4    
   WHERE D4.DOCUMENT_DATE <= iv_d_cutoff_date   
     AND D4.DUE_FLAG IN (23,108)
     AND D4.PA_SA_REF_ID  = d_PA_SA_REF_ID         
GROUP BY D4.PA_SA_REF_ID;

EXCEPTION 
 WHEN NO_DATA_FOUND THEN 
     LV_V_RENT_AMOUNT := 0;
WHEN OTHERS THEN 
     LV_V_RENT_AMOUNT := 0;
END ;
  Return NVL(LV_V_RENT_AMOUNT,0);
END Df_N_Get_Rent_Arrears;

FUNCTION Df_N_Get_GRACE_DAY(Iv_N_COMPANY_ID IN NUMBER, IV_N_LOB_ID IN NUMBER)
RETURN NUMBER
IS
LV_N_GRACE_DAYS NUMBER := 0;
BEGIN
BEGIN

      SELECT NVL(PARAMETER_VALUE,0) 
      INTO LV_N_GRACE_DAYS 
        FROM S3G_GLOBAL_PARAMETERS                                    
        INNER JOIN S3G_GLOBAL_PARAMETERVALUES 
        On S3g_Global_Parameters.Param_Set_Id  = S3g_Global_Parametervalues.Param_Set_Id 
        Where S3g_Global_Parameters.Lob_Id = IV_N_LOB_ID 
        AND S3G_GLOBAL_PARAMETERVALUES.PARAMETER_CODE = '24' 
        And S3g_Global_Parameters.Company_Id = Iv_N_COMPANY_ID
        and rownum < 2;
EXCEPTION  
WHEN OTHERS THEN       
       LV_N_GRACE_DAYS := 0;
END ;
  Return NVL(LV_N_GRACE_DAYS,0);
END Df_N_Get_GRACE_DAY;

Procedure DP_CBO_CONSUMER_INPUT(IV_D_ASON_DATE DATE) IS
-- CONSUMER INPUT FILE  CBO_CON_INP_HEADER_DAILY
       LV_D_PARAM_DATE DATE       := IV_D_ASON_DATE;
       LV_R_CONSUMER_INP_HEADER   CBO_CON_INP_HEADER_DAILY%Rowtype;
       LV_R_CONSUMER_INP_CREDIT   CBO_CON_INP_CREDIT_DAILY%Rowtype;
       LV_R_CONSUMER_INP_SUBJECT  CBO_CON_INP_SUBJECT_DAILY%Rowtype;
       LV_R_CONSUMER_INP_EMPLOY   CBO_CON_INP_EMPLOY_DAILY%Rowtype;
       LV_R_CONSUMER_INP_RELATION CBO_CON_INP_RELATION_DAILY%Rowtype;
       LV_R_CONSUMER_INP_SECURITY CBO_CON_INP_SECURITY_DAILY%Rowtype;
       LV_R_CONSUMER_INP_TRAILER  CBO_CON_INP_TRAILER_DAILY%Rowtype;
       LV_V_CONTRACT_NUMBER       CC_CONTRACT_MASTER.CONTRACT_NUMBER%Type;
       LV_N_CNT      NUMBER:=0;
       LV_N_COMMIT   NUMBER := 0;
Begin
DELETE FROM CBO_CON_INP_HEADER_DAILY;
DELETE FROM CBO_CON_INP_CREDIT_DAILY ;
DELETE FROM CBO_CON_INP_SUBJECT_DAILY;
DELETE FROM CBO_CON_INP_EMPLOY_DAILY ;
DELETE FROM CBO_CON_INP_RELATION_DAILY;
DELETE FROM CBO_CON_INP_SECURITY_DAILY;
DELETE FROM CBO_CON_INP_TRAILER_DAILY ;

-- CONSUMER INPUT FILE - HEADER
LP_UPDATE_RUN_DATA(2,'S'); -- CONSUMER INPUT FILE - HEADER
If PV_N_CNT > 0 THEN
    Begin
    -->Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
    LV_R_CONSUMER_INP_HEADER.SEG_IDEN       := 'HDHD';
    LV_R_CONSUMER_INP_HEADER.DATA_PROV_ID   := 'FL640000';
    LV_R_CONSUMER_INP_HEADER.REP_DATE       := LV_D_PARAM_DATE;
    LV_R_CONSUMER_INP_HEADER.REP_TIME       := TRUNC(LV_D_PARAM_DATE) - 1/(24*60*60);
    LV_R_CONSUMER_INP_HEADER.DT_PRE_IN_FILE := TRUNC(SYSDATE);
    LV_R_CONSUMER_INP_HEADER.DATA_AVAIL_IND := '001';
    LV_R_CONSUMER_INP_HEADER.NAT_DATA       := '001';
    LV_R_CONSUMER_INP_HEADER.IFF_VERSION    :=  1 ;-->Df_V_Const_Ref_Dir('CON_INPUT_VERSION_DAILY');
    CBO_DP_AUTO_TRAN('CBO_CON_INP_HEADER_DAILY-INSERT-I.CONTRACT_NUMBER==>');
    INSERT INTO CBO_CON_INP_HEADER_DAILY
            (SEG_IDEN, DATA_PROV_ID, REP_DATE, REP_TIME,
             DT_PRE_IN_FILE, DATA_AVAIL_IND, NAT_DATA,
              IFF_VERSION)
     VALUES (LV_R_CONSUMER_INP_HEADER.SEG_IDEN, LV_R_CONSUMER_INP_HEADER.DATA_PROV_ID,
              LV_R_CONSUMER_INP_HEADER.REP_DATE, LV_R_CONSUMER_INP_HEADER.REP_TIME,
             LV_R_CONSUMER_INP_HEADER.DT_PRE_IN_FILE, LV_R_CONSUMER_INP_HEADER.DATA_AVAIL_IND,
             LV_R_CONSUMER_INP_HEADER.NAT_DATA,
              LV_R_CONSUMER_INP_HEADER.IFF_VERSION);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_INP_HEADER_DAILY_23_'||LV_R_CONSUMER_INP_HEADER.SEG_IDEN||'_'|| Sqlerrm);
    End;
LP_UPDATE_RUN_DATA(2,'E', 1);
End If;

LP_UPDATE_RUN_DATA(3,'S');
If PV_N_CNT > 0 THEN
    
    -- CONSUMER INPUT FILE - CREDIT
     FOR i IN ( SELECT CCM.CONTRACT_NUMBER,
                       DECODE (CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH ,
                       APPLICATION_NUMBER,  CCM.AMOUNT_FINANCED,  CCM.CUSTOMER_CODE, CCM.HIRE_PERIOD, CCM.INSTALMENTS, CCM.FLAT_RATE, CCM.REPAYMENT_MODE,
                       DECODE (PRODUCT_CODE,
                               1, '009',                              
                               3, '018', 
                               4, '016',
                               5, '016',
                               6, '016',
                               '020'
                              ) PRODUCT_CODE,
                       'L' PRODUCT_TYPE, CCM.TXN_ID , CCM.PRODUCT_CODE PRODUCT_ID ,CCM.PA_SA_REF_ID
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND CONSTITUTION_ID = 5
                  
                UNION
                SELECT ACCOUNT_NUMBER CONTRACT_NUMBER,
                       DECODE (BRANCH_CODE,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       ACCOUNT_NUMBER APPLICATION_NUMBER, 0 AMOUNT_FINANCED,
                       CLIENT_CODE CUSTOMER_CODE, 0 HIRE_PERIOD, 0 FLAT_RATE, 0 INSTALMENTS,
                       0 REPAYMENT_MODE,
                       '004' PRODUCT_CODE,
                       'B' PRODUCT_TYPE, NULL , FRM.PRODUCT_CODE PRODUCT_ID,C.PA_SA_REF_ID
                  FROM FW_REGISTRATION_MASTER_DAILY FRM, S3G_ORG_CUSTMASTER SCM,S3G_LAD_ACCPASADET c
                 WHERE SCM.CUSTOMER_CODE = FRM.CLIENT_CODE 
                 and c.panum=FRM.ACCOUNT_NUMBER
                 AND  CONSTITUTION_ID = 5
                 AND Cbopkg00003.DF_N_CBO_AUTHORIZED_AMOUNT(PRODUCT_CODE ,ACCOUNT_NUMBER,LV_D_PARAM_DATE) > 0 
               
                  )
    Loop
    Begin
    LV_N_CNT := LV_N_CNT + 1;
    LV_R_CONSUMER_INP_CREDIT.SEG_IDEN := 'CNCF'; -- Segment Identifier
    LV_R_CONSUMER_INP_CREDIT.DATA_PROV_ID := 'FL640000'; -- Data Provider ID
    LV_R_CONSUMER_INP_CREDIT.PREV_DATA_PROV_ID := NULL;
    LV_R_CONSUMER_INP_CREDIT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CONSUMER_INP_CREDIT.PREV_DATA_PRO_BR_ID :=NULL;    
    LV_R_CONSUMER_INP_CREDIT.CR_FAC_TYPE         := i.Product_code;
    LV_R_CONSUMER_INP_CREDIT.LIA_IND             := '001';
    LV_R_CONSUMER_INP_CREDIT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    
    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN    
      LV_R_CONSUMER_INP_CREDIT.PREV_CR_FAC_ACC_NO := Cbopkg00003.DF_V_CBO_RESCHEDULE_CONTRACT(I.APPLICATION_NUMBER);
    ELSE
      LV_R_CONSUMER_INP_CREDIT.PREV_CR_FAC_ACC_NO := NULL;
    End If;

    LV_R_CONSUMER_INP_CREDIT.INFOR_UPDATE_ON := PV_D_DATE;
    LV_R_CONSUMER_INP_CREDIT.TIME_INFOR_UPDATE := Cbopkg00003.DF_D_CBO_TXN_DATE(I.TXN_ID);
    LV_R_CONSUMER_INP_CREDIT.CR_FAC_OPEN       := Cbopkg00003.DF_D_CBO_INFO_UPDATE_ON(I.PRODUCT_TYPE,I.APPLICATION_NUMBER);
    LV_R_CONSUMER_INP_CREDIT.PRI_CARD_NO := NULL;
    LV_R_CONSUMER_INP_CREDIT.PREV_PRI_CARD_NO := NULL;

    --Loan Sanction Amount / Limit (in OMR)
    
    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.LOAN_SANC_AMT := ROUND(I.AMOUNT_FINANCED);
    ELSE
       LV_R_CONSUMER_INP_CREDIT.LOAN_SANC_AMT := Cbopkg00003.DF_N_CBO_Finance_Amount(i.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    End If;

    LV_R_CONSUMER_INP_CREDIT.LOAN_SANC_CUR := 'OMR';
    LV_R_CONSUMER_INP_CREDIT.LOAN_SANC_AMT_FOR_CUR := NULL;
    
    If I.PRODUCT_TYPE = 'L' THEN
    LV_R_CONSUMER_INP_CREDIT.AUTH_AMT := ROUND(I.AMOUNT_FINANCED);
    ELSE
    LV_R_CONSUMER_INP_CREDIT.AUTH_AMT := Cbopkg00003.DF_N_CBO_AUTHORIZED_AMOUNT(I.PRODUCT_TYPE,I.CONTRACT_NUMBER,LV_D_PARAM_DATE );
    End If;
    
    If i.product_type = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.LOAN_TENURE := I.HIRE_PERIOD;
    ELSE
       LV_R_CONSUMER_INP_CREDIT.LOAN_TENURE := Cbopkg00003.DF_N_CBO_Hire_Period(I.CONTRACT_NUMBER);
    End If;
    
    --Natural Loan Maturity Date
    
    LV_R_CONSUMER_INP_CREDIT.NAT_LOAN_MAT_DATE := Cbopkg00003.DF_D_CBO_LOAN_MATURITY_DATE(I.PRODUCT_TYPE,I.CONTRACT_NUMBER,i.PA_SA_REF_ID);
    
    --Purpose of Credit Facility
    LV_R_CONSUMER_INP_CREDIT.PUR_OF_CRD_FAC := Case I.PRODUCT_CODE  WHEN '012' THEN '004'
                                                                    WHEN '016' THEN '003'
                                                                    WHEN '004' THEN '005'
                                                                    ELSE '004'
                                                                    End;
    
    --Interest Type
        LV_R_CONSUMER_INP_CREDIT.INT_TYPE := '001';
    
    If i.product_type = 'L' THEN
        If I.FLAT_RATE = 0 THEN
         LV_R_CONSUMER_INP_CREDIT.INT_RATE := 5.50;
        ELSE
        LV_R_CONSUMER_INP_CREDIT.INT_RATE := ROUND(I.FLAT_RATE,2);
        End If;
    ELSE
          LV_R_CONSUMER_INP_CREDIT.INT_RATE := Cbopkg00003.DF_N_CBO_ACCT_IRR(I.PRODUCT_TYPE,I.CONTRACT_NUMBER);
    End If;
    LV_R_CONSUMER_INP_CREDIT.HIGH_CR := NULL;

    LV_R_CONSUMER_INP_CREDIT.EXP_CAT := '003';

    LV_R_CONSUMER_INP_CREDIT.EXP_REF := NULL;
    LV_R_CONSUMER_INP_CREDIT.RSK_MIT := NULL;
    --Repayment Frequency
    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.REP_FREQ := '007';
    ELSE
       LV_R_CONSUMER_INP_CREDIT.REP_FREQ := Cbopkg00003.Df_V_Cbo_Repayment_Frequency(i.CONTRACT_NUMBER);
    End If;
    If I.PRODUCT_TYPE = 'L' THEN
        If I.REPAYMENT_MODE = 2 THEN
           LV_R_CONSUMER_INP_CREDIT.REP_MOD := '001';    
        Elsif i.REPAYMENT_MODE IN (4,5) THEN 
           LV_R_CONSUMER_INP_CREDIT.REP_MOD := '004';
        ELSE
           LV_R_CONSUMER_INP_CREDIT.REP_MOD := '005';
        End If;
    ELSE
        LV_R_CONSUMER_INP_CREDIT.REP_MOD := '001';
    End If;
    
    --Number of Installments
    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.NO_OF_INST := I.INSTALMENTS;
    ELSE
       LV_R_CONSUMER_INP_CREDIT.NO_OF_INST := Cbopkg00003.DF_N_CBO_INSTALLMENTS(I.CONTRACT_NUMBER,i.PA_SA_REF_ID);
    End If;
    --Installment Amount
    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.INST_AMT := ROUND(Df_N_Get_Avg_Emi(I.CONTRACT_NUMBER,I.INSTALMENTS,i.PA_SA_REF_ID));
    ELSE
       LV_R_CONSUMER_INP_CREDIT.INST_AMT := Cbopkg00003.DF_N_CBO_INST_AMOUNT(I.CONTRACT_NUMBER,i.PA_SA_REF_ID);
    End If;
    If LV_R_CONSUMER_INP_CREDIT.INST_AMT < 0  THEN
      LV_R_CONSUMER_INP_CREDIT.INST_AMT := 0;
     End If;
    
    --Loan Balance (in OMR)
    LV_R_CONSUMER_INP_CREDIT.LOAN_BAL := Cbopkg00003.DF_N_CBO_LOAN_BALANCE_OMR(I.PRODUCT_TYPE,I.CONTRACT_NUMBER, LV_D_PARAM_DATE,i.PA_SA_REF_ID);
    LV_R_CONSUMER_INP_CREDIT.LOAN_BAL_FOR := NULL;
    LV_R_CONSUMER_INP_CREDIT.DT_LST_AMT_PD := Cbopkg00003.DF_D_CBO_LAST_AMOUNT_DT(I.PRODUCT_TYPE,I.CONTRACT_NUMBER);
    LV_R_CONSUMER_INP_CREDIT.LST_AMT_PD := Cbopkg00003.DF_N_CBO_LAST_AMOUNT_PAID(I.PRODUCT_TYPE,I.CONTRACT_NUMBER,LV_R_CONSUMER_INP_CREDIT.DT_LST_AMT_PD);
    
    --Number Of Days Past Due (NDPD)
    If I.PRODUCT_TYPE = 'L' THEN
      IF Cbopkg00003.Df_v_CBO_Cr_Fac_Status(I.Product_type,I.contract_number,Lv_d_Param_date) = '009' THEN 
         LV_R_CONSUMER_INP_CREDIT.NO_OF_DAYS_PST_DUE := 0;
      ELSE   
         LV_R_CONSUMER_INP_CREDIT.NO_OF_DAYS_PST_DUE := Cbopkg00003.DF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER, LV_D_PARAM_DATE);
      END IF;      
    ELSE    
       LV_R_CONSUMER_INP_CREDIT.NO_OF_DAYS_PST_DUE := Cbopkg00003.DF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER, LV_D_PARAM_DATE,'0');
    End If;
    
    --Amount Overdue
    If I.PRODUCT_TYPE = 'L' THEN
        LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE := ROUND(Cbopkg00003.DF_N_GET_RENT_ARREARS(i.CONTRACT_NUMBER, LV_D_PARAM_DATE,i.PA_SA_REF_ID));
    ELSE
        LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE := ROUND(Cbopkg00003.DF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER,LV_D_PARAM_DATE,'1'));
    End If;

    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.INST_OVERDUE := Cbopkg00003.DF_N_CBO_NIOD(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    ELSE
       LV_R_CONSUMER_INP_CREDIT.INST_OVERDUE := Cbopkg00003.DF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER, LV_D_PARAM_DATE,'2');
    End If;

    LV_R_CONSUMER_INP_CREDIT.AST_CLAF := Cbopkg00003.DF_V_CBO_GET_GRADE(LV_R_CONSUMER_INP_CREDIT.NO_OF_DAYS_PST_DUE,LV_D_PARAM_DATE, I.PRODUCT_ID);    
    If LV_R_CONSUMER_INP_CREDIT.AST_CLAF  IN ('003','004','005') THEN
       LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS :='003';
    ELSE
      LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS := Cbopkg00003.Df_v_CBO_Cr_Fac_Status(I.Product_type,I.contract_number,Lv_d_Param_date);
    End If;   

    If LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS= '003' THEN
       LV_R_CONSUMER_INP_CREDIT.CLS_RES_CODE:= '001';
    ELSE
      LV_R_CONSUMER_INP_CREDIT.CLS_RES_CODE:=NULL;
    End If;

    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN
       LV_R_CONSUMER_INP_CREDIT.CR_FAC_RESTRUCT_DT :=  Cbopkg00003.DF_D_CBO_INFO_UPDATE_ON(I.PRODUCT_TYPE,I.APPLICATION_NUMBER);
    ELSE
       LV_R_CONSUMER_INP_CREDIT.CR_FAC_RESTRUCT_DT := NULL;
    End If;

    LV_R_CONSUMER_INP_CREDIT.RES_FOR_RESTRUCT := Cbopkg00003.DF_V_CBO_RESCHEDULE_REASON(I.Application_Number);
    If I.Product_type = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.INT_RES_AMT :=Cbopkg00003.DF_N_CBO_INTEREST_RESRV_AMT (I.CONTRACT_NUMBER,LV_D_PARAM_DATE,LV_R_CONSUMER_INP_CREDIT.NO_OF_DAYS_PST_DUE);
    ELSE
       LV_R_CONSUMER_INP_CREDIT.INT_RES_AMT := 0;
    End If;
    If I.Product_type = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.BAD_LOAN_PROV_AMT := Cbopkg00003.DF_N_CBO_FM13_PROVISION (I.CONTRACT_NUMBER,LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE,LV_R_CONSUMER_INP_CREDIT.NO_OF_DAYS_PST_DUE,LV_R_CONSUMER_INP_CREDIT.INT_RES_AMT,LV_D_PARAM_DATE);
    ELSE
       LV_R_CONSUMER_INP_CREDIT.BAD_LOAN_PROV_AMT :=0;
    End If;
    If LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE< 0  THEN
       LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE := 0;
    End If;
    If I.Product_Type = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.TOT_AMT_WRT_OFF := Cbopkg00003.DF_N_CBO_Write_Off(i.contract_number,LV_D_PARAM_DATE,i.PA_SA_REF_ID);
    ELSE
       LV_R_CONSUMER_INP_CREDIT.TOT_AMT_WRT_OFF := 0;
    End If;
    If LV_R_CONSUMER_INP_CREDIT.TOT_AMT_WRT_OFF < 0 THEN
       LV_R_CONSUMER_INP_CREDIT.TOT_AMT_WRT_OFF :=0;
    End If;
    -- Patch Added By Sridhar G For MFC-502
    If LV_R_CONSUMER_INP_CREDIT.TOT_AMT_WRT_OFF > 0 THEN
        If LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE =0 AND LV_R_CONSUMER_INP_CREDIT.LOAN_BAL = 0 THEN
            LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS := '009' ;
       ELSE
            LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS := '009' ;
       End If;
       If LV_R_CONSUMER_INP_CREDIT.LOAN_BAL <=  LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE THEN
          LV_R_CONSUMER_INP_CREDIT.LOAN_BAL :=  LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE;
       End If;
       -->> End Patch for DLV650<<--
    End If ;
    -- Patch Ends Here for MFC-502
    LV_R_CONSUMER_INP_CREDIT.AMT_WRT_OFF_P_L := NULL;
    LV_R_CONSUMER_INP_CREDIT.AMT_WRT_OFF_PROV := NULL;
    LV_R_CONSUMER_INP_CREDIT.AMT_WRT_OFF_RS := NULL;
    LV_R_CONSUMER_INP_CREDIT.RES_FOR_AMT_WRT_OFF := NULL;
    If i.product_type = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.CR_FAC_CL_DT := Cbopkg00003.DF_D_CBO_CLOSING_DATE(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    
           IF  LV_R_CONSUMER_INP_CREDIT.CR_FAC_CL_DT IS NOT NULL THEN 
           IF LV_R_CONSUMER_INP_CREDIT.DT_LST_AMT_PD  > LV_R_CONSUMER_INP_CREDIT.CR_FAC_CL_DT THEN  
              LV_R_CONSUMER_INP_CREDIT.DT_LST_AMT_PD := LV_R_CONSUMER_INP_CREDIT.CR_FAC_CL_DT; 
           END IF;
       END IF;
    
       
    ELSE
       LV_R_CONSUMER_INP_CREDIT.CR_FAC_CL_DT:= NULL; --PV_D_DATE;    
    End If;

    If LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS IN ('010','009') THEN
       LV_R_CONSUMER_INP_CREDIT.REA_FOR_CLOS := Cbopkg00003.DF_V_CBO_CLOSURE_REASON(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
      
    ELSE
      LV_R_CONSUMER_INP_CREDIT.REA_FOR_CLOS := NULL;
    End If;
    
    If i.product_type = 'L' THEN
       LV_R_CONSUMER_INP_CREDIT.SEC_COV_FLG := Cbopkg00003.DF_V_CBO_Security_Flag(i.Contract_number,i.PA_SA_REF_ID); -- Comment By Sudeesh For MFCSL17M024_DLV1030 On 09-Jan-2017
    else 
       LV_R_CONSUMER_INP_CREDIT.SEC_COV_FLG := '002'; 
    END IF;
    
    --> End Patch   
    
    LV_R_CONSUMER_INP_CREDIT.TOT_CSH_SPNT_BILL_CYCLE := NULL;
    LV_R_CONSUMER_INP_CREDIT.TOT_RET_SPNT_BILL_CYCLE := NULL;
    LV_R_CONSUMER_INP_CREDIT.AMT_DISP := NULL;
    LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE := NULL;
    LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE_DT := NULL;
    
    Cbopkg00003.DP_D_CBO_MIN_DUE(Iv_v_CONTRACT_NUMBER => I.contract_number,
                                 Iv_D_DATE            => LV_D_PARAM_DATE,
                                 Ov_D_Inst_due_date   => LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE_DT,
                                 Ov_n_inst_amt        => LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE);
    -->>Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
    If LV_R_CONSUMER_INP_CREDIT.CR_FAC_TYPE <> '008' THEN
         LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE_DT := NULL;
         LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE := NULL;
    End If;

    If LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS='009' THEN
       LV_R_CONSUMER_INP_CREDIT.LOAN_BAL:=0;
      
    End If;
    
    LV_R_CONSUMER_INP_CREDIT.HG_SNG_VAL_TRANS_BIL_CYCLE :=NULL;
    
    LV_R_CONSUMER_INP_CREDIT.LT_FEE_LEV_REP_PER := NULL;
    LV_R_CONSUMER_INP_CREDIT.TRANS_TYPE_CD := '001';
    LV_R_CONSUMER_INP_CREDIT.COMP_STATUS := NULL;
    LV_R_CONSUMER_INP_CREDIT.COMP_INTI_NO := NULL;
    LV_R_CONSUMER_INP_CREDIT.SPL_CMNTS1 := NULL;
    LV_R_CONSUMER_INP_CREDIT.SPL_CMNTS2 := NULL;
    LV_N_COMMIT := LV_N_COMMIT + 1;
    CBO_DP_AUTO_TRAN('CBO_CON_INP_CREDIT_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_CON_INP_CREDIT_DAILY
            (SEG_IDEN, DATA_PROV_ID, PREV_DATA_PROV_ID, DATA_PRO_BR_ID, PREV_DATA_PRO_BR_ID, CR_FAC_TYPE, LIA_IND,
             CR_FAC_ACC_NO, PREV_CR_FAC_ACC_NO, INFOR_UPDATE_ON, TIME_INFOR_UPDATE, PRI_CARD_NO, PREV_PRI_CARD_NO,
             CR_FAC_OPEN, LOAN_SANC_AMT, LOAN_SANC_CUR, LOAN_SANC_AMT_FOR_CUR, AUTH_AMT, LOAN_TENURE, NAT_LOAN_MAT_DATE,
             PUR_OF_CRD_FAC, INT_TYPE, INT_RATE, HIGH_CR, EXP_CAT, RSK_MIT, REP_FREQ, REP_MOD, NO_OF_INST, INST_AMT,
             LOAN_BAL, LOAN_BAL_FOR, DT_LST_AMT_PD, LST_AMT_PD, NO_OF_DAYS_PST_DUE, AMT_OVERDUE, INST_OVERDUE, AST_CLAF,
             CR_FAC_STATUS, CLS_RES_CODE, CR_FAC_RESTRUCT_DT, RES_FOR_RESTRUCT, BAD_LOAN_PROV_AMT, INT_RES_AMT,
             TOT_AMT_WRT_OFF, AMT_WRT_OFF_P_L, AMT_WRT_OFF_PROV, AMT_WRT_OFF_RS, RES_FOR_AMT_WRT_OFF, CR_FAC_CL_DT,
             REA_FOR_CLOS, SEC_COV_FLG, TOT_CSH_SPNT_BILL_CYCLE, TOT_RET_SPNT_BILL_CYCLE, AMT_DISP, MIN_PAY_DUE,
             MIN_PAY_DUE_DT, LT_FEE_LEV_REP_PER, HG_SNG_VAL_TRANS_BIL_CYCLE, TRANS_TYPE_CD, COMP_STATUS, COMP_INTI_NO,
             SPL_CMNTS1, SPL_CMNTS2,
             EXP_REF)
     VALUES (LV_R_CONSUMER_INP_CREDIT.SEG_IDEN, LV_R_CONSUMER_INP_CREDIT.DATA_PROV_ID,
              LV_R_CONSUMER_INP_CREDIT.PREV_DATA_PROV_ID, LV_R_CONSUMER_INP_CREDIT.DATA_PRO_BR_ID,
             LV_R_CONSUMER_INP_CREDIT.PREV_DATA_PRO_BR_ID, LV_R_CONSUMER_INP_CREDIT.CR_FAC_TYPE,
             LV_R_CONSUMER_INP_CREDIT.LIA_IND, LV_R_CONSUMER_INP_CREDIT.CR_FAC_ACC_NO,
             LV_R_CONSUMER_INP_CREDIT.PREV_CR_FAC_ACC_NO, LV_R_CONSUMER_INP_CREDIT.INFOR_UPDATE_ON,
             LV_R_CONSUMER_INP_CREDIT.TIME_INFOR_UPDATE, LV_R_CONSUMER_INP_CREDIT.PRI_CARD_NO,
             LV_R_CONSUMER_INP_CREDIT.PREV_PRI_CARD_NO, LV_R_CONSUMER_INP_CREDIT.CR_FAC_OPEN,
             LV_R_CONSUMER_INP_CREDIT.LOAN_SANC_AMT, LV_R_CONSUMER_INP_CREDIT.LOAN_SANC_CUR,
             LV_R_CONSUMER_INP_CREDIT.LOAN_SANC_AMT_FOR_CUR, LV_R_CONSUMER_INP_CREDIT.AUTH_AMT,
             LV_R_CONSUMER_INP_CREDIT.LOAN_TENURE, LV_R_CONSUMER_INP_CREDIT.NAT_LOAN_MAT_DATE,
             LV_R_CONSUMER_INP_CREDIT.PUR_OF_CRD_FAC, LV_R_CONSUMER_INP_CREDIT.INT_TYPE,
             LV_R_CONSUMER_INP_CREDIT.INT_RATE, LV_R_CONSUMER_INP_CREDIT.HIGH_CR,
             LV_R_CONSUMER_INP_CREDIT.EXP_CAT, LV_R_CONSUMER_INP_CREDIT.RSK_MIT, LV_R_CONSUMER_INP_CREDIT.REP_FREQ,
             LV_R_CONSUMER_INP_CREDIT.REP_MOD, LV_R_CONSUMER_INP_CREDIT.NO_OF_INST, LV_R_CONSUMER_INP_CREDIT.INST_AMT,
             LV_R_CONSUMER_INP_CREDIT.LOAN_BAL, LV_R_CONSUMER_INP_CREDIT.LOAN_BAL_FOR,
             LV_R_CONSUMER_INP_CREDIT.DT_LST_AMT_PD, LV_R_CONSUMER_INP_CREDIT.LST_AMT_PD,
             LV_R_CONSUMER_INP_CREDIT.NO_OF_DAYS_PST_DUE, LV_R_CONSUMER_INP_CREDIT.AMT_OVERDUE,
             LV_R_CONSUMER_INP_CREDIT.INST_OVERDUE, LV_R_CONSUMER_INP_CREDIT.AST_CLAF, LV_R_CONSUMER_INP_CREDIT.CR_FAC_STATUS,
             LV_R_CONSUMER_INP_CREDIT.CLS_RES_CODE, LV_R_CONSUMER_INP_CREDIT.CR_FAC_RESTRUCT_DT,
             LV_R_CONSUMER_INP_CREDIT.RES_FOR_RESTRUCT, LV_R_CONSUMER_INP_CREDIT.BAD_LOAN_PROV_AMT,
             LV_R_CONSUMER_INP_CREDIT.INT_RES_AMT, LV_R_CONSUMER_INP_CREDIT.TOT_AMT_WRT_OFF,
             LV_R_CONSUMER_INP_CREDIT.AMT_WRT_OFF_P_L, LV_R_CONSUMER_INP_CREDIT.AMT_WRT_OFF_PROV,
             LV_R_CONSUMER_INP_CREDIT.AMT_WRT_OFF_RS, LV_R_CONSUMER_INP_CREDIT.RES_FOR_AMT_WRT_OFF,
             LV_R_CONSUMER_INP_CREDIT.CR_FAC_CL_DT, LV_R_CONSUMER_INP_CREDIT.REA_FOR_CLOS, LV_R_CONSUMER_INP_CREDIT.SEC_COV_FLG,
             LV_R_CONSUMER_INP_CREDIT.TOT_CSH_SPNT_BILL_CYCLE, LV_R_CONSUMER_INP_CREDIT.TOT_RET_SPNT_BILL_CYCLE,
             LV_R_CONSUMER_INP_CREDIT.AMT_DISP, LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE, LV_R_CONSUMER_INP_CREDIT.MIN_PAY_DUE_DT,
             LV_R_CONSUMER_INP_CREDIT.LT_FEE_LEV_REP_PER, LV_R_CONSUMER_INP_CREDIT.HG_SNG_VAL_TRANS_BIL_CYCLE,
             LV_R_CONSUMER_INP_CREDIT.TRANS_TYPE_CD, LV_R_CONSUMER_INP_CREDIT.COMP_STATUS, LV_R_CONSUMER_INP_CREDIT.COMP_INTI_NO,
             LV_R_CONSUMER_INP_CREDIT.SPL_CMNTS1, LV_R_CONSUMER_INP_CREDIT.SPL_CMNTS2,
             LV_R_CONSUMER_INP_CREDIT.EXP_REF);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_INP_CREDIT_DAILY_24_'||LV_R_CONSUMER_INP_CREDIT.CR_FAC_ACC_NO||'_'||Sqlerrm);
    End;

    If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
        LP_UPDATE_RUN_DATA(3,'C', LV_N_COMMIT);
        LV_N_COMMIT := 0;
        Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
    End If;
 End Loop;
 LP_UPDATE_RUN_DATA(3,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_INP_CREDIT_DAILY');
End If;

LP_UPDATE_RUN_DATA(4,'S');
If PV_N_CNT > 0 THEN
    --Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
    -- CONSUMER INPUT FILE - SUBJECT
     FOR I IN ( SELECT CCM.CONTRACT_NUMBER,
                       DECODE (CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       APPLICATION_NUMBER, AMOUNT_FINANCED, CCM.CUSTOMER_CODE,
                       NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE,  NATIONALITY  CUM_RESIDENTIAL_CODE, GROUP_ID CUM_CUSTOMER_GROUP_CODE,
                       CONSTITUTION_ID CUM_CONSTITUTION_CODE, HIRE_PERIOD, INSTALMENTS, REPAYMENT_MODE,
                       PRODUCT_CODE, 'L' PRODUCT_TYPE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND CONSTITUTION_ID = 5
                UNION
                SELECT ACCOUNT_NUMBER CONTRACT_NUMBER,
                       DECODE (BRANCH_CODE,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       ACCOUNT_NUMBER APPLICATION_NUMBER, 0 AMOUNT_FINANCED,
                       CLIENT_CODE CUSTOMER_CODE, NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE,
                       NATIONALITY CUM_RESIDENTIAL_CODE,GROUP_ID CUM_CUSTOMER_GROUP_CODE,  CONSTITUTION_ID CUM_CONSTITUTION_CODE,
                       0 HIRE_PERIOD, 0 INSTALMENTS, 0 REPAYMENT_MODE, PRODUCT_CODE, 
                       'B' PRODUCT_TYPE
                  FROM FW_REGISTRATION_MASTER_DAILY FRM, S3G_ORG_CUSTMASTER SCM
                 Where Scm.Customer_Code = Frm.Client_Code And Constitution_Id = 5
                 AND Cbopkg00003.DF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) >= 0) -->> Patched by Mathialagan P for MFC-393 ON 25-AUG-2010
    Loop
    Begin
    LV_R_CONSUMER_INP_SUBJECT.SEG_IDEN := 'CNCS';
    LV_R_CONSUMER_INP_SUBJECT.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_INP_SUBJECT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CONSUMER_INP_SUBJECT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    LV_R_CONSUMER_INP_SUBJECT.SUB_IDEN_CD := I.CUSTOMER_CODE;
    LV_R_CONSUMER_INP_SUBJECT.SUB_PREV_IDEN_CD := NULL;
    LV_R_CONSUMER_INP_SUBJECT.SUB_ENT_TYP := '001';
    LV_R_CONSUMER_INP_SUBJECT.IDEN_TYP := Cbopkg00003.DF_V_CBO_IDENTIFIER_TYPE(I.CUSTOMER_CODE, 'CONSUMER', 'INPUT');

    IF LV_R_CONSUMER_INP_SUBJECT.IDEN_TYP = '001' THEN
    LV_R_CONSUMER_INP_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE; --Cbopkg00003.Df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
    
    Elsif LV_R_CONSUMER_INP_SUBJECT.IDEN_TYP = '002' THEN
    LV_R_CONSUMER_INP_SUBJECT.IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
    ELSE
    LV_R_CONSUMER_INP_SUBJECT.IDEN_NO := NVL( Cbopkg00003.DF_V_GET_NRID_NUMBER(i.customer_code), i.CUM_CUSTOMER_REFERENCE);
    End If;

    LV_R_CONSUMER_INP_SUBJECT.PREV_IDEN_NO := NULL;
    
    
    LV_R_CONSUMER_INP_SUBJECT.IDEN_NO_EXP_DT :=  CASE WHEN  CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) <= TRUNC(LV_D_PARAM_DATE) THEN 
                                                             ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) 
                                                        ELSE CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) END;  -- Code added by Sudeesh From DLV1035
    
    
    LV_R_CONSUMER_INP_SUBJECT.SUB_NAME := Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_SUBJECT.SUB_PREV_NAME := NULL;
    
    If  I.CUM_CONSTITUTION_CODE= 5 THEN
       LV_R_CONSUMER_INP_SUBJECT.SUB_NAT :=  Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
        LV_R_CONSUMER_INP_SUBJECT.SUB_NAT := NULL;
    End If;
    -->> Patch End By Mathialagan P <<--
    LV_R_CONSUMER_INP_SUBJECT.DT_BIRTH := TO_DATE(TO_CHAR(Cbopkg00003.DF_D_CBO_DATE_OF_BIRTH(I.CUSTOMER_CODE),'DD/MM/RRRR'),'DD/MM/RRRR');
    LV_R_CONSUMER_INP_SUBJECT.GENDER := Cbopkg00003.DF_V_CBO_GENDER(I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_SUBJECT.ADD_TYPE_1 := '001';
    LV_R_CONSUMER_INP_SUBJECT.ADD_1_LN_1 := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_SUBJECT.ADD_1_LN_2 := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_1_LN_3 := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_1_CTY :=  Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_SUBJECT.ADD_1_POS_CD := LV_R_CONSUMER_INP_SUBJECT.ADD_1_CTY;
    If LV_R_CONSUMER_INP_SUBJECT.ADD_1_POS_CD IS NOT NULL THEN
       LV_R_CONSUMER_INP_SUBJECT.ADD_1_CTRY := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
       LV_R_CONSUMER_INP_SUBJECT.ADD_1_CTRY := NULL;
    End If;

    LV_R_CONSUMER_INP_SUBJECT.ADD_1_TEL_NO := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_SUBJECT.ADD_TYPE_2 := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_2_LN_1 := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_2_LN_2 := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_2_LN_3 := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_2_CTY := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_2_POS_CD :=NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_2_CTRY := NULL;
    LV_R_CONSUMER_INP_SUBJECT.ADD_2_TEL_NO := NULL;

       LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_CON_INP_SUBJECT_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_CON_INP_SUBJECT_DAILY
            (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, SUB_IDEN_CD, SUB_PREV_IDEN_CD, SUB_ENT_TYP,
             IDEN_TYP, IDEN_NO, PREV_IDEN_NO, IDEN_NO_EXP_DT, SUB_NAME, SUB_PREV_NAME, SUB_NAT, DT_BIRTH,
             GENDER, ADD_TYPE_1, ADD_1_LN_1, ADD_1_LN_2, ADD_1_LN_3, ADD_1_CTY, ADD_1_POS_CD, ADD_1_CTRY,
             ADD_1_TEL_NO, ADD_TYPE_2, ADD_2_LN_1, ADD_2_LN_2, ADD_2_LN_3, ADD_2_CTY, ADD_2_POS_CD, ADD_2_CTRY, ADD_2_TEL_NO)
     VALUES (LV_R_CONSUMER_INP_SUBJECT.SEG_IDEN, LV_R_CONSUMER_INP_SUBJECT.DATA_PROV_ID,
              LV_R_CONSUMER_INP_SUBJECT.DATA_PRO_BR_ID, LV_R_CONSUMER_INP_SUBJECT.CR_FAC_ACC_NO,
             LV_R_CONSUMER_INP_SUBJECT.SUB_IDEN_CD, LV_R_CONSUMER_INP_SUBJECT.SUB_PREV_IDEN_CD,
             LV_R_CONSUMER_INP_SUBJECT.SUB_ENT_TYP, LV_R_CONSUMER_INP_SUBJECT.IDEN_TYP,
             LV_R_CONSUMER_INP_SUBJECT.IDEN_NO, LV_R_CONSUMER_INP_SUBJECT.PREV_IDEN_NO,
             LV_R_CONSUMER_INP_SUBJECT.IDEN_NO_EXP_DT, LV_R_CONSUMER_INP_SUBJECT.SUB_NAME,
             LV_R_CONSUMER_INP_SUBJECT.SUB_PREV_NAME, LV_R_CONSUMER_INP_SUBJECT.SUB_NAT, LV_R_CONSUMER_INP_SUBJECT.DT_BIRTH,
             LV_R_CONSUMER_INP_SUBJECT.GENDER, LV_R_CONSUMER_INP_SUBJECT.ADD_TYPE_1, LV_R_CONSUMER_INP_SUBJECT.ADD_1_LN_1,
             LV_R_CONSUMER_INP_SUBJECT.ADD_1_LN_2, LV_R_CONSUMER_INP_SUBJECT.ADD_1_LN_3, LV_R_CONSUMER_INP_SUBJECT.ADD_1_CTY,
             LV_R_CONSUMER_INP_SUBJECT.ADD_1_POS_CD, LV_R_CONSUMER_INP_SUBJECT.ADD_1_CTRY,
             LV_R_CONSUMER_INP_SUBJECT.ADD_1_TEL_NO, LV_R_CONSUMER_INP_SUBJECT.ADD_TYPE_2, LV_R_CONSUMER_INP_SUBJECT.ADD_2_LN_1,
             LV_R_CONSUMER_INP_SUBJECT.ADD_2_LN_2, LV_R_CONSUMER_INP_SUBJECT.ADD_2_LN_3, LV_R_CONSUMER_INP_SUBJECT.ADD_2_CTY,
             LV_R_CONSUMER_INP_SUBJECT.ADD_2_POS_CD, LV_R_CONSUMER_INP_SUBJECT.ADD_2_CTRY, LV_R_CONSUMER_INP_SUBJECT.ADD_2_TEL_NO);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_INP_SUBJECT_DAILY_25_LV_R_CONSUMER_INP_SUBJECT.CR_FAC_ACC_NO'||Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
 LP_UPDATE_RUN_DATA(4,'C',LV_N_COMMIT);
 LV_N_COMMIT := 0;
 Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
 LP_UPDATE_RUN_DATA(4,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
 Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_INP_SUBJECT_DAILY');
End If;

LP_UPDATE_RUN_DATA(5,'S');
If PV_N_CNT > 0 THEN
    
    -- CONSUMER INPUT FILE - EMPLOY
     FOR i IN ( SELECT CCM.CONTRACT_NUMBER,
                       DECODE (CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       CCM.APPLICATION_NUMBER, CCM.CUSTOMER_CODE, CCM.PRODUCT_CODE, 'L' PRODUCT_TYPE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND CONSTITUTION_ID = 5
                UNION
                SELECT ACCOUNT_NUMBER CONTRACT_NUMBER,
                       DECODE (BRANCH_CODE,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       ACCOUNT_NUMBER APPLICATION_NUMBER, CLIENT_CODE CUSTOMER_CODE,
                       PRODUCT_CODE, 'B' PRODUCT_TYPE
                  FROM FW_REGISTRATION_MASTER_DAILY FRM, S3G_ORG_CUSTMASTER SCM
                 Where Scm.Customer_Code = Frm.Client_Code And Constitution_Id = 5
                 AND Cbopkg00003.DF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) >= 0)
    Loop
    Begin
    LV_R_CONSUMER_INP_EMPLOY.SEG_IDEN := 'CNES';
    LV_R_CONSUMER_INP_EMPLOY.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_INP_EMPLOY.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CONSUMER_INP_EMPLOY.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    LV_R_CONSUMER_INP_EMPLOY.SUB_IDEN_CD := I.CUSTOMER_CODE;
    LV_R_CONSUMER_INP_EMPLOY.EMPR_NAME := Cbopkg00003.DF_V_CBO_EMPLOYER_NAME(I.customer_code);
    If LV_R_CONSUMER_INP_EMPLOY.EMPR_NAME IS NULL OR
       LV_R_CONSUMER_INP_EMPLOY.EMPR_NAME LIKE 'MISC%' THEN
           LV_R_CONSUMER_INP_EMPLOY.EMP_TYP := '002';
    ELSE
        LV_R_CONSUMER_INP_EMPLOY.EMP_TYP := Cbopkg00003.DF_V_CBO_EMP_TYPE(I.CUSTOMER_CODE);
    End If;

    CBO_DP_AUTO_TRAN('CBO_CON_INP_EMPLOY_DAILY-INSERT==>'||I.contract_number);
    LV_R_CONSUMER_INP_EMPLOY.PROF := Cbopkg00003.DF_V_CBO_EMP_PROFESSION(I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_EMPLOY.EMPR_EC_ACT_CD := Cbopkg00003.DF_V_CBO_EMP_ECO_CODE(I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_EMPLOY.DT_HIRED := Cbopkg00003.DF_V_CBO_DATE_HIRED(I.CUSTOMER_CODE);
    LV_R_CONSUMER_INP_EMPLOY.AN_INCOME := Cbopkg00003.DF_N_CBO_ANNUAL_INCOME(I.CONTRACT_NUMBER);
    LV_R_CONSUMER_INP_EMPLOY.DT_INCOME := NULL;
    LV_R_CONSUMER_INP_EMPLOY.SEP_DATE := NULL;
    LV_R_CONSUMER_INP_EMPLOY.PAY_BASIS := NULL;
    LV_N_COMMIT := LV_N_COMMIT + 1;
    
    CBO_DP_AUTO_TRAN('CBO_CON_INP_EMPLOY_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_CON_INP_EMPLOY_DAILY
            (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, SUB_IDEN_CD, EMP_TYP, EMPR_NAME,
             PROF, EMPR_EC_ACT_CD, DT_HIRED, AN_INCOME, DT_INCOME, SEP_DATE, PAY_BASIS)
     VALUES (LV_R_CONSUMER_INP_EMPLOY.SEG_IDEN, LV_R_CONSUMER_INP_EMPLOY.DATA_PROV_ID,
              LV_R_CONSUMER_INP_EMPLOY.DATA_PRO_BR_ID, LV_R_CONSUMER_INP_EMPLOY.CR_FAC_ACC_NO,
             LV_R_CONSUMER_INP_EMPLOY.SUB_IDEN_CD, LV_R_CONSUMER_INP_EMPLOY.EMP_TYP,
             LV_R_CONSUMER_INP_EMPLOY.EMPR_NAME, LV_R_CONSUMER_INP_EMPLOY.PROF, LV_R_CONSUMER_INP_EMPLOY.EMPR_EC_ACT_CD,
             LV_R_CONSUMER_INP_EMPLOY.DT_HIRED, LV_R_CONSUMER_INP_EMPLOY.AN_INCOME, LV_R_CONSUMER_INP_EMPLOY.DT_INCOME,
             LV_R_CONSUMER_INP_EMPLOY.SEP_DATE, LV_R_CONSUMER_INP_EMPLOY.PAY_BASIS);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_INP_EMPLOY_DAILY_26_'||LV_R_CONSUMER_INP_EMPLOY.CR_FAC_ACC_NO||'_'|| Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
 LP_UPDATE_RUN_DATA(5,'C',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
 LP_UPDATE_RUN_DATA(5,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
 Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_INP_EMPLOY_DAILY');
End If;
-- CONSUMER INPUT FILE - RELATION
LP_UPDATE_RUN_DATA(6, 'S');
If PV_N_CNT > 0 THEN
 FOR I IN ( SELECT CCM.CONTRACT_NUMBER,
                   DECODE (CONTRACT_BRANCH,
                           'CO|HO', 'FL640001',
                           'CO|SL', 'FL640002',
                           'CO|SH', 'FL640003',
                           'CO|BK', 'FL640004',
                           'CO|IB', 'FL640005',
                           'CO|SU', 'FL640006',
                           'CO|NZ', 'FL640007'
                          ) CONTRACT_BRANCH,
                   (Select CUSTOMER_CODE FROM S3G_ORG_CUSTMASTER WHERE CUSTOMER_ID = CCA.GUARANTEE_ID)  CUSTOMER_CODE,
                   CCM.CUSTOMER_CODE CCM_CUST_CODE, 
                   SCM.NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE,
                   SCM.NATIONALITY CUM_RESIDENTIAL_CODE,
                   SOC.CONSTITUTION_CODE CUM_CONSTITUTION_CODE,
                   APPLICATION_NUMBER,  DECODE( CCA.GUARANTEE_TYPE_ID,'151','GU','152', 'AG')CUSTOMER_TYPE,                   
                   CASE WHEN NVL(CCA.IS_ACTIVE,0) = '1' THEN '001' ELSE '002' END REL_STATUS 
              FROM CBO_CONTRACT_MASTER_DAILY   CCM,
                   S3G_ORG_APPPROCGUARANTORDET CCA,
                   S3G_ORG_CUSTMASTER SCM ,
                   S3G_ORG_CONSTMAST SOC , 
                   S3G_LAD_ACCCREATION  SLA
             WHERE CCM.CONTRACT_NUMBER = SLA.PANUM
               AND SLA.APPLICATION_PROCESS_ID = CCA.APPLICATION_PROCESS_ID
               AND CCA.GUARANTEE_TYPE_ID IN ( '151','150') 
               AND SCM.CUSTOMER_ID = CCA.GUARANTEE_ID    
               aND SCM.CONSTITUTION_ID = SOC.CONSTITUTION_ID
               AND SLA.LOB_ID IN (1,2,3)
               AND EXISTS (
                      SELECT 1
                        FROM S3G_ORG_CUSTMASTER A
                       WHERE A.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                         AND A.CONSTITUTION_ID = 5 )
                         UNION ALL 
          SELECT CCM.ACCOUNT_NUMBER,
                   DECODE (CCM.BRANCH_CODE,
                           'CO|HO', 'FL640001',
                           'CO|SL', 'FL640002',
                           'CO|SH', 'FL640003',
                           'CO|BK', 'FL640004',
                           'CO|IB', 'FL640005',
                           'CO|SU', 'FL640006',
                           'CO|NZ', 'FL640007'
                          ) CONTRACT_BRANCH,
                    (Select CUSTOMER_CODE FROM S3G_ORG_CUSTMASTER WHERE CUSTOMER_ID = CCA.GUARANTEE_ID) CUSTOMER_CODE,
                   CCM.CLIENT_CODE CCM_CUST_CODE,
                   SCM.NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE,
                   SCM.NATIONALITY CUM_RESIDENTIAL_CODE, 
                   SOC.CONSTITUTION_CODE  CUM_CONSTITUTION_CODE ,
                   NULL, 
                    DECODE( CCA.GUARANTEE_TYPE_ID,'151','GU','152', 'AG') CUM_CUSTOMER_TYPE,                   
                   CASE WHEN NVL(CCA.IS_ACTIVE,0) = '1' THEN '001' ELSE '002' END REL_STATUS 
              FROM FW_REGISTRATION_MASTER_DAILY CCM,                   
                   S3G_ORG_APPPROCGUARANTORDET CCA,
                   S3G_ORG_CUSTMASTER SCM ,
                   S3G_LAD_ACCCREATION  SLA ,
                   S3G_ORG_CONSTMAST SOC 
             WHERE CCM.ACCOUNT_NUMBER = SLA.PANUM
               AND SLA.LOB_ID IN (4,5,6)
               AND GUARANTEE_TYPE_ID IN ('150','151' )
               AND SLA.APPLICATION_PROCESS_ID = CCA.APPLICATION_PROCESS_ID 
               aND SCM.CONSTITUTION_ID = SOC.CONSTITUTION_ID               
                 AND SCM.CUSTOMER_ID       = CCA.GUARANTEE_ID
                 AND EXISTS (
                      SELECT 1
                        FROM S3G_ORG_CUSTMASTER A
                       WHERE A.CUSTOMER_CODE = CCM.CLIENT_CODE
                         AND A.CONSTITUTION_ID = 5)                             
                )
                
Loop
Begin
LV_R_CONSUMER_INP_RELATION.SEG_IDEN := 'CNRS';
LV_R_CONSUMER_INP_RELATION.DATA_PROV_ID := 'FL640000';
LV_R_CONSUMER_INP_RELATION.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
LV_R_CONSUMER_INP_RELATION.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
LV_R_CONSUMER_INP_RELATION.SUB_IDEN_CD := I.CCM_CUST_CODE;

 If I.CUSTOMER_TYPE = 'GU' AND I.CUM_CONSTITUTION_CODE = 1 THEN
  LV_R_CONSUMER_INP_RELATION.NAT_OF_REL_SHP := '009' ;
 Elsif I.CUSTOMER_TYPE = 'GU' AND I.CUM_CONSTITUTION_CODE <> 1 THEN
  LV_R_CONSUMER_INP_RELATION.NAT_OF_REL_SHP := '008';
 ELSE
  LV_R_CONSUMER_INP_RELATION.NAT_OF_REL_SHP := '008';
 End If;

If I.CUM_CONSTITUTION_CODE = 1 THEN
LV_R_CONSUMER_INP_RELATION.REL_ENT_TYPE := '001';
LV_R_CONSUMER_INP_RELATION.REL_IND_DT_OF_BIR :=  Cbopkg00003.DF_D_CBO_DATE_OF_BIRTH(I.CUSTOMER_CODE);
ELSE
LV_R_CONSUMER_INP_RELATION.REL_IND_DT_OF_BIR := Cbopkg00003.Df_V_Cbo_Cr_Issue_Date(I.CUSTOMER_CODE);
 LV_R_CONSUMER_INP_RELATION.REL_ENT_TYPE := '002';
End If;
 If I.CUM_CONSTITUTION_CODE = 1 THEN
      If I.CUM_RESIDENTIAL_CODE = 100 THEN
         LV_R_CONSUMER_INP_RELATION.IDEN_TYP := '001';

      Elsif I.CUM_RESIDENTIAL_CODE NOT IN (100,466,419,453,456,443) THEN 
             LV_R_CONSUMER_INP_RELATION.IDEN_TYP  := '002'; 
     
      ELSE
         LV_R_CONSUMER_INP_RELATION.IDEN_TYP := '006'; 
      End If;
 ELSE
      LV_R_CONSUMER_INP_RELATION.IDEN_TYP := '004'; 
 End If;
 
 If LV_R_CONSUMER_INP_RELATION.IDEN_TYP = '001' THEN
     LV_R_CONSUMER_INP_RELATION.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;---->Cbopkg00003.Df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
 
    Elsif LV_R_CONSUMER_INP_RELATION.IDEN_TYP = '002' THEN
     LV_R_CONSUMER_INP_RELATION.IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
    ELSE
     ---LV_R_CONSUMER_INP_RELATION.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
     ---commented and patched for NRID 24-NOV-2015
    LV_R_CONSUMER_INP_RELATION.IDEN_NO := I.CUM_CUSTOMER_REFERENCE ;--NVL( DF_V_GET_NRID_NUMBER(i.customer_code), i.CUM_CUSTOMER_REFERENCE);
    End If;


LV_R_CONSUMER_INP_RELATION.PREV_IDEN_NO := NULL;
LV_R_CONSUMER_INP_RELATION.IDEN_NO_EXP_DT := Cbopkg00003.DF_D_CBO_Subject_Expiry_date(I.CUSTOMER_CODE);
if LV_R_CONSUMER_INP_RELATION.IDEN_NO_EXP_DT <= trunc(sysdate) then --patch by rajam 13/11/2017
    -- LV_R_CONSUMER_INP_RELATION.IDEN_NO_EXP_DT := trunc(sysdate)+30; -- Comment By Sudeesh For DLV1035
    LV_R_CONSUMER_INP_RELATION.IDEN_NO_EXP_DT :=   ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) ;
end if;
LV_R_CONSUMER_INP_RELATION.REL_IND_ENT_NAME := Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.CUSTOMER_CODE);
LV_R_CONSUMER_INP_RELATION.REL_IND_ENT_PREV_NAME := NULL;
--patch here by sridhar on 19/08/2010 --MFC-393
--LV_R_CONSUMER_INP_RELATION.REL_IND_NAT := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE); sridhar
    If I.CUM_CONSTITUTION_CODE = 1 THEN
      LV_R_CONSUMER_INP_RELATION.REL_IND_NAT := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
      LV_R_CONSUMER_INP_RELATION.REL_IND_NAT := NULL;
    End If;
    --patch ends here
 If I.CUM_CONSTITUTION_CODE = 1 THEN
LV_R_CONSUMER_INP_RELATION.REL_IND_GEN := Cbopkg00003.DF_V_CBO_GENDER(I.CUSTOMER_CODE);
ELSE
LV_R_CONSUMER_INP_RELATION.REL_IND_GEN := NULL;
End If;
--sridhar patch here on 19/08/2010 --MFC-393
--LV_R_CONSUMER_INP_RELATION.REL_BUS_ENT_NAT_INST := Cbopkg00003.DF_V_CBO_NAT_OF_INST(I.CUM_CONSTITUTION_CODE); sridhar
If LV_R_CONSUMER_INP_RELATION.REL_ENT_TYPE <> '001' THEN
LV_R_CONSUMER_INP_RELATION.REL_BUS_ENT_NAT_INST := Cbopkg00003.DF_V_CBO_NAT_OF_INST(I.CUM_CONSTITUTION_CODE);
ELSE
LV_R_CONSUMER_INP_RELATION.REL_BUS_ENT_NAT_INST := NULL;
End If;
--patch ends here
--LV_R_CONSUMER_INP_RELATION.REL_STATUS := Cbopkg00003.Df_V_Cbo_Rel_Status(I.APPLICATION_NUMBER); -->> COMMENT BY SUDEESH ON 14-03-2014 (Guarantor Active -InActive Issue)
--LV_R_CONSUMER_INP_RELATION.REL_STATUS := CBOPKG00003.DF_V_CBO_REL_STATUS(I.CONTRACT_NUMBER,I.CUSTOMER_CODE); -->> Patched BY SUDEESH ON 14-03-2014 (Guarantor Active -InActive Issue)
LV_R_CONSUMER_INP_RELATION.REL_STATUS := i.rel_status; --> correction done by ssk while implementing Factoring Guarantor 15-Apr-2015 
LV_R_CONSUMER_INP_RELATION.ADD_TYP := '001';
LV_R_CONSUMER_INP_RELATION.ADD_LINE_1 := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
LV_R_CONSUMER_INP_RELATION.ADD_LINE_2 :=NULL;
LV_R_CONSUMER_INP_RELATION.ADD_LINE_3 :=NULL;
LV_R_CONSUMER_INP_RELATION.ADD_CITY := Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
LV_R_CONSUMER_INP_RELATION.ADD_POS_COD := LV_R_CONSUMER_INP_RELATION.ADD_CITY;
LV_R_CONSUMER_INP_RELATION.ADD_CTRY := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
LV_R_CONSUMER_INP_RELATION.TEL_NO := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
-->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
--LV_R_CONSUMER_INP_RELATION.EC_ACT_CODE := Cbopkg00003.DF_V_CBO_ECONOMIC_ACTIVITY(I.CUSTOMER_CODE);
If LV_R_CONSUMER_INP_RELATION.REL_ENT_TYPE IN ('002','003') THEN
LV_R_CONSUMER_INP_RELATION.EC_ACT_CODE := Cbopkg00003.DF_V_CBO_ECONOMIC_ACTIVITY(I.CUSTOMER_CODE);
ELSE
LV_R_CONSUMER_INP_RELATION.EC_ACT_CODE := NULL;
End If;
-->> Patch End By Mathialagan P <<--
LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_CON_INP_RELATION_DAILY-INSERT==>'||I.contract_number);
INSERT INTO CBO_CON_INP_RELATION_DAILY
        (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, SUB_IDEN_CD, NAT_OF_REL_SHP,
         REL_ENT_TYPE, IDEN_TYP, IDEN_NO, PREV_IDEN_NO, IDEN_NO_EXP_DT, REL_IND_ENT_NAME,
         REL_IND_ENT_PREV_NAME, REL_IND_NAT, REL_IND_DT_OF_BIR, REL_IND_GEN, REL_BUS_ENT_NAT_INST,
         REL_STATUS, ADD_TYP, ADD_LINE_1, ADD_LINE_2, ADD_LINE_3, ADD_CITY, ADD_POS_COD, ADD_CTRY, TEL_NO,
         EC_ACT_CODE)
 VALUES (LV_R_CONSUMER_INP_RELATION.SEG_IDEN, LV_R_CONSUMER_INP_RELATION.DATA_PROV_ID,
          LV_R_CONSUMER_INP_RELATION.DATA_PRO_BR_ID, LV_R_CONSUMER_INP_RELATION.CR_FAC_ACC_NO,
         LV_R_CONSUMER_INP_RELATION.SUB_IDEN_CD, LV_R_CONSUMER_INP_RELATION.NAT_OF_REL_SHP,
         LV_R_CONSUMER_INP_RELATION.REL_ENT_TYPE, LV_R_CONSUMER_INP_RELATION.IDEN_TYP,
         LV_R_CONSUMER_INP_RELATION.IDEN_NO, LV_R_CONSUMER_INP_RELATION.PREV_IDEN_NO,
         LV_R_CONSUMER_INP_RELATION.IDEN_NO_EXP_DT, LV_R_CONSUMER_INP_RELATION.REL_IND_ENT_NAME,
         LV_R_CONSUMER_INP_RELATION.REL_IND_ENT_PREV_NAME, LV_R_CONSUMER_INP_RELATION.REL_IND_NAT,
         LV_R_CONSUMER_INP_RELATION.REL_IND_DT_OF_BIR, LV_R_CONSUMER_INP_RELATION.REL_IND_GEN,
         LV_R_CONSUMER_INP_RELATION.REL_BUS_ENT_NAT_INST, LV_R_CONSUMER_INP_RELATION.REL_STATUS,
         LV_R_CONSUMER_INP_RELATION.ADD_TYP, LV_R_CONSUMER_INP_RELATION.ADD_LINE_1, LV_R_CONSUMER_INP_RELATION.ADD_LINE_2,
         LV_R_CONSUMER_INP_RELATION.ADD_LINE_3, LV_R_CONSUMER_INP_RELATION.ADD_CITY, LV_R_CONSUMER_INP_RELATION.ADD_POS_COD,
         LV_R_CONSUMER_INP_RELATION.ADD_CTRY, LV_R_CONSUMER_INP_RELATION.TEL_NO,
         LV_R_CONSUMER_INP_RELATION.EC_ACT_CODE);
Exception
    WHEN OTHERS THEN
         Dp_Set_Error('CBO_CON_INP_RELATION_DAILY_27'||'-'||Sqlerrm);
End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
 LP_UPDATE_RUN_DATA(6,'C',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;

End Loop;
LP_UPDATE_RUN_DATA(6,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_INP_RELATION_DAILY');
End If;
-- CONSUMER INPUT FILE - SECURITY
LP_UPDATE_RUN_DATA(7,'S');
If PV_N_CNT > 0 THEN
 FOR I IN ( SELECT CCM.CONTRACT_NUMBER,
       DECODE (CCM.CONTRACT_BRANCH,
               'CO|HO', 'FL640001',
               'CO|SL', 'FL640002',
               'CO|SH', 'FL640003',
               'CO|BK', 'FL640004',
               'CO|IB', 'FL640005',
               'CO|SU', 'FL640006',
               'CO|NZ', 'FL640007'
               ) CONTRACT_BRANCH,
                   'A' SECURITY_INDICATOR, AGREEMENT_DATE CREATION_DATE,
                   --DECODE (CONTRACT_TYPE, 1, '001', 2, '002') CONTRACT_TYPE,-->>  Patched by Mathialagan P for call MFC-393 on 27-AUG-2010  <<--
                   DECODE (CONTRACT_TYPE, 1, '001', 2, '002',3,'001') CONTRACT_TYPE, --For Contract type - Both
                   CCA.ASSET_ID ASSET_MASTER_CODE, 
                   CCM.APPLICATION_NUMBER, 
                   REGN_NUMBER REF1_NUMBER,
                   CHASIS_NUMBER REF2_NUMBER, ENGINE_NUMBER REF3_NUMBER, CCA.ASSET_NUMBER ASSET_NUMBER,
                   ASSET_COST, REF_SLNO ASSET_CONTRACT_REF_SLNO -->> ASSET_CONTRACT_REF_SLNO Field Included by Babu I for call MFC-393 on 23-AUG-2010 <<--
              FROM CBO_CONTRACT_MASTER_DAILY CCM,
                   S3G_ORG_CUSTMASTER SCM,
                   S3g_Lad_Accpasadet SLA ,
                   S3g_Lad_Accastdet CCA
             WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
               AND CONSTITUTION_ID = 5
               AND CCM.CONTRACT_NUMBER = SLA.PANUM
               AND Cca.Pa_Sa_Ref_Id = Sla.Pa_Sa_Ref_Id
               AND CCA.ASSET_NUMBER IS NOT NULL	               
            ORDER BY 1)
Loop
Begin
LV_R_CONSUMER_INP_SECURITY.SEG_IDEN := 'CNSS';
LV_R_CONSUMER_INP_SECURITY.DATA_PROV_ID := 'FL640000';
LV_R_CONSUMER_INP_SECURITY.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
LV_R_CONSUMER_INP_SECURITY.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
-->> Commented and Patched by Babu I for call MFC-393 on 23-AUG-2010 <<--
LV_R_CONSUMER_INP_SECURITY.TYP_OF_SEC := NVL(Cbopkg00003.DF_V_CBO_SECURITY_TYPE(I.APPLICATION_NUMBER, I.ASSET_CONTRACT_REF_SLNO),'028'); ----  Added By Sudeesh on 10-Sep-2014 for DLV830
LV_R_CONSUMER_INP_SECURITY.EST_VAL_SEC := ROUND(I.ASSET_COST);
LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1_TYP := Cbopkg00003.DF_V_CBO_SECURITY_ID(I.APPLICATION_NUMBER,'TYPE',1,I.ASSET_CONTRACT_REF_SLNO);


If LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1_TYP = '003' THEN
  If I.REF1_NUMBER IS NULL  OR I.REF1_NUMBER IN ('0','x','X') THEN
  LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1 := '1101AB';
  ELSE
  LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1 := I.REF1_NUMBER ;
  End If;
Elsif LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1_TYP = '004' THEN
  If I.REF2_NUMBER IS NULL OR I.REF2_NUMBER IN ('0','x','X') THEN
  LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1 := '1MFC6X400936311';
  ELSE
  LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1 := I.REF2_NUMBER ;
  End If;
Elsif LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1_TYP = '005' THEN
  If I.REF3_NUMBER IS NULL OR I.REF3_NUMBER IN ('0','x','X')  THEN
  LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1 := '61198170085962';
  ELSE
  LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1 := I.REF3_NUMBER ;
  End If;
  ----->> Patch ended---->>
ELSE
LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1 := Cbopkg00003.DF_V_CBO_SECURITY_ID(I.APPLICATION_NUMBER,'VALUE',1,I.ASSET_CONTRACT_REF_SLNO);
-->End Path
End If;
LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_2_TYP := NULL;
LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_2 :=NULL;
LV_R_CONSUMER_INP_SECURITY.DT_LAT_VAL := NVL(Cbopkg00003.DF_V_CBO_REG_DATE(I.CONTRACT_NUMBER,I.ASSET_NUMBER),I.CREATION_DATE);
LV_R_CONSUMER_INP_SECURITY.SEC_COV_PER := Cbopkg00003.DF_V_CBO_SECURITY_PERCENT(I.CONTRACT_NUMBER,I.ASSET_NUMBER,LV_D_PARAM_DATE,I.ASSET_MASTER_CODE, I.CREATION_DATE);
LV_R_CONSUMER_INP_SECURITY.NAT_OF_CHANGE := '001';
If LV_R_CONSUMER_INP_SECURITY.TYP_OF_SEC ='013' THEN
   LV_R_CONSUMER_INP_SECURITY.VEH_VIN := I.CONTRACT_TYPE;
ELSE
   LV_R_CONSUMER_INP_SECURITY.VEH_VIN :=NULL;
End If;
-->> Patch End By Mathialagan P <<--
LV_R_CONSUMER_INP_SECURITY.DT_CREA_SEC := LV_R_CONSUMER_INP_SECURITY.DT_LAT_VAL;
LV_R_CONSUMER_INP_SECURITY.END_USE_AST := Cbopkg00003.DF_V_CBO_ASSET_USAGE(I.ASSET_MASTER_CODE);
LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_CON_INP_SECURITY_DAILY-INSERT==>'||I.contract_number);
INSERT INTO CBO_CON_INP_SECURITY_DAILY
        (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, TYP_OF_SEC, NAT_OF_CHANGE, DT_CREA_SEC,
         SEC_COV_PER, EST_VAL_SEC, DT_LAT_VAL, VEH_VIN, END_USE_AST, SEC_IDEN_1_TYP, SEC_IDEN_1, SEC_IDEN_2_TYP, SEC_IDEN_2)
 VALUES (LV_R_CONSUMER_INP_SECURITY.SEG_IDEN, LV_R_CONSUMER_INP_SECURITY.DATA_PROV_ID,
          LV_R_CONSUMER_INP_SECURITY.DATA_PRO_BR_ID, LV_R_CONSUMER_INP_SECURITY.CR_FAC_ACC_NO,
         LV_R_CONSUMER_INP_SECURITY.TYP_OF_SEC, LV_R_CONSUMER_INP_SECURITY.NAT_OF_CHANGE,
         LV_R_CONSUMER_INP_SECURITY.DT_CREA_SEC, LV_R_CONSUMER_INP_SECURITY.SEC_COV_PER,
         LV_R_CONSUMER_INP_SECURITY.EST_VAL_SEC, LV_R_CONSUMER_INP_SECURITY.DT_LAT_VAL,
         LV_R_CONSUMER_INP_SECURITY.VEH_VIN, LV_R_CONSUMER_INP_SECURITY.END_USE_AST,
         LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1_TYP, LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_1,
         LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_2_TYP, LV_R_CONSUMER_INP_SECURITY.SEC_IDEN_2);
Exception
    WHEN OTHERS THEN
         Dp_Set_Error('CBO_CON_INP_SECURITY_DAILY_28_'||Sqlerrm);
End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(7,'C',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;

End Loop;
LP_UPDATE_RUN_DATA(7,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
   Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_INP_SECURITY_DAILY');
End If;

LP_UPDATE_RUN_DATA(8,'S');
If PV_N_CNT > 0 THEN
    -- CONSUMER INPUT FILE - TRAILER
    Begin
    LV_R_CONSUMER_INP_TRAILER.SEG_IDEN := 'TLTL';
    LV_R_CONSUMER_INP_TRAILER.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_INP_TRAILER.NO_CR_FAC := LV_N_CNT;
    
CBO_DP_AUTO_TRAN('CBO_CON_INP_TRAILER_DAILY-INSERT==>');
    INSERT INTO CBO_CON_INP_TRAILER_DAILY
            (SEG_IDEN, DATA_PROV_ID, NO_CR_FAC)
     VALUES (LV_R_CONSUMER_INP_TRAILER.SEG_IDEN,
              LV_R_CONSUMER_INP_TRAILER.DATA_PROV_ID,
             LV_R_CONSUMER_INP_TRAILER.NO_CR_FAC);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_INP_TRAILER_DAILY_29_'||Sqlerrm);
    End;
LP_UPDATE_RUN_DATA(8,'E',1);
End If;
End DP_CBO_CONSUMER_INPUT;

Function DF_N_CBO_AUTHORIZED_AMOUNT(IV_V_PRODUCT_TYPE IN VARCHAR2, IV_V_REFERENCE_NUMBER IN VARCHAR2, Iv_d_dt IN DATE) Return NUMBER
IS
   LV_N_AUTHORIZED_AMOUNT   NUMBER := 0;
    LV_PA_SA_REF_ID   NUMBER := 0;
Begin
If IV_V_PRODUCT_TYPE = 'L' THEN   
--If IV_V_PRODUCT_TYPE IN ('1','2','3') THEN   

  Select SUM(B.AMOUNT)
  INTO   LV_N_AUTHORIZED_AMOUNT
   from S3G_LAD_PYMNTREQST A , S3G_LAD_PAYMENTREQSTDET B
  WHERE A.REQUEST_NO =B.REQUEST_NO 
    AND B.PANUM      = IV_V_REFERENCE_NUMBER
    AND A.LOB_ID     = IV_V_PRODUCT_TYPE
    AND A.PMT_VOUCHER_STATUS = 3 
    AND PAYMENT_REQUEST_NO LIKE '%CHPV%'
    AND PAYMENT_REQUEST_DATE <= Iv_d_dt ;
    
   /*
   SELECT  SUM(DECODE(TXN_CODE,0,TXN_AMOUNT,-TXN_AMOUNT))
     INTO   LV_N_AUTHORIZED_AMOUNT
     FROM   DC_FNMVT_DETAILS DFD
     WHERE  DFD.REFERENCE_TYPE = 'ACCOUNT'
     AND    DFD.REFERENCE_NUMBER = IV_V_REFERENCE_NUMBER
     AND    DFD.MODULE_CODE = 4
     AND    DFD.TXN_ACCOUNT IN ('340','341')
     AND    DFD.DOCUMENT_STATUS <> 'C'
     AND    DFD.DOCUMENT_DATE <= Iv_d_dt;
     */
ELSe 
select PA_SA_REF_ID into LV_PA_SA_REF_ID from S3G_LAD_ACCPASADET where panum= IV_V_REFERENCE_NUMBER;

  SELECT NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE = 0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND          
    INTO LV_N_AUTHORIZED_AMOUNT 
    FROM S3G_CLN_DMDDS4 D4    
   WHERE D4.DOCUMENT_DATE <= Iv_d_dt   
     --AND D4.LOB_ID     = IV_V_PRODUCT_TYPE
     AND D4.DUE_FLAG IN (23,108)
     AND D4.PA_SA_REF_ID  = LV_PA_SA_REF_ID         
GROUP BY D4.PA_SA_REF_ID;

    /*
    SELECT A.funds_in_use 
    INTO   LV_N_AUTHORIZED_AMOUNT
    FROM   FW_REGISTRATION_MASTER B, TABLE(Ftwcpkg00002.df_o_get_offline_balance(fw_id, iv_d_dt)) A
    WHERE  B.ACCOUNT_NUMBER = iv_v_reference_number;
    */
End If;

   If LV_N_AUTHORIZED_AMOUNT < 0 THEN
         LV_N_AUTHORIZED_AMOUNT := 0;
   End If;

   Return ROUND(LV_N_AUTHORIZED_AMOUNT);
Exception
   WHEN OTHERS THEN
      Return 0;
End DF_N_CBO_AUTHORIZED_AMOUNT;


Function DF_D_CBO_TXN_DATE (IV_N_TXN_ID IN NUMBER) Return DATE
IS
  LV_D_TXN_DATE DATE;
BEGIN 
--Begin
--    SELECT TD_TXN_DATE
--     INTO LV_D_TXN_DATE
--    FROM SA_TRANSACTION_DETAILS
--     WHERE TD_TXN_ID = IV_N_TXN_ID;
--     Return LV_D_TXN_DATE;
--Exception
-- WHEN OTHERS THEN
---->> Commented and Patched by Babu I on 20-Jan-2011 for call MFC-447 <<--
----    LV_D_TXN_DATE := TRUNC(SYSDATE);
--    
--END;
LV_D_TXN_DATE := SYSDATE;
Return LV_D_TXN_DATE;
End DF_D_CBO_TXN_DATE;


Function DF_D_CBO_INFO_UPDATE_ON (Iv_v_Product_Type IN VARCHAR2, IV_V_APPLICATION_NUMBER IN VARCHAR2)
   Return DATE
IS
   LV_D_INFO_UPDATE_ON  DATE;
Begin
If Iv_v_Product_type = 'L' THEN
   SELECT APPLICAION_PROCESS_DATE
   INTO   LV_D_INFO_UPDATE_ON
   FROM   S3G_ORG_APPPROC
   WHERE  APPLICATION_NUMBER =IV_V_APPLICATION_NUMBER;
ELSE
   SELECT APPLICAION_PROCESS_DATE
   INTO   LV_D_INFO_UPDATE_ON
   FROM   S3G_ORG_APPPROC
   WHERE  APPLICATION_NUMBER = Iv_v_Application_number;
End If;
    Return  LV_D_INFO_UPDATE_ON;
Exception
      WHEN OTHERS THEN
         Return NULL;
End DF_D_CBO_INFO_UPDATE_ON;


Function DF_N_CBO_Finance_Amount(Iv_V_Contract_number IN VARCHAR2, Iv_d_dt IN DATE) Return NUMBER
IS
Lv_n_Finance_Amt    NUMBER:=0;
Begin
/*
SELECT FUNDING_AMOUNT 
INTO lv_n_finance_amt 
FROM FW_PRICING_DETAILS fpd, FW_REGISTRATION_MASTER frm
WHERE
frm.fw_id = fpd.fw_id AND FRM.ACCOUNT_NUMBER = Iv_V_Contract_number;
*/
Select FINANCE_AMOUNT 
  INTO lv_n_finance_amt 
  from S3G_LAD_ACCCREATION
 WHERE PANUM = Iv_V_Contract_number;
  
Return ROUND(Lv_n_Finance_Amt);
Exception
WHEN NO_DATA_FOUND THEN
Return 0;
End DF_N_CBO_Finance_Amount;


Procedure Dp_Replace_Disall_Chars (IV_V_TABLE_NAME VARCHAR2) IS
Cursor C1 IS SELECT dis_char FROM CBO_DISALLOWED_CHARACTERS;
lv_v_query        VARCHAR2(32636);
lv_v_disall_char  VARCHAR2(32636);
lv_v_replace_char VARCHAR2(100);
Begin
lv_v_disall_char := NULL;
lv_v_replace_char := NULL;
  FOR i IN C1
  Loop
  lv_v_replace_char := lv_v_replace_char|| '~';
  If lv_v_disall_char IS NULL THEN
    lv_v_disall_char := i.dis_char;
  ELSE
      lv_v_disall_char := lv_v_disall_char || i.dis_char;
  End If;
  End Loop;
   lv_v_query := NULL;
    FOR j IN (SELECT column_name FROM USER_TAB_COLUMNS WHERE UPPER(table_name) = UPPER(iv_v_table_name) AND DATA_TYPE <> 'DATE')
    Loop
      If lv_v_query IS NULL THEN
         lv_v_query := 'Update '||iv_v_table_name||' Set '||j.column_name||' = replace(translate('||j.column_name||','''||lv_v_disall_char||''','''||lv_v_replace_char||'''), ''~'',Null)';
      ELSE
         lv_v_query := lv_v_query || ','||j.column_name||' = replace(translate('||j.column_name||','''||lv_v_disall_char||''','''||lv_v_replace_char||'''), ''~'',Null)';
      End If;
    End Loop;
    Execute IMMEDIATE lv_v_query;
    Commit;
END;

FUNCTION Df_N_Get_Avg_Emi(IV_V_CONT_NO IN VARCHAR2,IV_N_TENURE IN NUMBER ,V_PA_SA_REF_ID in number ) RETURN NUMBER IS
LV_N_AVG_EMI   NUMBER;
LV_N_INST_CNT  NUMBER;
LV_N_INST_AMT  NUMBER;
LV_N_INST_LIP  NUMBER;
BEGIN
        BEGIN

          SELECT SUM(INSTALLMENTAMOUNT)
             INTO LV_N_INST_AMT
            FROM S3G_LAD_ACCREPAYSTRUCT            
            WHERE PA_SA_REF_ID = V_PA_SA_REF_ID;

        END;
        BEGIN        
            Select SUM(INSTALMENT_AMOUNT)
            INTO LV_N_INST_LIP
              from S3G_LAD_ACCREPAYSTRUCT_EXTN 
            WHERE   CASHFLOW_FLAG_ID = 108 
            AND PA_SA_REF_ID  in (  select PA_SA_REF_ID  from S3g_Lad_Accpasadet WHERE   PA_SA_REF_ID = V_PA_SA_REF_ID);
        END;
  IF NVL(LV_N_INST_AMT,0) > 0 AND NVL(IV_N_TENURE,0) > 0 THEN
     LV_N_AVG_EMI := (NVL(LV_N_INST_AMT,0)+ NVL(LV_N_INST_LIP,0)) / NVL(IV_N_TENURE,0);
  ELSE
    LV_N_AVG_EMI := -1;
  END IF;
RETURN ROUND(LV_N_AVG_EMI,3);
END;

Function DF_N_CBO_Hire_Period(Iv_V_Contract_number IN VARCHAR2) Return NUMBER
IS
Lv_n_Hire_Period    NUMBER:=0;
lv_n_Lob_ID    NUMBER:=0;
lv_n_product_code   NUMBER:=0;
lv_n_fw_id NUMBER;
Begin
SELECT LOB_ID 
 INTO lv_n_Lob_ID
  FROM S3G_LAD_ACCCREATION
 WHERE PANUM = Iv_V_Contract_number;
 
If lv_n_Lob_ID = 4 THEN
   Lv_n_Hire_Period := 12;
Elsif lv_n_Lob_ID = 5 THEN
    Lv_n_Hire_Period := 36;
Elsif lv_n_Lob_ID = 6 THEN
    SELECT COUNT(*) INTO Lv_n_Hire_Period FROM S3G_LAD_ACCAMORTSTRUCT WHERE PANUM = Iv_V_Contract_number;
End If;

Return Lv_n_Hire_Period;
Exception
  WHEN OTHERS THEN
      Return 0;
End DF_N_CBO_Hire_Period;

Function DF_D_CBO_LOAN_MATURITY_DATE(IV_V_PRODUCT_TYPE IN VARCHAR2, IV_V_CONTRACT_NUMBER IN VARCHAR2,V_PA_SA_REF_ID in number) Return DATE
IS
   LV_D_LAST_INSTALMENT_DATE DATE;
Begin
If IV_V_PRODUCT_TYPE = 'L' THEN
   SELECT MAX(INSTALLMENTDATE)
   INTO   LV_D_LAST_INSTALMENT_DATE
   FROM   S3G_LAD_ACCAMORTSTRUCT
   WHERE  PA_SA_REF_ID = V_PA_SA_REF_ID;
ELSE

  SELECT NVL(MLA_VALIDITY_TO , FACILITY_END_DATE )
      INTO LV_D_LAST_INSTALMENT_DATE
      FROM S3G_ORG_APPPROC A , 
           S3G_LAD_ACCCREATION B,S3G_LAD_ACCPASADET c
     WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID 
     and c.ACCOUNT_CREATION_ID=b.ACCOUNT_CREATION_ID
      AND  c.PA_SA_REF_ID   = V_PA_SA_REF_ID;
      
End If;
   Return  LV_D_LAST_INSTALMENT_DATE;
Exception
      WHEN OTHERS THEN
         Return NULL;
End DF_D_CBO_LOAN_MATURITY_DATE;


Function DF_N_CBO_ACCT_IRR(IV_V_PRODUCT_TYPE IN VARCHAR2, IV_V_REF_NUMBER IN VARCHAR2) Return NUMBER
  IS
    LV_N_ACCT_IRR   NUMBER;
    LV_N_PRODUCT_CODE NUMBER;
    LV_N_SCHEME_TYPE NUMBER;
    lv_n_fw_id NUMBER;
Begin
If IV_V_PRODUCT_TYPE = 'L' THEN

      SELECT ACCOUNTING_IRR
        INTO LV_N_ACCT_IRR
        FROM S3G_ORG_APPPROC A , 
           S3G_LAD_ACCCREATION B
     WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID 
      AND  B.PANUM  = IV_V_REF_NUMBER;               
      
ELSE
       SELECT A.PRODUCT_ID 
        INTO LV_N_PRODUCT_CODE
        FROM S3G_ORG_APPPROC A , 
           S3G_LAD_ACCCREATION B
     WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID 
      AND  B.PANUM  = IV_V_REF_NUMBER;  
    
    If LV_N_PRODUCT_CODE IN ( 4,5 ) THEN 
    
          SELECT A.DISC_RATE
            INTO LV_N_ACCT_IRR
            FROM S3G_LAD_ACC_DIS_UTIL A, S3G_LAD_ACCPASADET B 
           WHERE A.PA_SA_REF_ID = B.PA_SA_REF_ID
             AND B.PANUM        = IV_V_REF_NUMBER
             AND ROWNUM <2 ;

    Elsif LV_N_PRODUCT_CODE = 6 THEN   -- working capital fixed repayment.    
      SELECT ACCOUNTING_IRR
        INTO LV_N_ACCT_IRR
        FROM S3G_ORG_APPPROC A , 
           S3G_LAD_ACCCREATION B
     WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID 
      AND  B.PANUM  = IV_V_REF_NUMBER;  
    End If;
End If;
  Return (ROUND(LV_N_ACCT_IRR,2));
Exception
   WHEN OTHERS THEN
    Return 0;
End DF_N_CBO_ACCT_IRR;


Function Df_V_Cbo_Repayment_Frequency(IV_V_CONTRACT_NUMBER IN VARCHAR2) Return VARCHAR2
IS
LV_V_PRODUCT_CODE NUMBER;
LV_V_SCHEME_type NUMBER;
Begin

SELECT A.PRODUCT_ID       
        INTO LV_V_PRODUCT_CODE
        FROM S3G_ORG_APPPROC A , 
           S3G_LAD_ACCCREATION B
     WHERE A.APPLICATION_PROCESS_ID = B.APPLICATION_PROCESS_ID 
      AND  B.PANUM  = iv_v_contract_number;      
      
    If LV_V_PRODUCT_CODE in (4,5)  THEN-->>For FACTORING, WC-Running Capital null-Phase Liquidation<<--
       Return('003'); -->>Demand<<--
    Elsif LV_V_PRODUCT_CODE in (6)  THEN-->>WC-Fixed Repayment<<--
       Return('007'); -->>Monthly (due every Month)<<--
    ELSE
        Return(NULL);
    End If;
Exception
   WHEN OTHERS THEN
      Return NULL;
End Df_V_Cbo_Repayment_Frequency;

Function DF_V_CBO_IDENTIFIER_TYPE (IV_V_CUSTOMER_CODE IN VARCHAR2, IV_V_FILE_TYPE IN VARCHAR2, IV_V_SHEET_NAME IN VARCHAR2) Return VARCHAR2
IS
   LV_N_CONSTITUTION_CODE   NUMBER;
   LV_N_RESIDENTIAL_CODE    NUMBER;
   LV_V_IDENTIFIER_TYPE     VARCHAR2 (3);
Begin
   SELECT NATIONALITY , CONSTITUTION_ID
     INTO LV_N_RESIDENTIAL_CODE, LV_N_CONSTITUTION_CODE
     FROM S3G_ORG_CUSTMASTER
    WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE;
   If LV_N_CONSTITUTION_CODE = 5
   THEN
      If LV_N_RESIDENTIAL_CODE IN (100) THEN
             LV_V_IDENTIFIER_TYPE := '001';
     -->Patch By Mathialagan P for MFC-393 ON 23-AUG-2010
      Elsif LV_N_RESIDENTIAL_CODE NOT IN (100,466,419,453,456,443) THEN --->>For other than GCC countries the Labour Card must be the Identifier <<---
             LV_V_IDENTIFIER_TYPE := '002';--FOR RESIDENT IDENTIFICATION NUMBER(Labour Card)
     -->Patch End
      ELSE
          -- LV_V_IDENTIFIER_TYPE := '003'; -- FOR PASSPORT NUMBER -- Comment By Sudeesh For DLVE046 on 09-Oct-2015      
             LV_V_IDENTIFIER_TYPE := '006'; -- FOR PASSPORT NUMBER    -- Added Code By Sudeesh For DLVE046 on 09-Oct-2015  
      End If;
      --PATCH BY SRIDHAR FOR NON MOCI MFC-404
     --> Elsif LV_N_CONSTITUTION_CODE IN (71,72) THEN  -- FOR NON MOCI
     Elsif LV_N_CONSTITUTION_CODE IN (3,4) THEN  -- FOR NON MOCI
               LV_V_IDENTIFIER_TYPE := '005';
      --PATCH END HERE
   ELSE
      LV_V_IDENTIFIER_TYPE := '004'; --FOR COMPANY REGISTRATION NUMBER(CR NO)
   End If;

   If IV_V_SHEET_NAME = 'INPUT'
   THEN
      Return LV_V_IDENTIFIER_TYPE;
   ELSE
      If (LV_V_IDENTIFIER_TYPE IN ('001','002', '003') AND IV_V_FILE_TYPE = 'CONSUMER')-->'002' patch by Mathialagan P
         OR (LV_V_IDENTIFIER_TYPE = '004' AND IV_V_FILE_TYPE = 'CORPORATE')
      THEN
         Return LV_V_IDENTIFIER_TYPE;
      ELSE
         -- RETURN NULL;    -- Commented by Sridhar G for MFC-485 On 05-Apr-2011
            Return '004' ;  -- Comment Removed by Sridhar G for MFC-485 On 05-Apr-2011
     End If;
   End If;
Exception
   WHEN OTHERS
   THEN
      Return NULL;
End DF_V_CBO_IDENTIFIER_TYPE;

FUNCTION Df_N_Get_Future_Rent_Due(IV_V_PRODUCT_CODE IN VARCHAR2 , Iv_V_PANUM IN VARCHAR2, iv_d_cutoff_date IN DATE) 
 RETURN NUMBER 
 IS 
 LV_N_AMT NUMBER := 0;
 LV_N_AMT_LIP NUMBER := 0;
Begin
IF IV_V_PRODUCT_CODE = 'L' THEN 
BEGIN
Select SUM(a.INSTALLMENTAMOUNT ) ,sum(nvl(b.INSTALMENT_AMOUNT,0))
INTO LV_N_AMT,LV_N_AMT_LIP
 from S3G_LAD_ACCAMORTSTRUCT a
 left join S3G_LAD_ACCREPAYSTRUCT_EXTN b
 on (b.PA_SA_REF_ID=a.PA_SA_REF_ID and a.INSTALLMENT_NO=b.INSTALMENT_NO and CASHFLOW_FLAG_ID=108)
 WHERE a.PANUM = iv_v_PANUM
 AND a.INSTALLMENTDATE >= iv_d_cutoff_date;
 
--  Select SUM(INSTALMENT_AMOUNT)
-- INTO  LV_N_AMT_LIP
--  from S3G_LAD_ACCREPAYSTRUCT_EXTN 
--WHERE   CASHFLOW_FLAG_ID = 108 
-- AND INSTALMENT_DATE >= iv_d_cutoff_date
--AND PA_SA_REF_ID IN (select PA_SA_REF_ID
--                      from S3g_Lad_Accpasadet
--                      WHERE   PANUM = IV_V_PANUM);
EXCEPTION 
  WHEN OTHERS THEN 
    LV_N_AMT := 0 ;LV_N_AMT_LIP :=0;
END ;
RETURN (NVL(LV_N_AMT,0)+NVL(LV_N_AMT_LIP,0));
END IF ;
RETURN (NVL(LV_N_AMT,0)+NVL(LV_N_AMT_LIP,0));
END Df_N_Get_Future_Rent_Due;


Function DF_N_CBO_INSTALLMENTS(Iv_V_Contract_number IN VARCHAR2,V_PA_SA_REF_ID in number ) Return NUMBER
IS
Lv_n_Installments    NUMBER:=0;
Begin
SELECT MAX(INSTALLMENT_NO)
INTO   Lv_n_Installments
FROM   S3G_LAD_ACCAMORTSTRUCT
WHERE  PA_SA_REF_ID = V_PA_SA_REF_ID;
Return Lv_n_Installments;
Exception
    WHEN NO_DATA_FOUND THEN
               Return 0;
End DF_N_CBO_INSTALLMENTS;

Function DF_N_CBO_INST_AMOUNT(Iv_V_Contract_number IN VARCHAR2,V_PA_SA_REF_ID in number) Return NUMBER
IS

Lv_N_Avg_Emi   NUMBER;
Lv_N_Inst_Cnt  NUMBER;
Lv_N_Inst_Amt  NUMBER;
Begin
  Begin
    SELECT COUNT(*),SUM(INSTALLMENTAMOUNT)
      INTO Lv_N_Inst_Cnt, Lv_N_Inst_Amt
      FROM S3G_LAD_ACCAMORTSTRUCT
     WHERE  PA_SA_REF_ID = V_PA_SA_REF_ID;
  End;

  If NVL(Lv_N_Inst_Amt,0) > 0 AND NVL(Lv_N_Inst_Cnt,0) > 0 THEN
     Lv_N_Avg_Emi := NVL(Lv_N_Inst_Amt,0) / NVL(Lv_N_Inst_Cnt,0);
  ELSE
     Lv_N_Avg_Emi := -1;
  End If;

   Return ROUND(Lv_N_Avg_Emi);

Exception
    WHEN NO_DATA_FOUND THEN
               Return 0;
End DF_N_CBO_INST_AMOUNT;

Function LF_N_CBO_CHQ_RTRN_CHRG (IV_V_CONTRACT_NUMBER In Varchar2,IV_D_DOCUMENT_DATE In Date) Return Number
Is
   LV_N_CHQ_RET_CHRGS    Number;
Begin


Select SUM(DK.DUE_AMOUNT) - sum(DK.RECEIVED_AMOUNT)
into   LV_N_CHQ_RET_CHRGS
from   S3G_CLN_MEMOBKNG BK , S3G_CLN_MEMODTL DK 
WHERE  BK.PANUM             = IV_V_CONTRACT_NUMBER
AND    BK.MEMO_LINK_KEY     = DK.MEMO_LINK_KEY
and    bk.MEMO_TYPE         = 36
and    DK.MEMO_BOOKING_DATE <= IV_D_DOCUMENT_DATE
AND    DK.STATUS         = 'A' ;
--   LV_N_CHQ_RET_CHRGS := Df_N_Get_Memo_Due(IV_V_CONTRACT_NUMBER,IV_D_DOCUMENT_DATE,6)+ Df_N_Get_Memo_Paid(IV_V_CONTRACT_NUMBER,IV_D_DOCUMENT_DATE,6);-->>Memo Paid Will Come In Negative,Hence It Is Added With Due<<--

   Return LV_N_CHQ_RET_CHRGS;
Exception
    When Others Then
         Return 0;
End LF_N_CBO_CHQ_RTRN_CHRG;


Function DF_N_CBO_LOAN_BALANCE_OMR(IV_V_PRODUCT_TYPE IN VARCHAR2, IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_CUTOFF_DATE IN DATE,V_PA_SA_REF_ID in number) Return NUMBER
IS
   LV_N_LOAN_BALANCE            NUMBER;
Begin

If IV_V_PRODUCT_TYPE = 'L' THEN       
    If  ((Df_N_Get_PANUM_Status(IV_V_CONTRACT_NUMBER,IV_D_CUTOFF_DATE))  <> 1 )THEN
        Return    0;
    END IF;
   /*    LV_N_LOAN_BALANCE := NVL(CBOPKG00003.DF_N_GET_RENT_ARREARS(IV_V_CONTRACT_NUMBER,(IV_D_CUTOFF_DATE + 1)),0) +
                           NVL(CBOPKG00003.Df_N_Get_Future_Rent_Due(IV_V_PRODUCT_TYPE,IV_V_CONTRACT_NUMBER,IV_D_CUTOFF_DATE ),0)+
                           NVL(LF_N_CBO_CHQ_RTRN_CHRG (IV_V_CONTRACT_NUMBER,IV_D_CUTOFF_DATE),0)+
                           Nvl(CBOPKG00003.DF_N_CBO_PENAL_INTEREST(IV_V_CONTRACT_NUMBER ,IV_D_CUTOFF_DATE),0); */

 LV_N_LOAN_BALANCE := NVL(CBOPKG00003.DF_N_GET_RENT_ARREARS(IV_V_CONTRACT_NUMBER,(IV_D_CUTOFF_DATE + 1),V_PA_SA_REF_ID),0) +
                      NVL(CBOPKG00003.DF_N_GET_FUTURE_RENT_DUE(IV_V_PRODUCT_TYPE,IV_V_CONTRACT_NUMBER,IV_D_CUTOFF_DATE ),0) ;
                                                 
ELSE
  SELECT NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE = 0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND          
    INTO LV_N_LOAN_BALANCE
    FROM S3G_CLN_DMDDS4 D4    
   WHERE D4.DOCUMENT_DATE <= iv_d_cutoff_date   
     AND D4.DUE_FLAG IN (23,108)
     AND D4.PANUM  = IV_V_CONTRACT_NUMBER         
GROUP BY D4.PANUM;

End If;
   Return  ROUND(LV_N_LOAN_BALANCE);
Exception
      WHEN OTHERS THEN
      -->> Commented And Added By Babu I for DLV704 on 02-Mar-2013 <<--
      /* LV_N_LOAN_BALANCE := NULL;
         Return LV_N_LOAN_BALANCE; */
         Return    0;
End DF_N_CBO_LOAN_BALANCE_OMR;

Function DF_D_CBO_LAST_AMOUNT_DT (IV_V_PRODUCT_TYPE IN VARCHAR2, IV_V_CONTRACT_NUMBER IN VARCHAR2) Return DATE
IS
   LV_D_LAST_AMOUNT_DT  DATE;
Begin
If IV_V_PRODUCT_TYPE = 'L' THEN
   SELECT MAX(RECEIPT_DATE) INTO LV_D_LAST_AMOUNT_DT
                              FROM   S3G_CLN_RCPTPROC RC , S3G_CLN_RCPTPROCDTL RD
                           WHERE  RD.PANUM = IV_V_CONTRACT_NUMBER
                           AND    RC.RECEIPT_ID =  RD.RECEIPT_ID                           
                           AND    RD.COMPANY_ID =  1
                           AND    RD.DUE_FLAG In (23,108) AND RC.LOB_ID in (1,2,3);
ELSE

   SELECT MAX(RECEIPT_DATE) INTO LV_D_LAST_AMOUNT_DT
   FROM   S3G_CLN_RCPTPROC RC , S3G_CLN_RCPTPROCDTL RD
   WHERE  RD.PANUM = IV_V_CONTRACT_NUMBER
   AND    RC.RECEIPT_ID =  RD.RECEIPT_ID                           
   AND    RD.COMPANY_ID =  1
   AND    RD.DUE_FLAG In (23,108) AND RC.LOB_ID in (4,5,6);

End If;
   Return  LV_D_LAST_AMOUNT_DT;
   Exception
      WHEN OTHERS THEN
         Return NULL;
End DF_D_CBO_LAST_AMOUNT_DT;

Function DF_N_CBO_LAST_AMOUNT_PAID (IV_V_PRODUCT_TYPE IN VARCHAR2, IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_DOCUMENT_DATE IN DATE) Return NUMBER
IS
   LV_N_LAST_AMOUNT_PAID  NUMBER;
Begin
If IV_V_PRODUCT_TYPE = 'L' THEN

                          SELECT MAX(RD.TRANSACTION_AMOUNT) 
                              INTO LV_N_LAST_AMOUNT_PAID
                            FROM   S3G_CLN_RCPTPROC RC , S3G_CLN_RCPTPROCDTL RD
                           WHERE  RD.PANUM = IV_V_CONTRACT_NUMBER
                           AND    RC.RECEIPT_ID =  RD.RECEIPT_ID                           
                           AND    RD.COMPANY_ID =  1
                           AND    RD.DUE_FLAG In (23,108) 
                           AND RC.LOB_ID in (1,2,3)     
   AND    RC.RECEIPT_ID = (SELECT MAX(RC.RECEIPT_ID )
                                 FROM   S3G_CLN_RCPTPROC RC , S3G_CLN_RCPTPROCDTL RD
                           WHERE  RD.PANUM = IV_V_CONTRACT_NUMBER
                           AND    RC.RECEIPT_ID =  RD.RECEIPT_ID                           
                           AND    RD.COMPANY_ID =  1
                           AND    RD.DUE_FLAG In (23,108) AND RC.LOB_ID in (1,2,3) );
ELSE
    SELECT MAX(RD.TRANSACTION_AMOUNT) INTO LV_N_LAST_AMOUNT_PAID
                              FROM   S3G_CLN_RCPTPROC RC , S3G_CLN_RCPTPROCDTL RD
                           WHERE  RD.PANUM = IV_V_CONTRACT_NUMBER
                           AND    RC.RECEIPT_ID =  RD.RECEIPT_ID                           
                           AND    RD.COMPANY_ID =  1
                           AND    RD.DUE_FLAG In (23,108) AND RC.LOB_ID in (4,5,6)                     
   AND    RC.RECEIPT_ID = (SELECT MAX(RC.RECEIPT_ID )
                                 FROM   S3G_CLN_RCPTPROC RC , S3G_CLN_RCPTPROCDTL RD
                           WHERE  RD.PANUM = IV_V_CONTRACT_NUMBER
                           AND    RC.RECEIPT_ID =  RD.RECEIPT_ID                           
                           AND    RD.COMPANY_ID =  1
                           AND    RD.DUE_FLAG In (23,108) AND RC.LOB_ID in (4,5,6) );

End If;
   Return  ROUND(LV_N_LAST_AMOUNT_PAID);
   Exception
      WHEN OTHERS THEN
         Return NULL;
End DF_N_CBO_LAST_AMOUNT_PAID;

FUNCTION DF_V_GET_NRID_NUMBER (IV_V_CUSTOMER_CODE IN VARCHAR2) RETURN VARCHAR2
IS 
LV_V_NRID_NUMBER VARCHAR2(100);
BEGIN
        BEGIN
            Select NRID_NUMBER
            INTO LV_V_NRID_NUMBER
            From S3G_ORG_CUSTMASTER
            WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ;
        EXCEPTION 
            WHEN OTHERS THEN 
            Lv_V_NRID_NUMBER := NULL;
        END ;
RETURN Lv_V_NRID_NUMBER  ;

END DF_V_GET_NRID_NUMBER ;

Function Df_V_CBO_Cr_Fac_Status(Iv_V_Product_type IN VARCHAR2, Iv_v_Contract_number IN VARCHAR2, Iv_d_Dt IN DATE) Return VARCHAR2
IS
Lv_n_closure_type NUMBER;
Lv_n_Written_Off NUMBER;
Begin
If Iv_V_Product_type = 'L' THEN
   If DF_N_GET_PANUM_STATUS ( IV_V_PANUM => Iv_v_Contract_number , IV_D_CUTOFF_DATE => Iv_d_Dt ) = 2 THEN
      Begin
      
    Select NVL(A.WRITTEN_OFF,2) 
       INTO  Lv_n_Written_Off
      from S3G_LAD_ACCCLOSR A, S3G_LAD_ACCCLOSRDET B
      WHERE A.CLOSURE_ID = B.CLOSURE_ID
        AND A.CLOSURE_TYPE in (2,1) 
        AND A.PANUM = Iv_v_Contract_number
        AND A.CLOSURE_DATE = Iv_d_Dt
        AND A.CLOSURE_ID    = ( Select MAX(CLOSURE_ID) 
                              from S3G_LAD_ACCCLOSR A 
                                     WHERE PANUM = Iv_v_Contract_number
                                       AND A.CLOSURE_DATE <= Iv_d_Dt
                                       AND A.CLOSURE_TYPE in (1,2)  
                               ); 
      Exception
         WHEN OTHERS THEN
               Lv_n_Written_Off:= 2;
      End;

      if Lv_n_Written_Off = 1 then
           -- Return '010';
            Return '009';  --> Patched By sudeesh  DLV913 for Closure Write off Status 010 --> 009
      ELSE
            Return '009';
      End If;
   ELSE

       If SUBSTR(trim(iv_v_contract_number),LENGTH(trim(iv_v_contract_number)))='R' THEN
             Return '008';
       ELSE
             Return '002';
       End If;
   End If;
ELSE
   Return '002';
End If;
Exception
WHEN OTHERS THEN
     Return NULL;
End Df_V_CBO_Cr_Fac_Status;

Function DF_N_CBO_NIOD(IV_V_CONTRACT_NUMBER VARCHAR2, IV_D_CUTOFF_DATE DATE) Return NUMBER IS
LV_N_NDPD NUMBER;
LV_N_ARREARS NUMBER;
LV_N_ARREARS_1 NUMBER;
LV_N_ADVANCE NUMBER;
LV_N_AGE NUMBER;
LV_D_ARREAR_SINCE DATE;
LV_N_ARREAR_SINCE_CNT NUMBER;
Begin
Select SUM(OPENINGDEMAND)
     INTO LV_N_ARREARS_1
from (
      select  PANUM , NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE=0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND
      FROM S3G_CLN_DMDDS4 D4          
      WHERE D4.VALUE_DATE <= IV_D_CUTOFF_DATE
      AND D4.DOCUMENT_TYPE != 'CHR' 
      AND d4.LOB_ID IN (1,2,3)      
      AND D4.PANUM = IV_V_CONTRACT_NUMBER
      GROUP BY D4.PANUM 
      Union All
      select  PANUM, NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE=0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND
      FROM S3G_CLN_DMDDS4 D4        
      where D4.DOCUMENT_DATE <= IV_D_CUTOFF_DATE
      AND D4.DOCUMENT_TYPE='CHR'      
      AND D4.PANUM = IV_V_CONTRACT_NUMBER
      AND D4.LOB_ID IN (1,2,3)
      group by d4.PANUM
     );
    
for k in ( SELECT MIN(INSTALLMENTDATE) INSTALLMENTDATE, COUNT(*) AGE
          FROM (SELECT INSTALLMENTDATE,
                     NVL(Lv_N_Arrears,0) - SUM(INSTALLMENTAMOUNT) OVER (ORDER BY INSTALLMENTDATE DESC) + INSTALLMENTAMOUNT ABC
                  FROM S3G_LAD_ACCAMORTSTRUCT 
                  WHERE PANUM =  Iv_V_Contract_Number                                    
                  AND INSTALLMENTDATE <= IV_D_CUTOFF_DATE
                  ORDER BY INSTALLMENTDATE DESC)
                WHERE ABC >  0  ORDER BY INSTALLMENTDATE DESC ) 
Loop
                    Lv_N_Age := NVL(K.AGE,0);
                    LV_D_ARREAR_SINCE := K.INSTALLMENTDATE;
               If NVL(LV_N_ARREARS,0) > 0 AND NVL(Lv_N_Age,0) = 0 THEN
                   Lv_N_Age := NVL(Lv_N_Age,0) + 1;
                End If;
                  Exit;
End Loop;
     
     select (IV_D_CUTOFF_DATE -  LV_D_ARREAR_SINCE ) INTO LV_N_ARREAR_SINCE_CNT FROM dual;
     
  If NVL(LV_N_ARREARS_1,0) <= 0 THEN
     Return 0;
  ELSE
     Return LV_N_ARREAR_SINCE_CNT;
  End If;
Exception
 WHEN OTHERS THEN
   LV_N_ARREAR_SINCE_CNT := 0;
   Return LV_N_ARREAR_SINCE_CNT;
End DF_N_CBO_NIOD;

--Function DF_V_CBO_GET_GRADE(IV_N_OVERDUE_DAYS IN NUMBER,IV_D_REPORT_DATE IN DATE)Return VARCHAR2
--IS
--LV_V_GRADE        VARCHAR2(3) := NULL;
--Begin
--     SELECT  DECODE(BUCKET_SLNO,1,'001',2,'002',3,'003',4,'004',5,'005')
--      INTO LV_V_GRADE
--        FROM SA_NPA_PRODUCT_SLAB_MASTER A, SA_NPA_PRODUCT_SLAB_DETAILS B
--       WHERE A.SLAB_KEY = B.SLAB_KEY
--         AND IV_D_REPORT_DATE BETWEEN EFFECTIVE_START_DATE AND EFFECTIVE_END_DATE
--         AND IV_N_OVERDUE_DAYS BETWEEN START_MONTH AND END_MONTH;
--    If IV_N_OVERDUE_DAYS = 0 THEN
--      Return '001';
--    End If;
--    Return LV_V_GRADE;
--Exception
--    WHEN OTHERS THEN
--         LV_V_GRADE := NULL;
--         Return LV_V_GRADE;
--End DF_V_CBO_GET_GRADE;

Function DF_V_CBO_GET_GRADE(IV_N_OVERDUE_DAYS IN NUMBER,IV_D_REPORT_DATE IN DATE, IV_N_LOB_ID NUMBER )Return VARCHAR2
IS
LV_V_GRADE        VARCHAR2(3) := NULL;
Begin
SELECT  DECODE(BUCKET_SLNO,1,'001',2,'002',3,'003',4,'004',5,'005')
         INTO LV_V_GRADE
         FROM S3G_CLN_DELINQPAR A, S3G_CLN_DELINQPARDTL B
        WHERE A.DELINQUENT_PARAM_ID = B.DELINQUENT_PARAMETER_ID
         AND LOB_ID = IV_N_LOB_ID
         AND IV_D_REPORT_DATE BETWEEN EFFECTIVE_FROM_DATE AND EFFECTIVE_TO_DATE
         AND IV_N_OVERDUE_DAYS BETWEEN FROM_MONTH AND TO_MONTH;
    If IV_N_OVERDUE_DAYS = 0 THEN
      Return '001';
    End If;
    Return LV_V_GRADE;
Exception
    WHEN OTHERS THEN
         LV_V_GRADE := NULL;
         Return LV_V_GRADE;
End DF_V_CBO_GET_GRADE;

Function DF_V_CBO_RESCHEDULE_REASON(IV_V_APPL_NUMBER IN VARCHAR2) Return VARCHAR2
  IS
 LV_V_RESCHEDULE_REASON_CODE VARCHAR(3);
Begin
      SELECT LPAD(RESCHEDULE_REASON,3,'0')
        INTO LV_V_RESCHEDULE_REASON_CODE
        FROM S3G_ORG_APPPROC
       WHERE APPLICATION_NUMBER = IV_V_APPL_NUMBER;

  Return LV_V_RESCHEDULE_REASON_CODE;
Exception
   WHEN OTHERS THEN
     Return NULL;         
End DF_V_CBO_RESCHEDULE_REASON;





FUNCTION Df_N_Get_Contract_Status(IV_V_PRODUCT_CODE IN NUMBER , IV_V_PANUM IN VARCHAR2, IV_D_CUTOFF_DATE IN DATE)
RETURN NUMBER
IS
    Lv_N_Contract_Status  NUMBER ;
    Lv_V_Closure_Status   VARCHAR2(5);
    Lv_V_RTN_DATA   VARCHAR2(5);
    LV_V_PRODUCT_CODE     NUMBER ;
BEGIN

IF IV_V_PRODUCT_CODE in (1,2,3) then --> 'L' THEN 
     BEGIN
        SELECT NVL(a.PA_STATUS_CODE,1)
          INTO Lv_N_Contract_Status
          FROM S3G_LAD_ACCCREATION a
         WHERE PANUM = Iv_V_PANUM;
     EXCEPTION
         WHEN NO_DATA_FOUND THEN 
              RETURN -1;
         WHEN OTHERS THEN 
              RETURN -1;
     END;
 
 IF Lv_N_Contract_Status = 0  THEN
    RETURN Lv_N_Contract_Status ;
 ELSIF  Lv_N_Contract_Status IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61) THEN    
    RETURN 1 ;    
 END IF;
 
 BEGIN 
 Select CLOSURE_STATUS_CODE 
   INTO  Lv_V_Closure_Status
  from S3G_LAD_ACCCLOSR A, S3G_LAD_ACCCLOSRDET B
  WHERE A.CLOSURE_ID = B.CLOSURE_ID
    AND A.CLOSURE_TYPE in (1,2) 
    AND A.PANUM = Iv_v_PANUM
    AND A.CLOSURE_DATE = IV_D_CUTOFF_DATE
    AND A.CLOSURE_ID    = ( Select MAX(CLOSURE_ID) 
                          from S3G_LAD_ACCCLOSR A 
                                 WHERE PANUM = Iv_v_PANUM
                                   AND A.CLOSURE_DATE <= IV_D_CUTOFF_DATE
                                   AND A.CLOSURE_TYPE in (1,2)  
                           ); 
  EXCEPTION
     WHEN NO_DATA_FOUND THEN
          Lv_V_RTN_DATA := 1;
          --RETURN 1;
      WHEN OTHERS THEN          
          RETURN NULL;     
  END ; 
  
  IF Lv_V_Closure_Status IN ('3') THEN
     RETURN 2;
  ELSIF Lv_N_Contract_Status IN ('7') AND Lv_V_RTN_DATA IN ('1') THEN   
     RETURN 2;
  ELSE
    RETURN 1;
 END IF; 
 
ELSIF IV_V_PRODUCT_CODE in (4,5,6) then ----= 'B' THEN 
     BEGIN
        SELECT NVL(a.PA_STATUS_CODE,1)
          INTO Lv_N_Contract_Status
          FROM S3G_LAD_ACCCREATION a
         WHERE PANUM = Iv_V_PANUM;
     EXCEPTION
         WHEN NO_DATA_FOUND THEN 
              RETURN -1;
         WHEN OTHERS THEN 
              RETURN -1;
     END;
 
     IF Lv_N_Contract_Status = 0  THEN
        RETURN Lv_N_Contract_Status ;
     ELSIF  Lv_N_Contract_Status IN (3,4,5,8,9,11,13,14,25,31,32,42,46,51,52,61) THEN    
        RETURN 1 ;    
     END IF; 
  
END IF;
END Df_N_Get_Contract_Status;



Function DF_N_CBO_NDPD(iv_v_product_type IN VARCHAR2, IV_V_CONTRACT_NUMBER VARCHAR2, IV_D_CUTOFF_DATE DATE, iv_n_flg NUMBER DEFAULT 0)
Return NUMBER IS
LV_N_NDPD               NUMBER;
LV_N_ARREARS             NUMBER;
LV_N_ADVANCE             NUMBER;
LV_N_AGE                 NUMBER;
LV_D_ARREAR_SINCE         DATE;
LV_N_ARREAR_SINCE_CNT   NUMBER;
Lv_n_over_due_days         NUMBER:=0;
lv_n_instalment_amount  NUMBER:=0;
lv_n_funds_in_use         NUMBER:=0;
lv_n_bal_amt             NUMBER:=0;
lv_n_over_due             NUMBER:=0;
lv_d_dt                 DATE;
lv_n_scheme_type          NUMBER:=0;
lv_n_product_code          NUMBER:=0;
lv_n_fw_id              NUMBER:=0;
lv_n_Noof_Inst_overdue  NUMBER:=0;
lv_d_facility_end_date  DATE;
LV_D_MIN_DATE             DATE;
Lv_N_Count              NUMBER:=0;
LV_N_DAYS                NUMBER:=0;
LV_N_AVAILABLE_FUNDS    NUMBER;
Lv_N_Prepay_Limit       NUMBER := 0;
Lv_v_Inst_Avail         VARCHAR(2):= 'u';
Lv_N_Drawing_Power      NUMBER := 0 ; 
Lv_N_Principal_Os       NUMBER := 0 ; 
Lv_N_Funding_Amount     NUMBER := 0 ; 
Lv_N_Principal          NUMBER := 0 ; 
Lv_d_Installment_date   DATE   ;      
Lv_n_over_due_days      nUMBER;
Begin

If iv_v_product_type = 'L' THEN

    Select SUM(OPENINGDEMAND)
          INTO LV_N_ARREARS
     from 
     (
      select  PANUM , NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE=0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND
      FROM S3G_CLN_DMDDS4 D4          
      WHERE D4.VALUE_DATE <= IV_D_CUTOFF_DATE
      AND D4.DOCUMENT_TYPE != 'CHR' 
      AND D4.LOB_ID IN (1,2,3)
      AND D4.PANUM=IV_V_CONTRACT_NUMBER
      AND D4.PANUM = IV_V_CONTRACT_NUMBER
      GROUP BY D4.PANUM 
      Union All
      select  PANUM, NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE=0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND
      FROM S3G_CLN_DMDDS4 D4        
      where D4.DOCUMENT_DATE <= IV_D_CUTOFF_DATE
      AND D4.DOCUMENT_TYPE='CHR'
      AND D4.PANUM=IV_V_CONTRACT_NUMBER
      AND D4.PANUM = IV_V_CONTRACT_NUMBER
      AND D4.LOB_ID IN (1,2,3)
      group by d4.PANUM
    );
    
    FOR K IN (SELECT MIN(INSTALLMENTDATE) INSTALLMENTDATE, COUNT(*)AGE
                            FROM (SELECT INSTALLMENTDATE,
                                         NVL(Lv_N_Arrears,0) - SUM(INSTALLMENTAMOUNT) OVER (ORDER BY INSTALLMENTDATE DESC) + INSTALLMENTAMOUNT ABC
                                    FROM S3G_LAD_ACCAMORTSTRUCT 
                                   WHERE PANUM =  Iv_V_Contract_Number                                    
                                     AND INSTALLMENTDATE <= IV_D_CUTOFF_DATE
                                   ORDER BY INSTALLMENTDATE DESC)
                           WHERE ABC >  0  ORDER BY INSTALLMENTDATE DESC)
                Loop
                    Lv_N_Age := NVL(K.AGE,0);
                    Lv_D_Arrear_Since := K.INSTALLMENTDATE;
                If NVL(LV_N_ARREARS,0) > 0 AND NVL(Lv_N_Age,0) = 0 THEN
                       Lv_N_Age := NVL(Lv_N_Age,0) + 1;
                End If;
                    Exit;
                End Loop;
    LV_N_ARREAR_SINCE_CNT := to_number(IV_D_CUTOFF_DATE - Lv_D_Arrear_Since) ;
     
    IF NVL(LV_N_ARREARS,0) <= 0 THEN
       RETURN 0;
    ELSE
    
      IF LV_N_ARREAR_SINCE_CNT > 999 THEN
         RETURN 999;
      ELSE
        LV_N_ARREAR_SINCE_CNT   := NVL((LV_N_ARREAR_SINCE_CNT - 1),0);
    
       IF LV_N_ARREARS          > 0 AND LV_N_ARREAR_SINCE_CNT <= 0 THEN
           LV_N_ARREAR_SINCE_CNT := 1 ;
       END IF;
         RETURN LV_N_ARREAR_SINCE_CNT;
      END IF;
    END IF;    
ELSE

Begin
   
Select SUM(OPENINGDEMAND)
      INTO LV_N_ARREARS
 from 
 (
  select  PANUM , NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE=0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND
  FROM S3G_CLN_DMDDS4 D4
  WHERE D4.VALUE_DATE <= IV_D_CUTOFF_DATE
  AND D4.DOCUMENT_TYPE != 'CHR' 
  AND D4.LOB_ID IN (4,5,6)  
  AND D4.PANUM = IV_V_CONTRACT_NUMBER
  GROUP BY D4.PANUM 
  Union All
  select  PANUM, NVL(SUM((CASE WHEN  D4.TRANSACTION_CODE=0 THEN D4.TRANSACTION_AMOUNT ELSE -(D4.TRANSACTION_AMOUNT)END)),0) AS OPENINGDEMAND
  FROM S3G_CLN_DMDDS4 D4        
  where D4.DOCUMENT_DATE <= IV_D_CUTOFF_DATE
  AND D4.DOCUMENT_TYPE='CHR'  
  AND D4.PANUM = IV_V_CONTRACT_NUMBER
  AND D4.LOB_ID IN (4,5,6)
  group by d4.PANUM
);


Exception
     WHEN OTHERS THEN
          Lv_N_Funds_In_Use := 0 ;
          Lv_N_Drawing_Power:= 0 ;
          Lv_N_Scheme_Type  := 0 ;
          Lv_N_Product_Code := 0 ;
          Lv_N_Fw_Id        := 0 ;
          Lv_D_Facility_End_Date := TRUNC(SYSDATE) ;
          Lv_N_Prepay_Limit := 0 ;
End ;
     -->> Patched By Sridhar G for MFC-524 For calculating OutStanding
END IF;

Exception
 WHEN OTHERS THEN
   LV_N_ARREAR_SINCE_CNT := 0;
   Return LV_N_ARREAR_SINCE_CNT;
End DF_N_CBO_NDPD;

Function DF_V_CBO_RESCHEDULE_DATE(IV_V_APPL_NUMBER IN VARCHAR2) Return DATE
  IS
 LV_V_RESCHEDULE_DATE DATE;
Begin

      SELECT APPLICAION_PROCESS_DATE
        INTO LV_V_RESCHEDULE_DATE
        FROM S3G_ORG_APPPROC  
        WHERE APPLICATION_PROCESS_ID in ( Select B.APPLICATION_PROCESS_ID
                                            from S3G_ORG_APPPROC   A                                                
                                               , S3G_ORG_APP_DEAL_TRAN B 
                                               , S3G_LAD_ACCCREATION C   
                                               , S3G_LAD_ACCPASADET D
                                           WHERE A.APPLICATION_NUMBER     = IV_V_APPL_NUMBER
                                             AND A.APPLICATION_PROCESS_ID = C.APPLICATION_PROCESS_ID
                                             AND B.PA_SA_REF_ID           = D.PA_SA_REF_ID
                                             AND C.PANUM                  = D.PANUM
                                          )   ;
   
  Return  LV_V_RESCHEDULE_DATE;
Exception
   WHEN OTHERS THEN
    Return NULL;
End DF_V_CBO_RESCHEDULE_DATE;

Function DF_V_CBO_CLOSURE_REASON(IV_V_REF_NUMBER IN VARCHAR2, IV_D_CUTOFF_DATE IN DATE) Return VARCHAR2
IS
LV_V_REASON_CODE VARCHAR(3);
Begin
      SELECT LPAD(REASON_FOR_CLOSURE,3,'0')
        INTO LV_V_REASON_CODE
        FROM S3G_LAD_ACCCLOSR
       WHERE PANUM = IV_V_REF_NUMBER
         AND CLOSURE_TYPE In (1,2)
         AND CLOSURE_DATE <= IV_D_CUTOFF_DATE                    
         AND CLOSURE_ID = ( Select MAX(CLOSURE_ID) 
                              from S3G_LAD_ACCCLOSR A 
                             WHERE PANUM = IV_V_REF_NUMBER
                               AND A.CLOSURE_DATE <= IV_D_CUTOFF_DATE 
                               AND A.CLOSURE_TYPE in (1,2)  
                            ); 
 
  Return NVL(LV_V_REASON_CODE,'006');
Exception
   WHEN OTHERS THEN    
    Return '006'; 
End DF_V_CBO_CLOSURE_REASON;


Function DF_V_CBO_RESCHEDULE_CONTRACT(IV_V_APPL_NUMBER IN VARCHAR2) Return VARCHAR2
  IS
 LV_V_RESCHEDULE_CONTRACT VARCHAR2(25);
Begin
--      SELECT OLD_CONTRACT_NO
--        INTO  LV_V_RESCHEDULE_CONTRACT
--        FROM CC_DEAL_TRANSFER_DETAILS
--       WHERE APPLICATION_NUMBER = IV_V_APPL_NUMBER;

   Select C.PANUM
   INTO  LV_V_RESCHEDULE_CONTRACT
    from S3G_ORG_APPPROC   A                                                
       , S3G_ORG_APP_DEAL_TRAN B 
       , S3G_LAD_ACCCREATION C   
       , S3G_LAD_ACCPASADET D
   WHERE A.APPLICATION_NUMBER     = IV_V_APPL_NUMBER
     AND A.APPLICATION_PROCESS_ID = C.APPLICATION_PROCESS_ID
     AND B.PA_SA_REF_ID           = D.PA_SA_REF_ID
     AND C.PANUM                  = D.PANUM  ;
                                          
                                          

  Return  LV_V_RESCHEDULE_CONTRACT;
Exception
   WHEN OTHERS THEN
    Return NULL;
End DF_V_CBO_RESCHEDULE_CONTRACT;


Function DF_V_CBO_SECURITY_ID(IV_V_APPL_NUMBER IN VARCHAR2,IV_V_REF IN VARCHAR2,IV_N_VALUE IN NUMBER,IV_N_ASSET_CONTRACT_REF_SLNO IN NUMBER) Return VARCHAR2
  IS                                                    /* Added IV_N_ASSET_CONTRACT_REF_SLNO for More than One Assert on 25-AUG-2010*/
 LV_V_SECURITY_ID VARCHAR(256);
Begin
  If IV_V_REF = 'TYPE' THEN
  
   IF IV_N_VALUE = 1 THEN  
   
     SELECT LPAD(D.SECURITY_TYPE_IDENTIFIER,3,'0')
      INTO  LV_V_SECURITY_ID
       FROM S3G_LAD_ACCPASADET A ,
            S3G_LAD_ACCASTDET B , 
            S3G_LAD_ACCCREATION C ,
            S3G_ORG_APPPROCASSETDET D,
            S3G_ORG_APPPROC E 
      WHERE   A.PANUM                 = C.PANUM
      AND     C.APPLICATION_PROCESS_ID  = D.APPLICATION_PROCESS_ID
      AND     D.APPLICATION_PROCESS_ID  = E.APPLICATION_PROCESS_ID 
      AND     E.APPLICATION_NUMBER      =  IV_V_APPL_NUMBER 
      --> AND A.PANUM                 = 'HON046080'
      AND B.ASSET_ID                = D.ASSET_ID
      AND B.REF_SLNO                = IV_N_ASSET_CONTRACT_REF_SLNO
      AND B.PA_SA_REF_ID = A.PA_SA_REF_ID;
  /*
   SELECT SECURITY_TYPE_IDENTIFIER 
   INTO  LV_V_SECURITY_ID
FROM  (
  Select ROWNUM RW_ID  ,B.APPLICATION_NUMBER  , LPAD(SECURITY_TYPE_IDENTIFIER,3,'0')  SECURITY_TYPE_IDENTIFIER     
     FROM S3G_ORG_APPPROCASSETDET A,
          S3G_ORG_APPPROC B 
     WHERE A.APPLICATION_PROCESS_ID  = B.APPLICATION_PROCESS_ID 
       AND B.APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       )
       WHERE APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       AND  RW_ID  = IV_N_ASSET_CONTRACT_REF_SLNO; 
       --AND A.ASSET_ID = IV_N_ASSET_CONTRACT_REF_SLNO; 
    */   
    
    
   Elsif IV_N_VALUE = 2 THEN
   
   
     SELECT LPAD(D.SECURITY_TYPE_IDENTIFIER,3,'0')
      INTO  LV_V_SECURITY_ID
       FROM S3G_LAD_ACCPASADET A ,
            S3G_LAD_ACCASTDET B , 
            S3G_LAD_ACCCREATION C ,
            S3G_ORG_APPPROCASSETDET D,
            S3G_ORG_APPPROC E 
      WHERE   A.PANUM                 = C.PANUM
      AND     C.APPLICATION_PROCESS_ID  = D.APPLICATION_PROCESS_ID
      AND     D.APPLICATION_PROCESS_ID  = E.APPLICATION_PROCESS_ID 
      AND     E.APPLICATION_NUMBER      =  IV_V_APPL_NUMBER   
      --> AND A.PANUM                 = 'HON046080'
      AND B.ASSET_ID                = D.ASSET_ID
      AND B.REF_SLNO                = IV_N_ASSET_CONTRACT_REF_SLNO
      AND B.PA_SA_REF_ID = A.PA_SA_REF_ID;
   /*
   SELECT SECURITY_TYPE_IDENTIFIER 
   INTO  LV_V_SECURITY_ID
FROM  (
  SELECT ROWNUM RW_ID  ,B.APPLICATION_NUMBER  , LPAD(SECURITY_TYPE_IDENTIFIER,3,'0')  SECURITY_TYPE_IDENTIFIER  
    --SELECT LPAD(SECURITY_TYPE_IDENTIFIER,3,'0')     
     FROM S3G_ORG_APPPROCASSETDET A,
          S3G_ORG_APPPROC B 
     WHERE A.APPLICATION_PROCESS_ID  = B.APPLICATION_PROCESS_ID 
       AND B.APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       )
       WHERE APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       AND RW_ID = IV_N_ASSET_CONTRACT_REF_SLNO; 
    */   
       
       
   End If;
  Elsif IV_V_REF = 'VALUE' THEN
   IF IV_N_VALUE = 1 THEN
   
      SELECT SECURITY_TYPE_IDENTIFIER_VALUE 
      INTO  LV_V_SECURITY_ID
       FROM S3G_LAD_ACCPASADET A ,
            S3G_LAD_ACCASTDET B , 
            S3G_LAD_ACCCREATION C ,
            S3G_ORG_APPPROCASSETDET D,
            S3G_ORG_APPPROC E 
      WHERE   A.PANUM                 = C.PANUM
      AND     C.APPLICATION_PROCESS_ID  = D.APPLICATION_PROCESS_ID
      AND     D.APPLICATION_PROCESS_ID  = E.APPLICATION_PROCESS_ID 
      AND     E.APPLICATION_NUMBER      =  IV_V_APPL_NUMBER   
      --> AND A.PANUM                 = 'HON046080'
      AND B.ASSET_ID                = D.ASSET_ID
      AND B.REF_SLNO                = IV_N_ASSET_CONTRACT_REF_SLNO
      AND B.PA_SA_REF_ID = A.PA_SA_REF_ID;
   /*
   SELECT SECURITY_TYPE_IDENTIFIER_VALUE
   INTO  LV_V_SECURITY_ID
FROM  (
  SELECT ROWNUM RW_ID  ,B.APPLICATION_NUMBER  , SECURITY_TYPE_IDENTIFIER_VALUE 
     FROM S3G_ORG_APPPROCASSETDET A,
          S3G_ORG_APPPROC B 
     WHERE A.APPLICATION_PROCESS_ID  = B.APPLICATION_PROCESS_ID 
       AND B.APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       )
         WHERE APPLICATION_NUMBER = IV_V_APPL_NUMBER     
          AND RW_ID = IV_N_ASSET_CONTRACT_REF_SLNO; 
     */  
   ELSIF IV_N_VALUE = 2 THEN
   
     SELECT SECURITY_TYPE_IDENTIFIER_VALUE
      INTO  LV_V_SECURITY_ID
       FROM S3G_LAD_ACCPASADET A ,
            S3G_LAD_ACCASTDET B , 
            S3G_LAD_ACCCREATION C ,
            S3G_ORG_APPPROCASSETDET D,
            S3G_ORG_APPPROC E 
      WHERE   A.PANUM                 = C.PANUM
      AND     C.APPLICATION_PROCESS_ID  = D.APPLICATION_PROCESS_ID
      AND     D.APPLICATION_PROCESS_ID  = E.APPLICATION_PROCESS_ID 
      AND     E.APPLICATION_NUMBER      =  IV_V_APPL_NUMBER   
      --> AND A.PANUM                 = 'HON046080'
      AND B.ASSET_ID                = D.ASSET_ID
      AND B.REF_SLNO                = IV_N_ASSET_CONTRACT_REF_SLNO
      AND B.PA_SA_REF_ID = A.PA_SA_REF_ID;
   /*
     SELECT SECURITY_TYPE_IDENTIFIER_VALUE
   INTO  LV_V_SECURITY_ID
FROM  (
  SELECT ROWNUM RW_ID  ,B.APPLICATION_NUMBER  , SECURITY_TYPE_IDENTIFIER_VALUE      
      FROM S3G_ORG_APPPROCASSETDET A,
          S3G_ORG_APPPROC B 
     WHERE A.APPLICATION_PROCESS_ID  = B.APPLICATION_PROCESS_ID 
       AND B.APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       )
         WHERE APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       AND RW_ID = IV_N_ASSET_CONTRACT_REF_SLNO;
    */   
   End If;
  End If;
  Return LV_V_SECURITY_ID;
Exception
   WHEN OTHERS THEN    
    Return 'MF2014DEC31'; 
End DF_V_CBO_SECURITY_ID;


Function DF_N_CBO_INTEREST_RESRV_AMT (IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_CUTOFF_DATE IN DATE,IV_N_OVERDUE_DAYS IN NUMBER) Return NUMBER
IS
   LV_N_INTEREST_RESRV_AMT  NUMBER;
   LV_N_OUTST_DAYS          NUMBER;
   LV_N_DFLT_DAYS           NUMBER;   
   Lv_n_arrears                NUMBER := 0;
   lv_n_advance                NUMBER := 0;
   Lv_n_age                    NUMBER := 0;
   Lv_d_arrear_since         DATE;
   Lv_n_noof_dues            NUMBER := 0;
   Lv_n_slab                NUMBER := 0;
   Lv_n_ageing_month        NUMBER := 0;
   Lv_d_Last_Day            DATE := IV_D_CUTOFF_DATE;
   lv_d_slab_cut_off_date   DATE;
   Lv_n_Net_Exposure        NUMBER := 0;
   Lv_n_Prov_Percent        NUMBER := 0;
   Lv_N_Addl_Prov_Percent   NUMBER := 0;
Begin

   Begin
        SELECT FUTURE_INTEREST --INCOME_SUSPENDED
        INTO   LV_N_INTEREST_RESRV_AMT
        FROM   S3G_CLN_DELINQSPOOL A , S3G_CLN_DELINQSPOOLSTADTL B
        WHERE  A.DELINQUENCYSPOOL_ID = B.DELINQUENCYSPOOL_ID
        AND    B.PANUM = IV_V_CONTRACT_NUMBER        
        AND    A.DELINQUENCY_MONTH = TO_NUMBER(TO_CHAR(IV_D_CUTOFF_DATE,'YYYYMM'))
        AND    A.DELINQUENCYSPOOL_ID = (SELECT MAX(A.DELINQUENCYSPOOL_ID)
                                        FROM   S3G_CLN_DELINQSPOOL B
                                        WHERE  B.DELINQUENCY_MONTH = TO_NUMBER(TO_CHAR(IV_D_CUTOFF_DATE,'YYYYMM')));
   Exception
               WHEN NO_DATA_FOUND THEN
            LV_N_INTEREST_RESRV_AMT:=0;
   End;
   Return  ROUND(LV_N_INTEREST_RESRV_AMT);
   Exception
      WHEN OTHERS THEN
         Return 0;
End DF_N_CBO_INTEREST_RESRV_AMT;

Function DF_N_CBO_FM13_PROVISION (IV_V_CONT_NO IN VARCHAR2,IV_N_OVERDUE IN NUMBER,IV_N_OVERDUE_DAYS IN NUMBER,IV_N_RESRV_AMT IN NUMBER,IV_D_REPORT_DATE IN DATE) Return NUMBER
IS
   LV_N_EXPOSURE               NUMBER := 0;
   LV_N_NIL                    NUMBER := 0;
   LV_N_NET_EXPOSURE           NUMBER := 0;
   LV_N_RES_INTEREST           NUMBER := 0;
   LV_N_MIN_PROV_AMT           NUMBER := 0;
   LV_N_MAX_PROV_AMT           NUMBER := 0;
   LV_N_GAP_PROVISION          NUMBER := 0;
   LV_N_GAP_PROV_AFTER_COVER   NUMBER := 0;
   LV_N_WDV                    NUMBER := 0;
   LV_N_COLLATERAL             NUMBER := 0;
   LV_N_FM13_PROVISION         NUMBER := 0;
   Lv_n_Prov_Percent           NUMBER := 0;
   Lv_N_Addl_Prov_Percent       NUMBER := 0;
   Lv_n_Prov_Percent1           NUMBER := 0;
   Lv_N_Addl_Prov_Percent1       NUMBER := 0;
   Lv_N_Asset_Cover               NUMBER := 0;
   Lv_n_Prov_Amount               NUMBER := 0;
   Lv_n_addl_Prov_Amount       NUMBER := 0;
   Lv_n_Net_Addl_Prov_Amount   NUMBER := 0;
   Lv_n_Total_Prov_Amount       NUMBER := 0;
   Lv_n_arrears                   NUMBER := 0;
   lv_n_advance                   NUMBER := 0;
   Lv_n_age                       NUMBER := 0;
   Lv_d_arrear_since           DATE;
   Lv_n_noof_dues               NUMBER := 0;
   Lv_n_slab                   NUMBER := 0;
   lv_n_ageing_month           NUMBER := 0;
   lv_d_slab_cut_off_date       DATE;
   lv_n_income_suspend           NUMBER := 0;
   lv_n_future_prn               NUMBER := 0;
   lv_n_net_addl_provision       NUMBER := 0;
   lv_n_provision_percentage   NUMBER := 0;
   lv_n_addl_prov_rate           NUMBER := 0;
   Lv_d_Last_Day               DATE := IV_D_REPORT_DATE;
   --Lv_v_profile_abbr           VARCHAR2(100):=Df_V_Const_Ref_Dir ('PROFILE_ABBR');
   Lv_N_Slab_seq               NUMBER:=0;
Begin
           --SELECT Net_exposure, Provision_percentage,addl_prov_percentage,asset_cover,A.CATEGORY,TOTAL_PROV_AMT
        SELECT  ( PRINCIPAL_PROVISIONING_SECURED + PRINCPAL_PROVISIONING_UNSECURD )
        INTO   Lv_n_Total_Prov_Amount
        FROM   S3G_CLN_DELINQSPOOL A , S3G_CLN_DELINQSPOOLSTADTL B
        WHERE  A.DELINQUENCYSPOOL_ID = B.DELINQUENCYSPOOL_ID
        AND    B.PANUM = IV_V_CONT_NO        
        AND    A.DELINQUENCY_MONTH = TO_NUMBER(TO_CHAR(IV_D_REPORT_DATE,'YYYYMM'))
        AND    A.DELINQUENCYSPOOL_ID = (SELECT MAX(A.DELINQUENCYSPOOL_ID)
                                        FROM   S3G_CLN_DELINQSPOOL B
                                        WHERE  B.DELINQUENCY_MONTH = TO_NUMBER(TO_CHAR(IV_D_REPORT_DATE,'YYYYMM')));

             Return ROUND(Lv_N_Total_Prov_Amount);
Exception
 WHEN OTHERS
   THEN
      Lv_N_Total_Prov_Amount := 0;
     Return ROUND(Lv_N_Total_Prov_Amount);
End DF_N_CBO_FM13_PROVISION;

Function DF_N_CBO_Write_Off(Iv_V_Contract_number IN VARCHAR2,Iv_d_dt IN DATE,V_PA_SA_REF_ID in number) Return NUMBER
IS
      Lv_n_Write_Off    NUMBER:=0;
Begin
    --SELECT  NVL(SUM(DECODE(Txn_code,0,Txn_Amount,-Txn_amount)),0)
    SELECT  NVL(SUM(TXN_AMOUNT),0)
    INTO    Lv_n_Write_Off
    FROM    S3G_JV_DET DET , S3G_JV_HDR HDR    
    WHERE   HDR.ACCOUNT_LINK_KEY = DET.ACCOUNT_LINK_KEY
    AND     DET.GL_ACCOUNT_NUMBER IN (300,404)
    AND     DET.CASHFLOW_ID = 99      
    --AND     DET.REFERENCE_NUMBER  = Iv_V_Contract_number
    and     DET.PA_SA_REF_ID=V_PA_SA_REF_ID
    AND     HDR.JV_DATE<=Iv_d_dt;
    Return ROUND(Lv_n_Write_Off);
Exception
         WHEN NO_DATA_FOUND THEN
               Return 0;
End DF_N_CBO_Write_Off;

Function DF_D_CBO_CLOSING_DATE (IV_V_REFERENCE_NUMBER IN VARCHAR2, IV_D_CUTOFF_DATE IN DATE) Return DATE
IS
   LV_D_SETTLEMENT_DATE       DATE;
   LV_V_CLOSURE_STATUS           VARCHAR2(5);
Begin
Begin
    Select B.CLOSURE_STATUS_CODE, A.CLOSURE_DATE
      INTO LV_V_CLOSURE_STATUS,LV_D_SETTLEMENT_DATE
      from S3G_LAD_ACCCLOSR A, S3G_LAD_ACCCLOSRDET B
      WHERE A.CLOSURE_ID = B.CLOSURE_ID
        AND A.CLOSURE_TYPE in (2,1) 
        AND B.CLOSURE_STATUS_TYPE_CODE = 9
        AND B.CLOSURE_STATUS_CODE      = 3
        AND A.PANUM = IV_V_REFERENCE_NUMBER
        AND A.CLOSURE_DATE = IV_D_CUTOFF_DATE
        AND A.CLOSURE_ID = ( Select MAX(CLOSURE_ID) 
                              from S3G_LAD_ACCCLOSR A 
                             WHERE PANUM = IV_V_REFERENCE_NUMBER
                               AND A.CLOSURE_DATE <= IV_D_CUTOFF_DATE
                               AND A.CLOSURE_TYPE in (1,2)  
                            ); 
 /*
 SELECT CLOSURE_STATUS,SETTLEMENT_DATE
         INTO LV_V_CLOSURE_STATUS,LV_D_SETTLEMENT_DATE
     FROM DC_CONTRACT_CLOSURE_HEADER
    WHERE REFERENCE_TYPE = 'ACCOUNT'
      AND REFERENCE_NUMBER = IV_V_REFERENCE_NUMBER
      AND CLOSURE_DATE <= IV_D_CUTOFF_DATE
      AND OCCURRENCE_NO = (SELECT MAX(OCCURRENCE_NO) FROM DC_CONTRACT_CLOSURE_HEADER
                                  WHERE REFERENCE_NUMBER = IV_V_REFERENCE_NUMBER
                                    AND CLOSURE_DATE <= IV_D_CUTOFF_DATE);
 */
 Exception
   WHEN OTHERS THEN
     Return NULL;
 End;

 If LV_V_CLOSURE_STATUS IN (1,2) THEN
    Return LV_D_SETTLEMENT_DATE;
 ELSE
    Return NULL;
 End If;
End DF_D_CBO_CLOSING_DATE;


Function DF_V_CBO_Security_Flag(Iv_V_Contract_number IN VARCHAR2,V_PA_SA_REF_ID in number) Return VARCHAR2
IS
Lv_N_Security_Flag NUMBER:=0;
Begin
       Begin
       SELECT  1 
        INTO   Lv_N_Security_Flag
          FROM S3G_ORG_APP_LIEN a
          inner join S3G_LAD_ACCCREATION b
          on b.APPLICATION_PROCESS_ID=a.APPLICATION_PROCESS_ID
          inner join S3G_LAD_ACCPASADET PASA
          on PASA.ACCOUNT_CREATION_ID=b.ACCOUNT_CREATION_ID
          where pasa.PA_SA_REF_ID=V_PA_SA_REF_ID
          
--         WHERE a.APPLICATION_PROCESS_ID in (Select APPLICATION_PROCESS_ID 
--                                            From S3G_LAD_ACCCREATION
--                                            WHERE PANUM = Iv_V_Contract_number)
           AND ROWNUM < 2 ;
       /*
            SELECT 1
            INTO   Lv_N_Security_Flag
            FROM   CC_COLLATERAL_ACC_MAPPING
            WHERE  CONTRACT_NUMBER = Iv_v_Contract_number
            AND    ROWNUM < 2;
      */      
       Exception
         WHEN NO_DATA_FOUND THEN
              Lv_N_Security_Flag:=0;
       End;
  If Lv_N_Security_Flag = 1 THEN
     Return '001';
  ELSE
     Return '002';
   End If;
End  DF_V_CBO_Security_Flag;

Procedure DP_D_CBO_MIN_DUE(IV_V_CONTRACT_NUMBER IN VARCHAR2,
                           IV_D_DATE            IN DATE,
                           Ov_D_Inst_due_date   Out DATE,
                           Ov_n_inst_amt        Out NUMBER) IS
Lv_d_Inst_due_date  DATE;
Lv_d_inst_amount    NUMBER:=0;
Begin

SELECT INSTALLMENTDATE,INSTALLMENTAMOUNT
INTO   Lv_d_Inst_due_date,Lv_d_inst_amount
from   S3G_LAD_ACCAMORTSTRUCT
WHERE  PANUM = IV_V_CONTRACT_NUMBER
AND    TO_NUMBER(TO_CHAR(INSTALLMENTDATE,'YYYYMM'))=TO_NUMBER(TO_CHAR(IV_D_DATE ,'YYYYMM'));

Ov_D_Inst_due_date:=Lv_d_Inst_due_date;
Ov_n_inst_amt:= ROUND(Lv_d_inst_amount);

Exception
WHEN OTHERS THEN
     Ov_D_Inst_due_date:=NULL;
     Ov_n_inst_amt:=NULL;
End DP_D_CBO_MIN_DUE;


Function Df_V_Cbo_Nid(IV_V_CUST_REF IN VARCHAR2) Return VARCHAR2 IS
LV_V_VALUE  VARCHAR2(100);
Begin
   SELECT SUBSTR(IV_V_CUST_REF,6)||SUBSTR(IV_V_CUST_REF,4,1) INTO LV_V_VALUE FROM dual;
 Return LV_V_VALUE;
End Df_V_Cbo_Nid;



Function DF_V_CBO_LABOUR_CARD(IV_V_CUSTOMER_CODE IN VARCHAR2) Return VARCHAR2
 IS
 LV_N_LABOUR_CARD VARCHAR2(100);
Begin
  SELECT LABOUR_CARD_NO
    INTO LV_N_LABOUR_CARD
   FROM S3G_ORG_CUSTMASTER
    WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ; 
 Return LV_N_LABOUR_CARD;
 Exception
 WHEN NO_DATA_FOUND THEN
 Begin
   SELECT DRIVING_LIC_NUMBER
     INTO LV_N_LABOUR_CARD
     FROM S3G_ORG_CUSTMASTER
    WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ; -->> Driving License Number

   Return LV_N_LABOUR_CARD;
 Exception    
   WHEN OTHERS THEN
     LV_N_LABOUR_CARD := NULL;
     Return LV_N_LABOUR_CARD;
  End;    
 WHEN OTHERS THEN
  LV_N_LABOUR_CARD := NULL;
  Return LV_N_LABOUR_CARD;
  
End ;


Function DF_D_CBO_Subject_Expiry_date (IV_V_CUSTOMER_CODE IN VARCHAR2) Return DATE
IS
   LV_N_CONSTITUTION_CODE   NUMBER;
   LV_N_RESIDENTIAL_CODE    NUMBER;
   LV_n_parameter_code     NUMBER;
   LV_D_EXP_DATE          DATE;
   LV_D_CHECK_EXP_DAT        DATE;   
   LV_D_OUT_EXP_DATE        DATE;
   
BEGIN   
Begin
   SELECT NATIONALITY, CONSTITUTION_ID
     INTO LV_N_RESIDENTIAL_CODE, LV_N_CONSTITUTION_CODE
     FROM S3G_ORG_CUSTMASTER
    WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE;
    
   If LV_N_CONSTITUTION_CODE = 5 THEN
      If LV_N_RESIDENTIAL_CODE IN (100) THEN
        ---> FOR CIVIL IDENTIFICATION NUMBER(NID)
         SELECT NVL(TO_DATE(TO_CHAR(NID_CR_RID_EXP_DATE,'DD/MM/RRRR'),'DD/MM/RRRR'),trunc(sysdate)+180) 
           INTO LV_D_CHECK_EXP_DAT
           FROM S3G_ORG_CUSTMASTER
          WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ; 
        --> LV_D_CHECK_EXP_DATE:= LV_D_EXP_DATE;
          
      Elsif LV_N_RESIDENTIAL_CODE NOT IN (100,466,419,453,456,443)THEN
         --> LABOUR CARD NUMBER
         SELECT NVL(TO_DATE(TO_CHAR(LABOUR_CARD_EXP_DATE,'DD/MM/RRRR'),'DD/MM/RRRR'),trunc(sysdate)+180) 
           INTO LV_D_CHECK_EXP_DAT
           FROM S3G_ORG_CUSTMASTER
          WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ; 
          -->LV_D_CHECK_EXP_DATE:= LV_D_EXP_DATE;
      ELSE
        --> FOR PASSPORT NUMBER
        SELECT NVL(TO_DATE(TO_CHAR(PASSPORT_EXP_DATE,'DD/MM/RRRR'),'DD/MM/RRRR'),trunc(sysdate)+180) 
           INTO LV_D_CHECK_EXP_DAT
           FROM S3G_ORG_CUSTMASTER
          WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ; 
          
      End If;
   ELSE
      --> FOR COMPANY REGISTRATION NUMBER(CR NO)
      
      SELECT NVL(TO_DATE(TO_CHAR(CR_EXPIRY_DATE,'DD/MM/RRRR'),'DD/MM/RRRR'),trunc(sysdate)+180) 
        INTO LV_D_CHECK_EXP_DAT
        FROM S3G_ORG_CUSTMASTER
       WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ;          
      
   End If;        
      IF LV_D_CHECK_EXP_DAT IS NULL THEN          
      BEGIN       
            SELECT NVL(TO_DATE(TO_CHAR(NID_CR_RID_EXP_DATE,'DD/MM/RRRR'),'DD/MM/RRRR'),trunc(sysdate)+180) 
        INTO LV_D_CHECK_EXP_DAT
        FROM S3G_ORG_CUSTMASTER
       WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ;   
    
    Exception
        WHEN OTHERS THEN
             LV_D_EXP_DATE       := PV_D_DATE+30;   
             LV_D_CHECK_EXP_DAT := PV_D_DATE+30;
    END ; 
    END If;            
Exception
   WHEN OTHERS THEN
      LV_D_CHECK_EXP_DAT := PV_D_DATE+30;
END;

LV_D_OUT_EXP_DATE := CASE WHEN  LV_D_CHECK_EXP_DAT <= TRUNC(sysdate) THEN ADD_MONTHS(LAST_DAY(TRUNC(sysdate)),6) ELSE LV_D_CHECK_EXP_DAT END;  -- Code added by Sudeesh From DLV1035
RETURN  NVL(LV_D_OUT_EXP_DATE,ADD_MONTHS(LAST_DAY(TRUNC(SYSDATE)),6));

End DF_D_CBO_Subject_Expiry_date;


Function DF_V_CBO_GET_CUSTOMER_NAME(FILE_TYPE IN VARCHAR2,IV_V_CUSTOMER_CODE IN VARCHAR2) Return VARCHAR2 IS
LV_V_CUST_NAME                  VARCHAR2(100) := NULL;
LV_V_CUSTOMER_NAME           VARCHAR2(100) := NULL;
Begin
      SELECT TRIM(SUBSTR(CUSTOMER_NAME,1,100))
             INTO LV_V_CUST_NAME
        FROM S3G_ORG_CUSTMASTER  
      WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ;
     
    If FILE_TYPE = 'CONSUMER' THEN
        FOR I IN 1 .. LENGTH(LV_V_CUST_NAME)
        Loop
            If ASCII(SUBSTR(LV_V_CUST_NAME,I,1)) NOT IN (126,33,64,35,36,37,94,38,42,47,92,43,45,58,59,124,60,62,63,44,95) THEN
               LV_V_CUSTOMER_NAME := LV_V_CUSTOMER_NAME || SUBSTR(LV_V_CUST_NAME,I,1);
            End If;
        End Loop;
    End If;

    If FILE_TYPE = 'CORPORATE' THEN
        FOR I IN 1 .. LENGTH(LV_V_CUST_NAME)
        Loop
            If ASCII(SUBSTR(LV_V_CUST_NAME,I,1)) NOT IN (126,33,35,36,37,94,42,92,43,45,58,59,124,60,62,63,44,95) THEN
               LV_V_CUSTOMER_NAME := LV_V_CUSTOMER_NAME || SUBSTR(LV_V_CUST_NAME,I,1);
            End If;
        End Loop;
    End If;

    Return LV_V_CUSTOMER_NAME;
Exception
    WHEN OTHERS THEN
         LV_V_CUSTOMER_NAME := NULL;
         IF LV_V_CUSTOMER_NAME  IS NULL THEN 
         BEGIN
         SELECT TRIM(SUBSTR(CUSTOMER_NAME,1,100))
             INTO LV_V_CUST_NAME
        FROM S3G_ORG_CUSTMASTER  
      WHERE CUSTOMER_ID = IV_V_CUSTOMER_CODE ;
     
    If FILE_TYPE = 'CONSUMER' THEN
        FOR I IN 1 .. LENGTH(LV_V_CUST_NAME)
        Loop
            If ASCII(SUBSTR(LV_V_CUST_NAME,I,1)) NOT IN (126,33,64,35,36,37,94,38,42,47,92,43,45,58,59,124,60,62,63,44,95) THEN
               LV_V_CUSTOMER_NAME := LV_V_CUSTOMER_NAME || SUBSTR(LV_V_CUST_NAME,I,1);
            End If;
        End Loop;
    End If;

    If FILE_TYPE = 'CORPORATE' THEN
        FOR I IN 1 .. LENGTH(LV_V_CUST_NAME)
        Loop
            If ASCII(SUBSTR(LV_V_CUST_NAME,I,1)) NOT IN (126,33,35,36,37,94,42,92,43,45,58,59,124,60,62,63,44,95) THEN
               LV_V_CUSTOMER_NAME := LV_V_CUSTOMER_NAME || SUBSTR(LV_V_CUST_NAME,I,1);
            End If;
        End Loop;
    End If;

    Return LV_V_CUSTOMER_NAME;
         END ;
         END IF;
         Return LV_V_CUSTOMER_NAME;
End DF_V_CBO_GET_CUSTOMER_NAME;



Function DF_V_CBO_GET_CUST_NATIONALITY(IV_N_RESIDENT_CODE  IN NUMBER)Return VARCHAR2
IS
LV_V_CUST_NATION             VARCHAR2(100) := NULL;
LV_V_CUSTOMER_NATION        VARCHAR2(3) := NULL;
Begin

      Select CODE 
        INTO LV_V_CUSTOMER_NATION
        from S3G_ORG_GROUP_INDUSTRY_TYPE  
       WHERE COMPANY_ID =1   
         and TYPE = 'NATIONALITY'          
         and VALUE = to_char(IV_N_RESIDENT_CODE);         
         
    Return LV_V_CUSTOMER_NATION;
Exception
    WHEN OTHERS THEN
         LV_V_CUSTOMER_NATION := NULL;
         Return LV_V_CUSTOMER_NATION;
End DF_V_CBO_GET_CUST_NATIONALITY;

Function DF_V_CBO_GENDER(IV_V_CUSTOMER_CODE IN VARCHAR2) Return VARCHAR2
IS
   LV_V_GENDER   VARCHAR2(20);
Begin

      SELECT DECODE (GENDER, 1, '001', 2, '002')
        INTO LV_V_GENDER
        FROM S3G_ORG_CUSTMASTER  
      WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ;
      
   Return LV_V_GENDER;
   Exception
      WHEN OTHERS THEN
         Return NULL;
End DF_V_CBO_GENDER;

Function DF_D_CBO_DATE_OF_BIRTH (IV_V_CUSTOMER_CODE IN VARCHAR2) Return DATE
IS
   LV_D_DOB   DATE;
Begin
   SELECT TO_DATE(DATEOFBIRTH,'DD/MM/YYYY')
    INTO   LV_D_DOB
    FROM S3G_ORG_CUSTMASTER  
      WHERE CUSTOMER_CODE = IV_V_CUSTOMER_CODE ;
  
   Return LV_D_DOB;
   Exception
     WHEN OTHERS THEN
       Return NULL;
End DF_D_CBO_DATE_OF_BIRTH;

Function DF_V_CBO_ADDRESS_LINE_1 (IV_N_ADDRESS_NUMBER IN NUMBER,IV_V_CUSTOMER_CODE IN VARCHAR2) Return VARCHAR2
IS
   LV_N_ADDRESS_TYPE_CODE   NUMBER;
   LV_V_LINE_1              VARCHAR2 (500);
Begin
   
   If IV_N_ADDRESS_NUMBER = 1  THEN
        LV_N_ADDRESS_TYPE_CODE := 2;    
   ELSE
        LV_N_ADDRESS_TYPE_CODE := 1; 
   End If;
   
 SELECT    'Post Box No. '||A.ADDRESS_VALUES.POST_BOX_NO   
   INTO LV_V_LINE_1
   FROM S3G_ORG_CUSTOMERADDRESS A , S3G_ORG_CUSTMASTER B 
  WHERE A.CUSTOMER_ID = B.CUSTOMER_ID
    and B.CUSTOMER_CODE = IV_V_CUSTOMER_CODE
    AND A.ADDRESS_TYPE = LV_N_ADDRESS_TYPE_CODE  
    AND ROWNUM < 2;
    
If trim(LV_V_LINE_1) IS NOT NULL THEN
   LV_V_LINE_1 := trim(LV_V_LINE_1);
   LV_V_LINE_1 := SUBSTR(LV_V_LINE_1,1,LENGTH(LV_V_LINE_1)-1);
End If;
   Return (REPLACE(LV_V_LINE_1,CHR(10), ' '));
Exception
   WHEN OTHERS
   THEN
      LV_V_LINE_1 := NULL;
      Return LV_V_LINE_1;
End DF_V_CBO_ADDRESS_LINE_1;


Function DF_V_CBO_ADDRESS_TEL_NO(IV_N_ADDRESS_NUMBER IN NUMBER,IV_V_CUSTOMER_CODE IN VARCHAR2) Return VARCHAR2
IS
   LV_N_ADDRESS_TYPE_CODE   NUMBER;
   LV_V_TEL_NO              VARCHAR2 (500);
Begin
   If IV_N_ADDRESS_NUMBER = 1
   THEN
      LV_N_ADDRESS_TYPE_CODE := 1;
   ELSE
         LV_N_ADDRESS_TYPE_CODE := 2;
   End If;
  
  --SELECT SUBSTR(NVL(NVL(TRIM(A.ADDRESS_VALUES.OFFICE_PHONE_NO ),TRIM(A.ADDRESS_VALUES.I.RESIDENCE_PHONE_NO )),A.ADDRESS_VALUES.MOBILE_NO  ),1,20) 
  SELECT SUBSTR(NVL(NVL(TRIM(A.ADDRESS_VALUES.OFF_PHONE_NO ),TRIM(A.ADDRESS_VALUES.RES_PHONE_NO)),A.ADDRESS_VALUES.MOB_PHONE_NO ),1,20)  
  INTO LV_V_TEL_NO
   FROM S3G_ORG_CUSTOMERADDRESS A , S3G_ORG_CUSTMASTER B 
  WHERE A.CUSTOMER_ID = B.CUSTOMER_ID
    and B.CUSTOMER_CODE = IV_V_CUSTOMER_CODE
    AND A.ADDRESS_TYPE = LV_N_ADDRESS_TYPE_CODE  
    AND ROWNUM < 2;
    
   Return LV_V_TEL_NO;
Exception
   WHEN OTHERS
   THEN
      LV_V_TEL_NO := NULL;
      Return LV_V_TEL_NO;
End DF_V_CBO_ADDRESS_TEL_NO;



Function DF_V_CBO_ADDRESS_POSTAL_CODE (IV_N_ADDRESS_NUMBER IN NUMBER, IV_V_CUSTOMER_CODE IN VARCHAR2) Return VARCHAR2
IS
   LV_N_ADDRESS_TYPE_CODE   NUMBER;
   LV_V_POSTAL_CODE         VARCHAR2 (500);
BEGIN 
      BEGIN
        IF IV_N_ADDRESS_NUMBER    = 1 THEN
           LV_N_ADDRESS_TYPE_CODE := 2; --LV_N_ADDRESS_TYPE_CODE := 1;
        ELSE
           LV_N_ADDRESS_TYPE_CODE := 1; --LV_N_ADDRESS_TYPE_CODE := 2;
        END IF;
        
        SELECT A.ADDRESS_VALUES.POSTAL_CODE -- Postal code
          INTO LV_V_POSTAL_CODE
          FROM S3G_ORG_CUSTOMERADDRESS A ,
               S3G_ORG_CUSTMASTER B
        WHERE A.CUSTOMER_ID = B.CUSTOMER_ID
          AND B.CUSTOMER_CODE = IV_V_CUSTOMER_CODE
          AND A.ADDRESS_TYPE  = LV_N_ADDRESS_TYPE_CODE
          AND ROWNUM          < 2;
      EXCEPTION
      WHEN OTHERS THEN
          LV_V_POSTAL_CODE := '112';
      END ;
IF LV_V_POSTAL_CODE    = '100' THEN 
   LV_V_POSTAL_CODE   := '112';
ELSIF LV_V_POSTAL_CODE = '102' THEN    
   LV_V_POSTAL_CODE   := '112';
ELSIF LV_V_POSTAL_CODE = '400' THEN   
   LV_V_POSTAL_CODE   := '411';
ELSIF LV_V_POSTAL_CODE IS NULL THEN   
   LV_V_POSTAL_CODE   := '112';   
END IF;
  Return LV_V_POSTAL_CODE;       
End DF_V_CBO_ADDRESS_POSTAL_CODE;

Function DF_V_CBO_ADDRESS_LINE_3 (IV_N_ADDRESS_NUMBER   IN   NUMBER,IV_V_CUSTOMER_CODE    IN   VARCHAR2) Return VARCHAR2
IS
   LV_N_ADDRESS_TYPE_CODE   NUMBER;
   LV_V_LINE_3              VARCHAR2 (500);
Begin
   If IV_N_ADDRESS_NUMBER = 1
   THEN
      LV_N_ADDRESS_TYPE_CODE := 1;
   ELSE
         LV_N_ADDRESS_TYPE_CODE := 2;
   End If;
   /*
   SELECT
   SUBSTR(
   DECODE(A.ADDRESS_VALUES.column8_l , NULL, NULL,A.ADDRESS_VALUES.column8_l || ',') ||
   DECODE(A.ADDRESS_VALUES.column9_l , NULL, NULL,A.ADDRESS_VALUES.column9_l || ',') ||
   DECODE(A.ADDRESS_VALUES.column10_l , NULL, NULL,A.ADDRESS_VALUES.column10_l || ','),1,50)
  */
   SELECT
   SUBSTR(
   DECODE(A.ADDRESS_VALUES.CONTACT_NO , NULL, NULL,A.ADDRESS_VALUES.CONTACT_NO || ',') ||
   DECODE(A.ADDRESS_VALUES.ADD_LINE_9 , NULL, NULL,A.ADDRESS_VALUES.ADD_LINE_9 || ',') ||
   DECODE(A.ADDRESS_VALUES.ADD_LINE_10 , NULL, NULL,A.ADDRESS_VALUES.ADD_LINE_10 || ','),1,50)
   INTO LV_V_LINE_3
          FROM S3G_ORG_CUSTOMERADDRESS A ,
               S3G_ORG_CUSTMASTER B
        WHERE A.CUSTOMER_ID = B.CUSTOMER_ID
          AND B.CUSTOMER_CODE = IV_V_CUSTOMER_CODE
          AND A.ADDRESS_TYPE  = LV_N_ADDRESS_TYPE_CODE
          AND ROWNUM    < 2;


If trim(LV_V_LINE_3) IS NOT NULL THEN
   LV_V_LINE_3 := trim(LV_V_LINE_3);
   LV_V_LINE_3 := SUBSTR(LV_V_LINE_3,1,LENGTH(LV_V_LINE_3)-1);
End If;
         Return (REPLACE(LV_V_LINE_3,CHR(10), ' '));
Exception
   WHEN OTHERS
   THEN
      LV_V_LINE_3 := NULL;
      Return LV_V_LINE_3;
End DF_V_CBO_ADDRESS_LINE_3;

Function DF_V_CBO_ADDRESS_LINE_2 (IV_N_ADDRESS_NUMBER   IN   NUMBER,IV_V_CUSTOMER_CODE    IN   VARCHAR2) Return VARCHAR2
IS
   LV_N_ADDRESS_TYPE_CODE   NUMBER;
   LV_V_LINE_2              VARCHAR2 (500);
Begin
   If IV_N_ADDRESS_NUMBER = 1
   THEN
      LV_N_ADDRESS_TYPE_CODE := 1;
   ELSE
         LV_N_ADDRESS_TYPE_CODE := 2;
   End If;
   /*
   SELECT    SUBSTR(
   DECODE(A.ADDRESS_VALUES.column4_l , NULL, NULL,A.ADDRESS_VALUES.column4_l || ',') ||
   DECODE(A.ADDRESS_VALUES.column5_l , NULL, NULL,A.ADDRESS_VALUES.column5_l || ',') ||
   DECODE(A.ADDRESS_VALUES.column6_l , NULL, NULL,A.ADDRESS_VALUES.column6_l || ',') ||
   DECODE(A.ADDRESS_VALUES.column7_l , NULL, NULL,A.ADDRESS_VALUES.column7_l || ',')
   ,1,50)  --Line2
   */

   SELECT    SUBSTR(
   DECODE(A.ADDRESS_VALUES.HOUSE_NO , NULL, NULL,A.ADDRESS_VALUES.HOUSE_NO || ',') ||
   DECODE(A.ADDRESS_VALUES.BLOCK_NO , NULL, NULL,A.ADDRESS_VALUES.BLOCK_NO || ',') ||
   DECODE(A.ADDRESS_VALUES.LAND_MARK , NULL, NULL,A.ADDRESS_VALUES.LAND_MARK || ',') ||
   DECODE(A.ADDRESS_VALUES.AREA_SHEIK , NULL, NULL,A.ADDRESS_VALUES.AREA_SHEIK || ',')
   ,1,50)  --Line2
    INTO LV_V_LINE_2
          FROM S3G_ORG_CUSTOMERADDRESS A ,
               S3G_ORG_CUSTMASTER B
        WHERE A.CUSTOMER_ID = B.CUSTOMER_ID
          AND B.CUSTOMER_CODE = IV_V_CUSTOMER_CODE
          AND A.ADDRESS_TYPE  = LV_N_ADDRESS_TYPE_CODE
          AND ROWNUM          < 2;
          
If trim(LV_V_LINE_2) IS NOT NULL THEN
   LV_V_LINE_2 := trim(LV_V_LINE_2);
   LV_V_LINE_2 := SUBSTR(LV_V_LINE_2,1,LENGTH(LV_V_LINE_2)-1);
End If;
         Return (REPLACE(LV_V_LINE_2,CHR(10), ' '));
Exception
   WHEN OTHERS
   THEN
      LV_V_LINE_2 := NULL;
      Return (REPLACE(LV_V_LINE_2,CHR(10), ' '));
End DF_V_CBO_ADDRESS_LINE_2;

Function DF_V_CBO_EMPLOYER_NAME (IV_V_CUST_CODE IN VARCHAR2) Return VARCHAR2
IS
   LV_V_EMPLOYER_NAME  VARCHAR2(1000);
   Lv_V_Employer_Code  VARCHAR2(20);
   Lv_n_Employee_Type  NUMBER;
Begin
   Begin
        SELECT MFC_EMPLOYEE_ID
        INTO   Lv_n_Employee_Type
        FROM   S3G_ORG_CUSTMASTER
        WHERE  CUSTOMER_CODE = Iv_v_Cust_code;
   Exception
       WHEN OTHERS THEN
           Return NULL;
   End;
   If Lv_n_Employee_Type = 1 THEN
       LV_V_EMPLOYER_NAME:='Muscat Finance Company';
   ELSE
       Begin       
       Select SUBSTR(trim(ENTITY_NAME),1,100)
        INTO LV_V_EMPLOYER_NAME
         from S3G_ORG_ENTITYMASTER A , S3G_ORG_CUSTMASTER B
        WHERE A.ENTITY_TYPE = '39' 
          AND A.ENTITY_ID   = B.EMPLOYER_NAME
          AND B.CUSTOMER_CODE = Iv_v_Cust_code;     
       
       Exception
           WHEN OTHERS THEN
               Return NULL;
       End;       
   End If;
   Return LV_V_EMPLOYER_NAME;
Exception
      WHEN OTHERS THEN
         Return NULL;
End DF_V_CBO_EMPLOYER_NAME;

Function DF_V_CBO_EMP_TYPE(IV_V_CUSTOMER_CODE VARCHAR2) Return VARCHAR2 IS
LV_N_EMP_TYPE NUMBER:=0;
Begin
   Begin
   SELECT OCCUPATION
   INTO   Lv_n_Emp_type
   FROM   S3G_ORG_CUSTMASTER
   WHERE  CUSTOMER_CODE=IV_V_CUSTOMER_CODE ;
   
   Exception
          WHEN OTHERS THEN
               Lv_N_Emp_type :=0;
   End;
   If  Lv_n_Emp_type = 3 THEN
          Return '001';
   Elsif Lv_n_emp_type IN(1,6) THEN 
          Return '002';
   ELSE       
         Return '002'; 
   End If;
End DF_V_CBO_EMP_TYPE;

Function DF_V_CBO_EMP_PROFESSION(Iv_v_Customer_code VARCHAR2) Return VARCHAR2 IS
Lv_v_Profession VARCHAR2(100);
Begin
     Begin
       SELECT UPPER (NAME )
       INTO   Lv_v_Profession
       FROM   S3G_ORG_CUSTMASTER A  , S3G_ORG_Lookup  b            
       WHERE  A.CUSTOMER_CODE    =   IV_V_CUSTOMER_CODE
         and  b.TYPE             =   'OCCUPATION'
         and  B.VALUE            = A.OCCUPATION ;
     
       Exception
              WHEN OTHERS THEN
                   Lv_v_Profession :=NULL;
     End;
     Return Lv_v_Profession;
End DF_V_CBO_EMP_PROFESSION;

Function DF_V_CBO_DATE_HIRED(Iv_v_Customer_Code VARCHAR2) Return DATE IS
Lv_d_Hire_Date DATE;
Begin
     Begin
        SELECT TO_DATE(DATE_OF_JOIN,'DD/MM/RRRR')
        INTO   Lv_d_Hire_Date
        FROM   S3G_ORG_CUSTMASTER
        WHERE  CUSTOMER_CODE=IV_V_CUSTOMER_CODE ;
     Exception
               WHEN OTHERS THEN
                     Lv_d_hire_date:=NULL;
     End;
     Return Lv_d_Hire_Date;
End DF_V_CBO_DATE_HIRED;

Function DF_N_CBO_ANNUAL_INCOME (IV_V_CONTRACT_NUMBER   IN   VARCHAR2) Return NUMBER IS
   LV_N_ANNUAL_INCOME NUMBER;
   LV_N_AST_CAT_CODE  NUMBER;
   LV_N_TOT_INST_AMT  NUMBER;
   LV_N_NO_INST       NUMBER;
   LV_N_product_ID       NUMBER;
Begin
    
    SELECT PRODUCT_ID INTO LV_N_product_ID 
     FROM S3G_LAD_ACCCREATION 
     WHERE PANUM = IV_V_CONTRACT_NUMBER ;
     
      If LV_N_product_ID= 1 THEN -- For vehical Schedule B value
      
          select sum(repay.INSTALLMENTAMOUNT + nvl(repayextn.INSTALMENT_AMOUNT,0))
            INTO LV_N_ANNUAL_INCOME
            from  S3G_LAD_ACCPASADET b
           inner join S3G_LAD_ACCREPAYSTRUCT repay on repay.PA_SA_REF_ID=b.PA_SA_REF_ID
            left join S3G_LAD_ACCREPAYSTRUCT_extn repayextn 
              on (repayextn.PA_SA_REF_ID=b.PA_SA_REF_ID and repayextn.CASHFLOW_FLAG_ID=108 and repay. INSTALLMENT_NO=repayextn.INSTALMENT_NO)
            WHERE B.PANUM = IV_V_CONTRACT_NUMBER; 
       
     Elsif LV_N_product_ID= 2 THEN  --For Non-vehical Avg Instment Amount*6
     select sum(repay.INSTALLMENTAMOUNT + nvl(repayextn.INSTALMENT_AMOUNT,0)) , count (REPAY.INSTALLMENT_NO)
            INTO LV_N_TOT_INST_AMT,LV_N_NO_INST
            from  S3G_LAD_ACCPASADET b
           inner join S3G_LAD_ACCREPAYSTRUCT repay on repay.PA_SA_REF_ID=b.PA_SA_REF_ID
            left join S3G_LAD_ACCREPAYSTRUCT_extn repayextn 
              on (repayextn.PA_SA_REF_ID=b.PA_SA_REF_ID and repayextn.CASHFLOW_FLAG_ID=108 and repay. INSTALLMENT_NO=repayextn.INSTALMENT_NO)
            WHERE B.PANUM = IV_V_CONTRACT_NUMBER ;
           
           LV_N_ANNUAL_INCOME:=(LV_N_TOT_INST_AMT/LV_N_NO_INST)*6;
           
     ELSE                   -- For Home Plan Schedule B*6
     
          select (sum(repay.INSTALLMENTAMOUNT + nvl(repayextn.INSTALMENT_AMOUNT,0)))*6
            INTO LV_N_ANNUAL_INCOME
            from  S3G_LAD_ACCPASADET b
           inner join S3G_LAD_ACCREPAYSTRUCT repay on repay.PA_SA_REF_ID=b.PA_SA_REF_ID
            left join S3G_LAD_ACCREPAYSTRUCT_extn repayextn 
              on (repayextn.PA_SA_REF_ID=b.PA_SA_REF_ID and repayextn.CASHFLOW_FLAG_ID=108 and repay. INSTALLMENT_NO=repayextn.INSTALMENT_NO)
            WHERE B.PANUM = IV_V_CONTRACT_NUMBER; 
           
     End If;
     Return ROUND(LV_N_ANNUAL_INCOME);
Exception
   WHEN OTHERS THEN
      LV_N_ANNUAL_INCOME := 0;
      Return LV_N_ANNUAL_INCOME;
End DF_N_CBO_ANNUAL_INCOME;

Function Df_V_Cbo_Cr_Issue_Date(IV_V_CUST_CODE IN VARCHAR2) Return DATE
  IS
    LV_D_CR_ISSUE_DATE   DATE;
Begin

  SELECT TO_DATE(NID_CR_RID_ISSUE_DATE,'DD/MM/YYYY')
   INTO LV_D_CR_ISSUE_DATE
   FROM S3G_ORG_CUSTMASTER
  WHERE CUSTOMER_CODE = IV_V_CUST_CODE ; 
      
  Return LV_D_CR_ISSUE_DATE;
Exception
   WHEN OTHERS THEN
    Return NULL;
End Df_V_Cbo_Cr_Issue_Date;

Function DF_V_CBO_NAT_OF_INST(IV_V_CONSTITUTION_CODE IN NUMBER)Return VARCHAR2
IS
LV_N_CONST_CODE NUMBER := IV_V_CONSTITUTION_CODE;
BEGIN

/*  SSL 
--    If LV_N_CONST_CODE = 4 THEN
--       Return '002';
--    Elsif LV_N_CONST_CODE = 2 THEN
--        Return '001';
--    Elsif LV_N_CONST_CODE = 3 THEN
--        Return '003';
--    Elsif LV_N_CONST_CODE = 70 THEN
--        Return '004';
--    Elsif LV_N_CONST_CODE = 71 THEN
--        Return '009';
--    Elsif LV_N_CONST_CODE = 72 THEN
--        Return '006';
--    Elsif LV_N_CONST_CODE = 1 THEN  --PATCHED HERE FOR MFC-428 ON 23-DEC-2010
--        Return NULL ;
--    ELSE
--        Return '013';
--    End If;

*/
  
  -- S3G
   -- If LV_N_CONST_CODE = 4 THEN
    If LV_N_CONST_CODE = 7 THEN
       Return '002';
    -- Elsif LV_N_CONST_CODE = 2 THEN
    Elsif LV_N_CONST_CODE = 6 THEN
        Return '001';
    --Elsif LV_N_CONST_CODE = 3 THEN    
    Elsif LV_N_CONST_CODE = 8 THEN
        Return '003';
    --Elsif LV_N_CONST_CODE = 70 THEN
    Elsif LV_N_CONST_CODE = 9 THEN
        Return '004';
    -- Elsif LV_N_CONST_CODE = 71 THEN        
    Elsif LV_N_CONST_CODE = 3 THEN
        Return '009';
    Elsif LV_N_CONST_CODE = 4 THEN        
    --Elsif LV_N_CONST_CODE = 72 THEN
        Return '006';
    --Elsif LV_N_CONST_CODE = 1 THEN  
    Elsif LV_N_CONST_CODE = 5 THEN  
        Return NULL ;
    ELSE
        RETURN '013';
    End If;


End DF_V_CBO_NAT_OF_INST;


Function DF_V_CBO_ECONOMIC_ACTIVITY(IV_V_CUSTOMER_CODE VARCHAR2)Return VARCHAR2 IS
LV_V_ECON_CODE                   VARCHAR2(3) := NULL;
LV_V_ECONOMIC_CODE           VARCHAR2(3) := NULL;
Begin
    
       SELECT VALUE
        INTO   LV_V_ECON_CODE
       FROM   S3G_ORG_CUSTMASTER A  , S3G_ORG_Lookup  b            
       WHERE  A.CUSTOMER_CODE    =   IV_V_CUSTOMER_CODE
         and  b.TYPE             =   'INDUSTRY_TYPE'
         and  B.VALUE            = A.INDUSTRY_ID ;

    If LV_V_ECON_CODE IN ('7','8') THEN
       LV_V_ECONOMIC_CODE := '001';
    Elsif LV_V_ECON_CODE = '3' THEN
       LV_V_ECONOMIC_CODE := '002';
    Elsif LV_V_ECON_CODE = '4' THEN
       LV_V_ECONOMIC_CODE := '003';
    Elsif LV_V_ECON_CODE = '6' THEN
       LV_V_ECONOMIC_CODE := '005';
    Elsif LV_V_ECON_CODE IN ('5','2','1') THEN
       LV_V_ECONOMIC_CODE := '004';
    Elsif LV_V_ECON_CODE = '9' THEN
       LV_V_ECONOMIC_CODE := '006';
    Elsif LV_V_ECON_CODE = '10' THEN
       LV_V_ECONOMIC_CODE := '007';
    Elsif LV_V_ECON_CODE = '11' THEN
       LV_V_ECONOMIC_CODE := '008';
    Elsif LV_V_ECON_CODE = '12' THEN
       LV_V_ECONOMIC_CODE := '009';
    Elsif LV_V_ECON_CODE = '13' THEN
       LV_V_ECONOMIC_CODE := '010';
    Elsif LV_V_ECON_CODE = '14' THEN
       LV_V_ECONOMIC_CODE := '014';
    Elsif LV_V_ECON_CODE = '15' THEN
       LV_V_ECONOMIC_CODE := '015';
    ELSE
       LV_V_ECONOMIC_CODE := '015';
    End If;
    Return LV_V_ECONOMIC_CODE;
Exception
    WHEN OTHERS THEN
         LV_V_ECONOMIC_CODE := '005'; 
         Return LV_V_ECONOMIC_CODE;
End DF_V_CBO_ECONOMIC_ACTIVITY;

Function DF_V_CBO_SECURITY_TYPE(IV_V_APPL_NUMBER IN VARCHAR2, IV_V_ASSET_CONTRACT_REF_SLNO IN NUMBER) Return VARCHAR2
  IS
 LV_V_SECURITY_TYPE VARCHAR(3);
BEGIN


     SELECT LPAD(D.SECURITY_TYPE,3,'0')
      INTO LV_V_SECURITY_TYPE
       FROM S3G_LAD_ACCPASADET A ,
            S3G_LAD_ACCASTDET B , 
            S3G_LAD_ACCCREATION C ,
            S3G_ORG_APPPROCASSETDET D,
            S3G_ORG_APPPROC E 
      WHERE   A.PANUM                 = C.PANUM
      AND     C.APPLICATION_PROCESS_ID  = D.APPLICATION_PROCESS_ID
      AND     D.APPLICATION_PROCESS_ID  = E.APPLICATION_PROCESS_ID 
      AND     E.APPLICATION_NUMBER      = IV_V_APPL_NUMBER
      --> AND A.PANUM                 = 'HON046080'
      AND B.ASSET_ID                = D.ASSET_ID
      AND B.REF_SLNO                = IV_V_ASSET_CONTRACT_REF_SLNO
      AND B.PA_SA_REF_ID = A.PA_SA_REF_ID;
/*
   SELECT LPAD(SECURITY_TYPE,3,'0')
      INTO LV_V_SECURITY_TYPE
     FROM S3G_ORG_APPPROCASSETDET A,
          S3G_ORG_APPPROC B 
     WHERE A.APPLICATION_PROCESS_ID  = B.APPLICATION_PROCESS_ID 
       AND B.APPLICATION_NUMBER = IV_V_APPL_NUMBER     
       --AND A.ASSET_ID = IV_V_ASSET_CONTRACT_REF_SLNO;
       AND ROWNUM = IV_V_ASSET_CONTRACT_REF_SLNO;
  */     
     /*  
     SELECT LPAD(TYPE_OF_SECURITY,3,'0')
     INTO LV_V_SECURITY_TYPE
     FROM AP_APPLICATION_ASSET_DETAILS
     WHERE ASS_APPLICATION_NUMBER  = IV_V_APPL_NUMBER
     AND ASS_ASSET_CONTRACT_REF_SLNO = IV_V_ASSET_CONTRACT_REF_SLNO;
    */
  Return LV_V_SECURITY_TYPE;  
  
Exception
   WHEN OTHERS THEN
    Return NULL;         
End DF_V_CBO_SECURITY_TYPE;



Function DF_V_CBO_REG_DATE(IV_V_REF_NUMBER IN VARCHAR2,IV_V_ASSET_NO IN VARCHAR2) Return VARCHAR2
  IS
 LV_D_REG_DATE DATE;
Begin
BEGIN 
Select MIN (B.REGISTRATION_DATE)
  INTO LV_D_REG_DATE
 from S3G_LAD_ASTIDENTIFICTN A , 
      S3G_LAD_ASTIDENTIFICTN_DET B ,
      S3G_LAD_ACCPASADET C
WHERE A.ASSET_IDENTIFICATION_ID = B.ASSET_IDENTIFICATION_ID
  AND A.PA_SA_REF_ID = C.PA_SA_REF_ID
  AND C.PANUM        = IV_V_REF_NUMBER
  AND NVL(B.ASSET_NUMBER,0) = NVL(IV_V_ASSET_NO,0);
    /*
     SELECT MIN(START_DATE)
     INTO LV_D_REG_DATE
     FROM CC_ASSET_REGISTRATION_DTLS
     WHERE CONTRACT_NUMBER = IV_V_REF_NUMBER
     AND ASSET_NUMBER = IV_V_ASSET_NO;
    */ 
    Exception
    WHEN OTHERS THEN
     LV_D_REG_DATE := NULL;
    End;
  
  Return LV_D_REG_DATE;

Exception
   WHEN OTHERS THEN
    Return NULL;
End DF_V_CBO_REG_DATE;

Function DF_V_CBO_SECURITY_PERCENT(IV_V_REF_NUMBER IN VARCHAR2,IV_V_ASSET_NO IN VARCHAR2,
                                   IV_D_REPORT_DATE IN DATE, IV_V_ASSET_MASTER_CODE IN VARCHAR2,
                                   IV_D_AGREEMENT_DATE IN DATE) Return VARCHAR2
  IS
 LV_D_REG_DATE              DATE;
 LV_N_SECURITY_PERCENT      NUMBER;
 LV_N_ASSET_CATEGORY_CODE   NUMBER;
Begin
    Begin
        Select MIN (B.REGISTRATION_DATE)
          INTO LV_D_REG_DATE
          from S3G_LAD_ASTIDENTIFICTN A , 
               S3G_LAD_ASTIDENTIFICTN_DET B ,
               S3G_LAD_ACCPASADET C
        WHERE A.ASSET_IDENTIFICATION_ID = B.ASSET_IDENTIFICATION_ID
        AND A.PA_SA_REF_ID = C.PA_SA_REF_ID
        AND C.PANUM        = IV_V_REF_NUMBER
         AND NVL(B.ASSET_NUMBER,0) = NVL(IV_V_ASSET_NO,0);
    /*
     SELECT MIN(START_DATE)
     INTO LV_D_REG_DATE
     FROM CC_ASSET_REGISTRATION_DTLS
     WHERE CONTRACT_NUMBER = IV_V_REF_NUMBER
     AND ASSET_NUMBER = IV_V_ASSET_NO;
    */  
    Exception
    WHEN OTHERS THEN
     LV_D_REG_DATE := NULL;
    End;
    Begin
      SELECT ASSETTYPE_ID
        INTO LV_N_ASSET_CATEGORY_CODE
        FROM S3G_ORG_ASSETMASTER
       WHERE ASSET_ID = IV_V_ASSET_MASTER_CODE;
    Exception
      WHEN OTHERS THEN
         LV_N_ASSET_CATEGORY_CODE := NULL;
    End;
    --If LV_D_REG_DATE Is Not Null Then
       SELECT 100 - (ROUND((MONTHS_BETWEEN(IV_D_REPORT_DATE,NVL(LV_D_REG_DATE,IV_D_AGREEMENT_DATE)))/12)-1)*DECODE(LV_N_ASSET_CATEGORY_CODE,93,20,20)
         INTO LV_N_SECURITY_PERCENT
       FROM DUAL;
    --End If;

    If LV_N_SECURITY_PERCENT > 100 THEN
    Return 100;
    Elsif LV_N_SECURITY_PERCENT < 0 THEN
    Return 0;
    ELSE
    Return LV_N_SECURITY_PERCENT;
    End If;

Exception
   WHEN OTHERS THEN
    Return NULL;
End DF_V_CBO_SECURITY_PERCENT;


Function DF_V_CBO_ASSET_USAGE(IV_V_MASTER_CODE IN VARCHAR2) Return VARCHAR2
IS
LV_V_ASSET_USAGE VARCHAR2(3);
Begin 
      SELECT DECODE(CLASS_ID ,836,'001',348,'002','001')
        INTO LV_V_ASSET_USAGE
        FROM S3G_ORG_ASSETMASTER
       WHERE ASSET_ID = IV_V_MASTER_CODE;

/*
 SELECT DECODE(AMD_ASSET_LEVEL_STRING,10,'001',11,'002','001') -- Added  by Sudeesh on 05-Apr-2014
  INTO LV_V_ASSET_USAGE
 FROM SA_ASSET_MASTER_DETAILS
 WHERE AMD_ASSET_DEF_CODE = 1
  AND AMD_ASSET_MASTER_CODE = IV_V_MASTER_CODE;
*/
 Return LV_V_ASSET_USAGE;
Exception
 WHEN OTHERS THEN
  LV_V_ASSET_USAGE := '001';--NULL;
  Return LV_V_ASSET_USAGE;
END;

Function DF_V_CBO_SUIT_STATUS(IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_REPORT_DATE IN DATE)Return VARCHAR2
IS
LV_N_STATUS_CODE NUMBER;
Begin

          SELECT CASE_STATUS
          INTO   LV_N_STATUS_CODE
          FROM   S3G_LR_CASEMASTER  A
          WHERE  A.PANUM = IV_V_CONTRACT_NUMBER
          AND    Fir_Status IN (1,2,3,4,5,6,7,8,9)
          AND    A.CASE_ID = (SELECT MAX(CASE_ID)
                               FROM   S3G_LR_CASEMASTER B
                                WHERE  FIR_STATUS IN (1,2,3,4,5,6,7,8,9)
                                 AND   B.PANUM = IV_V_CONTRACT_NUMBER
                                 and   B.PANUM = A.PANUM
                               )
          AND    ROWNUM<2;


        /*
        Begin
          SELECT STATUS_CODE
            INTO LV_N_STATUS_CODE
         FROM   S3G_LR_CASEMASTER A,
                 SA_ROP_STATUS_DIR C
         WHERE   Status_code   = Fir_status
         AND     Fir_Status IN (1,2,3,4,5,6,7,8,9)
         AND     Rop_Case_Number   = (SELECT MAX(Rop_Case_Number)
                                        FROM CC_ROP_CASE_DETAILS
                                            WHERE  Fir_Status IN (1,2,3,4,5,6,7,8,9)
                                               AND    Contract_number = IV_V_CONTRACT_NUMBER)
                 AND    Contract_Number  = IV_V_CONTRACT_NUMBER;

        Exception
         WHEN OTHERS THEN
            LV_N_STATUS_CODE := NULL;
        End;
     
    If LV_N_STATUS_CODE IS NULL THEN
      Begin
        SELECT Status
        INTO LV_N_STATUS_CODE
        FROM CC_ROP_STAGE_DTLS
        WHERE case_id = (SELECT MAX(case_Id) FROM  CC_ROP_COURT_CASE_DETAILS
                                             WHERE CONTRACT_NUMBER = IV_V_CONTRACT_NUMBER)
          AND ROWID = (SELECT MAX(ROWID) FROM CC_ROP_STAGE_DTLS
                       WHERE case_id = (SELECT MAX(case_Id) FROM  CC_ROP_COURT_CASE_DETAILS
                                        WHERE CONTRACT_NUMBER = IV_V_CONTRACT_NUMBER));
      Exception
       WHEN OTHERS THEN
         LV_N_STATUS_CODE := NULL;

      End;
     End If;
     */
    

    If LV_N_STATUS_CODE = 1 THEN
       Return '001';
    Elsif LV_N_STATUS_CODE = 3 THEN
        Return '007';
    Elsif LV_N_STATUS_CODE = 4 THEN
        Return '002';
    Elsif LV_N_STATUS_CODE IN (5,9,10,11,12) THEN
        Return '003';
    Elsif LV_N_STATUS_CODE = 7 THEN
        Return '006';
    Elsif LV_N_STATUS_CODE = 6 THEN
        Return '008';
    Elsif LV_N_STATUS_CODE = 2 THEN
        Return '005';
    ELSE
        Return NULL;
    End If;
Exception
    WHEN OTHERS THEN
         Return NULL;
End DF_V_CBO_SUIT_STATUS;

Function DF_N_CBO_SUIT_AMT(IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_REPORT_DATE IN DATE)Return NUMBER
IS
LV_N_SUIT_AMT NUMBER;
Begin
SELECT FIR_COST
INTO   LV_N_SUIT_AMT
FROM   S3G_LR_CASEMASTER  A
WHERE  A.PANUM = IV_V_CONTRACT_NUMBER
AND    A.CASE_ID = (SELECT MAX(CASE_ID)
                               FROM   S3G_LR_CASEMASTER B
                            WHERE  B.PANUM = PANUM)
AND    ROWNUM<2;
    If LV_N_SUIT_AMT > 0 THEN
        Return ROUND(LV_N_SUIT_AMT);
    ELSE
        Return 0;
    End If;
Exception
    WHEN OTHERS THEN
         LV_N_SUIT_AMT := NULL;
         Return LV_N_SUIT_AMT;
End DF_N_CBO_SUIT_AMT;


Function DF_V_CBO_SUIT_REF_NUMBER(IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_REPORT_DATE IN DATE)Return VARCHAR2
IS
LV_V_CASE_NO VARCHAR2(100);
Begin
    SELECT SUBSTR(COURT_NUMBER,1,16)
            INTO LV_V_CASE_NO
    FROM S3G_LR_CASEMASTER  A
    WHERE A.PANUM = IV_V_CONTRACT_NUMBER
    AND A.CASE_ID = (SELECT MAX(CASE_ID)
                     FROM S3G_LR_CASEMASTER B
                     WHERE B.PANUM = IV_V_CONTRACT_NUMBER
                    );
    Return LV_V_CASE_NO;
Exception
    WHEN OTHERS THEN
         Return NULL;
End DF_V_CBO_SUIT_REF_NUMBER;

Function DF_V_CBO_CREDIT_PURPOSE(IV_V_CUSTOMER_CODE VARCHAR2)Return VARCHAR2 IS
LV_V_PURPOSE_CODE           VARCHAR2(3) := NULL;
LV_V_PURPOSE_VALUE            VARCHAR2(3) := NULL;
Begin

       SELECT VALUE
        INTO  LV_V_PURPOSE_VALUE
       FROM   S3G_ORG_CUSTMASTER A  , S3G_ORG_Lookup  b            
       WHERE  A.CUSTOMER_CODE    =   IV_V_CUSTOMER_CODE
         and  b.TYPE             =   'INDUSTRY_TYPE'
         and  B.VALUE            = A.INDUSTRY_ID ;

    If LV_V_PURPOSE_VALUE = '7' THEN
       LV_V_PURPOSE_CODE := '001';
    Elsif LV_V_PURPOSE_VALUE = '8' THEN
       LV_V_PURPOSE_CODE := '002';
    Elsif LV_V_PURPOSE_VALUE = '6' THEN
       LV_V_PURPOSE_CODE := '003';
    Elsif LV_V_PURPOSE_VALUE = '17' THEN
       LV_V_PURPOSE_CODE := '004';
    Elsif LV_V_PURPOSE_VALUE = '5' THEN
       LV_V_PURPOSE_CODE := '006';
    Elsif LV_V_PURPOSE_VALUE = '4' THEN
       LV_V_PURPOSE_CODE := '007';
    Elsif LV_V_PURPOSE_VALUE = '3' THEN
       LV_V_PURPOSE_CODE := '008';
    Elsif LV_V_PURPOSE_VALUE = '9' THEN
       LV_V_PURPOSE_CODE := '009';
    Elsif LV_V_PURPOSE_VALUE = '10' THEN
       LV_V_PURPOSE_CODE := '010';
    Elsif LV_V_PURPOSE_VALUE = '11' THEN
       LV_V_PURPOSE_CODE := '011';
    Elsif LV_V_PURPOSE_VALUE = '12' THEN
       LV_V_PURPOSE_CODE := '012';
    Elsif LV_V_PURPOSE_VALUE = '13' THEN
       LV_V_PURPOSE_CODE := '013';
    Elsif LV_V_PURPOSE_VALUE = '14' THEN
       LV_V_PURPOSE_CODE := '014';
    Elsif LV_V_PURPOSE_VALUE = '15' THEN
       LV_V_PURPOSE_CODE := '015';
    Elsif LV_V_PURPOSE_VALUE = '1' THEN
       LV_V_PURPOSE_CODE := '016';
    Elsif LV_V_PURPOSE_VALUE = '2' THEN
       LV_V_PURPOSE_CODE := '017';
    ELSE
       LV_V_PURPOSE_CODE := '018';
    End If;

    Return LV_V_PURPOSE_CODE;

Exception
    WHEN OTHERS THEN
         LV_V_PURPOSE_CODE := NULL;
         Return LV_V_PURPOSE_CODE;
End DF_V_CBO_CREDIT_PURPOSE;


Function Df_V_Cbo_Purpose_Cr_Facility(IV_V_APPL_NUMBER VARCHAR2)Return VARCHAR2
IS
LV_V_ECON_CODE                   VARCHAR2(3) := NULL;
LV_V_ECONOMIC_CODE               VARCHAR2(3) := NULL;

Begin
    Begin
     SELECT LPAD(CREDIT_PURPOSE,3,'0')
       INTO LV_V_ECONOMIC_CODE
      from S3G_ORG_APPPROC      
     WHERE APPLICATION_NUMBER = IV_V_APPL_NUMBER;
    Exception
      WHEN OTHERS THEN
        LV_V_ECONOMIC_CODE := NULL;
    End;
    Return LV_V_ECONOMIC_CODE;
Exception
    WHEN OTHERS THEN
         LV_V_ECONOMIC_CODE := NULL;
         Return LV_V_ECONOMIC_CODE;
End Df_V_Cbo_Purpose_Cr_Facility;

Function DF_D_CBO_DATE_ADJUDICATED(IV_V_REFERENCE_NUMBER IN VARCHAR2,IV_D_REPORT_DATE IN DATE)Return DATE
IS
   LV_D_ORDER_RECD_DATE   S3G_LR_CASEMASTER.COURT_ORD_DATE%Type;
Begin
   SELECT COURT_ORD_DATE
     INTO LV_D_ORDER_RECD_DATE
     FROM S3G_LR_CASEMASTER A    
    WHERE  A.PANUM = IV_V_REFERENCE_NUMBER
    AND    A.CASE_ID = (SELECT MAX(CASE_ID)
                        FROM   S3G_LR_CASEMASTER B
                      WHERE  B.PANUM = IV_V_REFERENCE_NUMBER)
--    AND EXISTS (SELECT 1 FROM S3G_LR_CASEMASTER D                    
--                  AND  TRUNC(TD_TXN_DATE) = TRUNC(IV_D_REPORT_DATE))
      AND ROWNUM < 2;

   Return LV_D_ORDER_RECD_DATE;
Exception
   WHEN OTHERS
   THEN
      LV_D_ORDER_RECD_DATE := NULL;
      Return LV_D_ORDER_RECD_DATE;
End DF_D_CBO_DATE_ADJUDICATED;

Function DF_D_CBO_GET_DATE_SUIT_FILED(IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_REPORT_DATE IN DATE)Return DATE
IS
LV_D_DATE_SUIT_FILED       DATE;
Begin

SELECT FIR_DATE
INTO LV_D_DATE_SUIT_FILED
FROM   S3G_LR_CASEMASTER A
WHERE  A.PANUM = IV_V_CONTRACT_NUMBER
AND    A.CASE_ID = (SELECT MAX(CASE_ID)
                    FROM   S3G_LR_CASEMASTER B
                    WHERE  B.PANUM = IV_V_CONTRACT_NUMBER)
AND   ROWNUM<2;
    Return LV_D_DATE_SUIT_FILED;
Exception
    WHEN NO_DATA_FOUND THEN
--        Begin
--                 SELECT MIN(STATUS_DATE)
--                 INTO LV_D_DATE_SUIT_FILED
--                 FROM CC_ROP_STAGE_DTLS
--                 WHERE  CASE_ID = (SELECT MAX(case_Id) FROM  CC_ROP_COURT_CASE_DETAILS
--                                WHERE CONTRACT_NUMBER =  IV_V_CONTRACT_NUMBER);
--                 Return LV_D_DATE_SUIT_FILED;
--         Exception
--          WHEN OTHERS THEN
--            Return NULL;
--         End;
null;
---patch ends<<---
    WHEN OTHERS THEN
         LV_D_DATE_SUIT_FILED := NULL;
         Return LV_D_DATE_SUIT_FILED;
End DF_D_CBO_GET_DATE_SUIT_FILED;


Function DF_V_CBO_COURT_LOCATION (IV_V_REFERENCE_NUMBER IN VARCHAR2,IV_D_REPORT_DATE IN DATE)Return VARCHAR2
IS
   LV_V_COURT_LOCATION   S3g_Lr_Courtmaster.COURT_CODE%Type;
Begin
 SELECT SUBSTR(c.COURT_CODE,1,60)
     INTO LV_V_COURT_LOCATION
     FROM S3g_Lr_Casemaster B,S3g_Lr_Courtmaster  C
    WHERE B.PANUM           = IV_V_REFERENCE_NUMBER   
      AND B.COURT_ID        = C.COURT_ID             
      AND B.CASE_ID         = (SELECT MAX (CASE_ID)
                               FROM S3g_Lr_Casemaster C
                              WHERE C.PANUM = IV_V_REFERENCE_NUMBER
/*                   AND EXISTS (SELECT 1
                                  FROM SA_TRANSACTION_DETAILS  D
                                    WHERE C.TXN_ID = D.TD_TXN_ID
                                     AND  TRUNC(TD_TXN_DATE) = TRUNC(IV_D_REPORT_DATE))*/
                          )
      AND ROWNUM < 2;

   Return LV_V_COURT_LOCATION;
Exception
   WHEN OTHERS
   THEN
      LV_V_COURT_LOCATION := NULL;
      Return LV_V_COURT_LOCATION;
End DF_V_CBO_COURT_LOCATION;

Function DF_V_CBO_COURT (IV_V_REFERENCE_NUMBER IN VARCHAR2,IV_D_REPORT_DATE IN DATE)Return VARCHAR2
IS
   LV_V_COURT_LEVEL   S3G_LR_CASEDTL.COURTCATEGORY%Type;
   LV_V_COURT_TYPE    S3G_LR_CASEDTL.COURTCATTYPE%Type;
Begin

   SELECT COURTCATEGORY , COURTCATTYPE
     INTO LV_V_COURT_LEVEL, LV_V_COURT_TYPE
     FROM S3g_Lr_Casemaster B, S3G_LR_CASEDTL  C
    WHERE B.PANUM           = IV_V_REFERENCE_NUMBER   
      AND B.CASE_ID         = C.CASE_ID      
      AND B.CASE_ID         = (SELECT MAX (CASE_ID)
                               FROM S3g_Lr_Casemaster D
                              WHERE D.PANUM = IV_V_REFERENCE_NUMBER ) 
      AND ROWNUM < 2;                        
--select * from S3G_LR_LOOKUPTYPEDTL where lookuptype_code=9;  --court type
--select * from S3G_LR_LOOKUPTYPEDTL where lookuptype_code=8;  --court level
--S3G
--1	CIVIL
--2	COMMERCIAL
--3	CRIMINAL
   
   If LV_V_COURT_LEVEL = 1 THEN  --APPEAL
   
      If LV_V_COURT_TYPE = 2 THEN  --COMMERCIAL
         Return '008';
      Elsif LV_V_COURT_TYPE = 3 THEN --CRIMINAL
         Return '009';    
      Elsif LV_V_COURT_TYPE = 1 THEN -- Appeal -CIVIL
         Return '007';
      End If;     
   Elsif LV_V_COURT_LEVEL = 2 THEN  --HIGH COURT
      If LV_V_COURT_TYPE = 2  THEN --COMMERCIAL
         Return '011';
      Elsif LV_V_COURT_TYPE = 3 THEN --CRIMINAL
         Return '012';
      Elsif LV_V_COURT_TYPE = 1 THEN -- High Court -CIVIL
         Return '010';
      End If;
   Elsif LV_V_COURT_LEVEL = 3 THEN  --PRIMARY
      If LV_V_COURT_TYPE = 2 THEN --COMMERCIAL
         Return '005';
      Elsif LV_V_COURT_TYPE = 3 THEN --CRIMINAL
         Return '006';
      Elsif LV_V_COURT_TYPE = 1 THEN -- Primary -CIVIL
         Return '004';
      End If;
   End If;
   Return NULL;
Exception
   WHEN OTHERS
   THEN
      Return NULL;
End DF_V_CBO_COURT;

Function DF_V_CBO_GROUP_NAME (IV_V_CUSTOMER_GROUP_CODE IN VARCHAR2) Return VARCHAR2
IS
   LV_V_GROUP_NAME   VARCHAR2(100);
Begin
 If IV_V_CUSTOMER_GROUP_CODE IS NOT NULL THEN
   SELECT B.CUST_GROUP_NAME
   INTO   LV_V_GROUP_NAME
   FROM   S3G_OR_CUST_GROUP B
   WHERE  B.CUST_GROUP_ID = IV_V_CUSTOMER_GROUP_CODE;
 End If;
   Return LV_V_GROUP_NAME;
   Exception
      WHEN OTHERS THEN
         Return NULL;
End DF_V_CBO_GROUP_NAME;

Function Df_V_Cbo_Non_Moci(IV_N_CUST_CODE IN VARCHAR2)
Return VARCHAR2  IS
LV_V_NON_MOCI VARCHAR2(30);
Begin

    select NON_MOCI 
     INTO LV_V_NON_MOCI
    from S3G_ORG_CUSTMASTER
    WHERE CUSTOMER_CODE = IV_N_CUST_CODE ;


     
Return LV_V_NON_MOCI;
     Exception
        WHEN OTHERS THEN
        Return NULL;
End  Df_V_Cbo_Non_Moci;


Function DF_N_CBO_PENAL_INTEREST (IV_V_CONTRACT_NUMBER IN VARCHAR2,IV_D_CUTOFF_DATE IN DATE) Return NUMBER
IS
   LV_N_PENAL             NUMBER;
   LV_N_AFC_RATE          NUMBER;
   LV_N_PENAL_INTEREST    NUMBER;
   LV_N_PA_SA_REF_ID      NUMBER;
   LV_N_COMPANY_ID        NUMBER;
   P_CHARTPAGE3_DTL       SYS_REFCURSOR;

Begin

    LV_N_COMPANY_ID := 1;
   Select PA_SA_REF_ID
   INTO LV_N_PA_SA_REF_ID
   FROM S3g_Lad_Accpasadet 
   WHERE PANUM = IV_V_CONTRACT_NUMBER;
   
   BEGIN 
   
   DELETE FROM TMP_ODI_CAL_REPYDT ;
   
   LA_GET_ODI_INST_NL_CAL ( LV_N_PA_SA_REF_ID,LV_N_COMPANY_ID,IV_D_CUTOFF_DATE, P_CHARTPAGE3_DTL);
   
   SELECT  SUM ( NVL(ODI_AMOUNT,0)) ODI_AMOUNT 
     INTO LV_N_PENAL
   FROM    TMP_ODI_CAL_REPYDT 
   WHERE  PA_SA_REF_ID = LV_N_PA_SA_REF_ID;
   
   End;

   Return  LV_N_PENAL;
   
   Exception
      WHEN OTHERS THEN
      LV_N_PENAL := 0;
         Return LV_N_PENAL;
End DF_N_CBO_PENAL_INTEREST;

Function DF_N_CBO_HIGH_TRAN_AMOUNT(IV_V_CONTRACT_NUMBER IN VARCHAR2, IV_D_DATE IN DATE) Return NUMBER
IS
LV_N_HIGH_TRAN_AMT NUMBER:=0;
Begin
   SELECT MAX(TXN_AMOUNT)
   INTO   LV_N_HIGH_TRAN_AMT
   FROM   S3G_JV_HDR HDR , S3G_JV_DET DET 
   WHERE  HDR.ACCOUNT_LINK_KEY = DET.ACCOUNT_LINK_KEY
   AND    DET.REFERENCE_NUMBER = IV_V_CONTRACT_NUMBER
   AND    DET.GL_ACCOUNT_NUMBER = '155'
   AND    DET.CASHFLOW_ID       =  23
   AND    HDR.JV_SEQUENCE_TYPE  = 'REC'
   AND    TXN_AMOUNT   >= 0 
   AND    NVL(HDR.JV_STATUS_CODE,'1') <> '2'
   AND    TO_NUMBER(TO_CHAR(HDR.JV_DATE,'YYYYMM')) = TO_NUMBER(TO_CHAR(IV_D_DATE,'YYYYMM'));
   
   Return ROUND(LV_N_HIGH_TRAN_AMT);
Exception
   WHEN OTHERS THEN
   Return 0;
End DF_N_CBO_HIGH_TRAN_AMOUNT;


Function Df_V_Cbo_interest_type(IV_V_CONTRACT_NUMBER IN VARCHAR2) Return VARCHAR2
IS
LV_V_PRODUCT_CODE NUMBER;
LV_V_SCHEME_type NUMBER;
Begin
    SELECT LOB_ID
     INTO LV_V_PRODUCT_CODE
    FROM   S3g_Lad_Acccreation
    WHERE  PANUM = iv_v_contract_number 
    AND    LOB_ID In (5,6);
    If LV_V_PRODUCT_CODE = 6 THEN
       Return('002');
    ELSE
        Return(NULL);
    End If;
Exception
   WHEN OTHERS THEN
      Return NULL;
End Df_V_Cbo_interest_type;

Function DF_V_CBO_EMP_ECO_CODE(IV_V_CUST_CODE IN VARCHAR2) Return VARCHAR2
  IS
    LV_V_EMP_ECO_CODE   VARCHAR2(3);
Begin
   SELECT LPAD(EMPLOYER_ECO_ACT_CODE,3,'0')
     INTO LV_V_EMP_ECO_CODE
     FROM S3G_ORG_CUSTMASTER
    WHERE CUSTOMER_CODE = IV_V_CUST_CODE;
    
  Return LV_V_EMP_ECO_CODE;
Exception
   WHEN OTHERS THEN
    Return NULL;
End DF_V_CBO_EMP_ECO_CODE;


Procedure Dp_Provision_Details(IV_N_PROCESS_MONTH NUMBER, IV_N_TXN_ID NUMBER) IS
      lv_n_process_month     NUMBER;
      lv_n_txn_id            NUMBER;
      lv_n_session_id        NUMBER;
      lv_v_error_type        VARCHAR2(1);
      lv_v_error_flag        VARCHAR2(1);
      lv_v_error_mesg        VARCHAR2(1000);
Begin
/*Debtpkg00002.dp_process_delinquent(iv_n_process_month     => IV_N_PROCESS_MONTH,
                                   iv_v_contract_number   => NULL,
                                   iv_n_prov_category     => NULL,
                                   iv_n_txn_id            => IV_N_TXN_ID,
                                   ov_n_session_id        => lv_n_session_id,
                                   ov_v_error_type        => lv_v_error_type,
                                   ov_v_error_flag        => lv_v_error_flag,
                                   ov_v_error_mesg        => lv_v_error_mesg);*/
If Lv_v_Error_flag = 'Y' THEN
   Dp_Set_Error('Cbo Dp_Process_Delinquent_:_101'||Sqlerrm);
End If;
End Dp_Provision_Details;

Procedure Dp_Provision_Details_DUP(Iv_v_Profile_Abbr    IN VARCHAR2,
                                 Iv_d_Report_Date     IN DATE,
                               Iv_v_Cont_No            IN VARCHAR2,
                               Ov_n_arrears            Out NUMBER,
                               Ov_N_Income_suspend  Out NUMBER,
                               Ov_N_Net_Exposure    Out NUMBER,
                               Ov_N_prov_Percentage Out NUMBER,
                               Ov_n_addl_prov_rate  Out NUMBER)
IS
Begin
null ;
end DP_PROVISION_DETAILS_DUP;

Procedure Dp_Cbo_Data_Daily(
  iv_v_rep_id       IN       VARCHAR2,
  IV_D_From_DATE IN DATE,
  IV_D_To_DATE IN DATE,
  iv_v_version_no   IN       VARCHAR2,
  ov_v_error_flag   Out      VARCHAR2,
  ov_v_error_type   Out      VARCHAR2,
  ov_v_error_mesg   Out      VARCHAR2,
  ov_v_spoolfile    Out      VARCHAR2
)
IS
    lv_t_file   UTL_FILE.FILE_TYPE;
    lv_v_path  VARCHAR2(100);
    lv_v_fname  VARCHAR2(100);
    LV_V_MOVE_PATH      VARCHAR2(200);
    
Procedure Lp_Fetch_Path(IV_V_REP_ID    IN  VARCHAR2,
                        OV_V_PATH      Out VARCHAR2,
                        OV_V_MOVE_PATH Out VARCHAR2)
IS
Cursor 
cur_file_spool_path IS
SELECT 'BASE_DIR' FROM DUAL;
--SELECT XML_DATA_CREATION_PATH FROM XML_CONFIGURATION_SETUP@S3GLIVEDBMFCLIVE;

Begin
      If cur_file_spool_path%ISOPEN THEN
         Close cur_file_spool_path;
      End If;
      Open cur_file_spool_path;
      Fetch cur_file_spool_path INTO Ov_v_path;

      Close cur_file_spool_path;
End Lp_Fetch_Path;
  Begin


   If iv_v_version_no <> '1.0' THEN
           RAISE_APPLICATION_ERROR(-20001, 'Version Mismatch');
   End If;


    
    Cbopkg00003.DP_CBO_GENERATE_DATA (IV_D_From_DATE , IV_D_To_DATE);
    Lp_Fetch_Path (iv_v_rep_id, lv_v_path, lv_v_move_path);
    lv_v_fname := 'FL640000-CON-'||TO_CHAR(SYSDATE,'DD-Mon-YYYY-HH24MiSS')||'.dlt';
    lv_t_file  := UTL_FILE.FOPEN(lv_v_path,lv_v_fname,'W');

    FOR I IN (
    
        select T.* from ( SELECT
        Seg_Iden || '|' ||
        Data_Prov_id || '|' ||
        TO_CHAR(Rep_date,'dd-Mon-yyyy') || '|' ||
        TO_CHAR(Rep_time,'HH24MiSS') || '|' ||
        TO_CHAR(Dt_Pre_In_file,'dd-Mon-yyyy') || '|' ||
        Data_Avail_Ind || '|' ||
        Nat_Data|| '|' ||IFF_VERSION  var1, 1 ,
        '0'
        FROM CBO_CON_INP_HEADER_DAILY
        UNION ALL
        SELECT
        Seg_Iden || '|' ||
        Data_Prov_id || '|' ||
        Prev_Data_Prov_ID || '|' ||
        Data_Pro_Br_id || '|' ||
        Prev_Data_Pro_Br_id || '|' ||
        Cr_Fac_Type || '|' ||
        Lia_Ind || '|' ||
        Cr_Fac_Acc_No || '|' ||
        Prev_Cr_Fac_Acc_No || '|' ||
        TO_CHAR(Infor_Update_on,'dd-Mon-yyyy') || '|' ||
          TO_CHAR(Time_Infor_Update,'HH24MiSS') || '|' ||
        TO_CHAR(Cr_Fac_Open,'dd-Mon-yyyy') || '|' ||
        Loan_Sanc_Amt || '|' ||
        Loan_Sanc_Cur || '|' ||
        Loan_Sanc_Amt_For_cur || '|' ||
        Auth_Amt || '|' ||
        Loan_tenure || '|' ||
        TO_CHAR(Nat_Loan_Mat_date,'dd-Mon-yyyy') || '|' ||
        Pur_Of_Crd_Fac || '|' ||
        Int_Type || '|' ||
        Int_Rate || '|' ||
        High_Cr || '|' ||
        Exp_Cat || '|' ||
         EXP_REF || '|' ||
        Rsk_Mit || '|' ||
        Rep_Freq || '|' ||
        Rep_Mod || '|' ||
        NO_of_inst || '|' ||
        Inst_Amt || '|' ||
        Loan_Bal || '|' ||
        Loan_Bal_for || '|' ||
        TO_CHAR(Dt_Lst_Amt_Pd,'dd-Mon-yyyy') || '|' ||
        Lst_Amt_Pd || '|' ||
        No_Of_Days_Pst_Due || '|' ||
        Amt_Overdue || '|' ||
        Inst_Overdue || '|' ||
        Ast_Claf || '|' ||
        Cr_Fac_Status || '|' ||
        Cls_Res_code || '|' ||
        TO_CHAR(Cr_Fac_Restruct_dt,'dd-Mon-yyyy') || '|' ||
        Res_for_Restruct || '|' ||
        Bad_Loan_Prov_Amt || '|' ||
        Int_Res_Amt || '|' ||
        Tot_Amt_Wrt_off || '|' ||
        Amt_Wrt_Off_P_L || '|' ||
        Amt_Wrt_Off_Prov || '|' ||
        Amt_Wrt_Off_RS || '|' ||
        Res_for_Amt_Wrt_Off || '|' ||
        TO_CHAR(Cr_Fac_Cl_dt,'dd-Mon-yyyy') || '|' ||
        Rea_For_Clos || '|' ||
        Sec_Cov_Flg || '|' ||
        Tot_Csh_Spnt_Bill_cycle || '|' ||
        Tot_Ret_Spnt_Bill_cycle || '|' ||
        Amt_Disp || '|' ||
        min_Pay_Due || '|' ||
        TO_CHAR(min_Pay_Due_Dt,'dd-Mon-yyyy') || '|' ||
        Lt_fee_Lev_rep_Per || '|' ||
        Hg_Sng_Val_Trans_Bil_Cycle || '|' ||
        Trans_Type_Cd || '|' ||
        Comp_Status || '|' ||
        Comp_Inti_No || '|' ||
        Spl_Cmnts1 || '|' ||
        Spl_Cmnts2, 2,
        Cr_Fac_Acc_No
        FROM CBO_CON_INP_CREDIT_DAILY
        UNION ALL
        SELECT
        Seg_Iden || '|' ||
        Data_Prov_id || '|' ||
        Data_Pro_Br_id || '|' ||
        Cr_Fac_Acc_No || '|' ||
        Sub_Iden_Cd || '|' ||
        Sub_Prev_Iden_Cd || '|' ||
        Sub_Ent_Typ || '|' ||
        Iden_Typ || '|' ||
        Iden_No || '|' ||
        Prev_Iden_No || '|' ||
        TO_CHAR(Iden_No_Exp_Dt,'dd-Mon-yyyy') || '|' ||
        Sub_Name || '|' ||
        Sub_Prev_Name || '|' ||
        Sub_Nat || '|' ||
        TO_CHAR(Dt_Birth,'dd-Mon-yyyy') || '|' ||
        Gender || '|' ||
        Add_Type_1 || '|' ||
        Add_1_Ln_1 || '|' ||
        Add_1_Ln_2 || '|' ||
        Add_1_Ln_3 || '|' ||
        Add_1_Cty || '|' ||
        Add_1_Pos_Cd || '|' ||
        Add_1_Ctry || '|' ||
        Add_1_Tel_No || '|' ||
        Add_Type_2 || '|' ||
        Add_2_Ln_1 || '|' ||
        Add_2_Ln_2 || '|' ||
        Add_2_Ln_3 || '|' ||
        Add_2_Cty || '|' ||
        Add_2_Pos_Cd || '|' ||
        Add_2_Ctry || '|' ||
        Add_2_Tel_No, 3,
        Cr_Fac_Acc_No
        FROM CBO_CON_INP_SUBJECT_DAILY
        UNION ALL
        SELECT
        Seg_Iden || '|' ||
        Data_Prov_id || '|' ||
        Data_Pro_Br_id || '|' ||
        Cr_Fac_Acc_No || '|' ||
        Sub_Iden_Cd || '|' ||
        Emp_typ || '|' ||
        Empr_Name || '|' ||
        Prof || '|' ||
        Empr_Ec_Act_Cd || '|' ||
        TO_CHAR(Dt_Hired,'dd-Mon-yyyy') || '|' ||
        An_Income || '|' ||
        TO_CHAR(Dt_Income,'dd-Mon-yyyy') || '|' ||
        TO_CHAR(Sep_Date,'dd-Mon-yyyy') || '|' ||
        Pay_Basis, 4,
        Cr_Fac_Acc_No
        FROM CBO_CON_INP_EMPLOY_DAILY
        UNION ALL
        SELECT
        Seg_Iden || '|' ||
        Data_Prov_id || '|' ||
        Data_Pro_Br_id || '|' ||
        Cr_Fac_Acc_No || '|' ||
        Sub_Iden_Cd || '|' ||
        Nat_of_Rel_Shp || '|' ||
        Rel_Ent_Type || '|' ||
        Iden_Typ || '|' ||
        Iden_No || '|' ||
        Prev_Iden_No || '|' ||
        TO_CHAR(Iden_No_Exp_Dt,'dd-Mon-yyyy') || '|' ||
        Rel_Ind_Ent_Name || '|' ||
        Rel_Ind_Ent_Prev_Name || '|' ||
        Rel_Ind_Nat || '|' ||
        TO_CHAR(Rel_Ind_Dt_Of_Bir,'dd-Mon-yyyy') || '|' ||
        Rel_Ind_Gen || '|' ||
        Rel_Bus_Ent_Nat_Inst || '|' ||
          EC_ACT_CODE || '|' ||
        Rel_Status || '|' ||
        Add_Typ || '|' ||
        Add_Line_1 || '|' ||
        Add_Line_2 || '|' ||
        Add_Line_3 || '|' ||
        Add_City || '|' ||
        Add_Pos_Cod || '|' ||
        Add_Ctry || '|' ||
        Tel_NO, 5,
        Cr_Fac_Acc_No
        FROM CBO_CON_INP_RELATION_DAILY
        UNION ALL
        SELECT
        Seg_Iden || '|' ||
        Data_Prov_id || '|' ||
        Data_Pro_Br_id || '|' ||
        Cr_Fac_Acc_No || '|' ||
        Typ_of_Sec || '|' ||
        Nat_Of_Change || '|' ||
        TO_CHAR(Dt_Crea_Sec,'dd-Mon-yyyy') || '|' ||
        Sec_Cov_per || '|' ||
        Est_Val_Sec || '|' ||
        TO_CHAR(Dt_Lat_Val,'dd-Mon-yyyy') || '|' ||
        Veh_Vin || '|' ||
        End_Use_Ast || '|' ||
        SEC_IDEN_1_TYP || '|' ||
        nvl(Sec_Iden_1,'A1234') || '|' ||
        Sec_Iden_2_Typ || '|' ||
        Sec_Iden_2, 6,
        Cr_Fac_Acc_No
        FROM CBO_CON_INP_SECURITY_DAILY
        UNION ALL
        SELECT
        Seg_Iden || '|' ||
        Data_Prov_id || '|' ||
        No_Cr_Fac, 7 ,
        '_'
        FROM CBO_CON_INP_TRAILER_DAILY  )T ORDER BY 3,2
        
        )
    Loop
          UTL_FILE.PUT_LINE (lv_t_file, i.VAR1);
    End Loop;    
    UTL_FILE.FCLOSE (lv_t_file);
    
    lv_v_fname := 'FL640000-COR-'||TO_CHAR(SYSDATE,'DD-Mon-YYYY-HH24MiSS')||'.dlt';
    lv_t_file := UTL_FILE.FOPEN (lv_v_path, lv_v_fname, 'W');
    FOR I IN (
    
    
            select T.* from (SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            TO_CHAR(Rep_date,'dd-Mon-yyyy') || '|' ||
            TO_CHAR(Rep_time,'HH24MiSS') || '|' ||
            TO_CHAR(Dt_Pre_In_file,'dd-Mon-yyyy') || '|' ||
            Data_Avail_Ind || '|' ||
            Nat_Data|| '|' ||IFF_VERSION  var1, 1 ,
            '0'
            FROM CBO_COR_INP_HEADER_DAILY
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            Prev_Data_Prov_ID || '|' ||
            Data_Pro_Br_id || '|' ||
            Prev_Data_Pro_Br_id || '|' ||
            Cr_Fac_Type || '|' ||
            Pkg_Loan_Ind || '|' ||
            Lia_Ind || '|' ||
            Cr_Fac_Acc_No || '|' ||
            Prev_Cr_Fac_Acc_No || '|' ||
            TO_CHAR(Infor_Update_on,'dd-Mon-yyyy') || '|' ||
               TO_CHAR(Time_Infor_Update,'HH24MiSS') || '|' ||
            TO_CHAR(Cr_Fac_Open,'dd-Mon-yyyy') || '|' ||
            Loan_Sanc_Amt || '|' ||
            Max_Lend_Limit || '|' ||
            Loan_Sanc_Cur || '|' ||
            Loan_Sanc_Amt_For_cur || '|' ||
            Auth_Amt || '|' ||
            Loan_tenure || '|' ||
            TO_CHAR(Nat_Loan_Mat_date,'dd-Mon-yyyy') || '|' ||
            Pur_Of_Crd_Fac || '|' ||
            Int_Type || '|' ||
            Int_Rate || '|' ||
            High_Cr || '|' ||
            Exp_Cat || '|' ||
            EXP_REF || '|' ||
            Rsk_Mit || '|' ||
            Rep_Freq || '|' ||
            Rep_Mod || '|' ||
            NO_of_inst || '|' ||
            Inst_Amt || '|' ||
            Loan_Bal || '|' ||
            Loan_Bal_for || '|' ||
            TO_CHAR(Dt_Lst_Amt_Pd,'dd-Mon-yyyy') || '|' ||
            Lst_Amt_Pd || '|' ||
            No_Of_Days_Pst_Due || '|' ||
            Amt_Overdue || '|' ||
            NO_of_Inst_Overdue || '|' ||
            Ast_Claf || '|' ||
            Cr_Fac_Status || '|' ||
            Cls_Res_code || '|' ||
            TO_CHAR(Cr_Fac_Restruct_dt,'dd-Mon-yyyy') || '|' ||
            Res_for_Restruct || '|' ||
            Bad_Loan_Prov_Amt || '|' ||
            Int_Res_Amt || '|' ||
            Tot_Amt_Wrt_off || '|' ||
            Amt_Wrt_Off_P_L || '|' ||
            Amt_Wrt_Off_Prov || '|' ||
            Amt_Wrt_Off_RS || '|' ||
            Res_for_Amt_Wrt_Off || '|' ||
            TO_CHAR(Cr_Fac_Cl_dt,'dd-Mon-yyyy') || '|' ||
            Rea_For_Clos || '|' ||
            Sec_Cov_Flg || '|' ||
            Trans_Type_Cd || '|' ||
            Comp_Status || '|' ||
            Comp_Inti_No || '|' ||
            Spl_Cmnts1 || '|' ||
            Spl_Cmnts2, 2,
            Cr_Fac_Acc_No
            FROM CBO_COR_INP_CREDIT_DAILY
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            Data_Pro_Br_id || '|' ||
            Cr_Fac_Acc_No || '|' ||
            Sub_Iden_Cd || '|' ||
            Sub_Prev_Iden_Cd || '|' ||
            Sub_Ent_Typ || '|' ||
            Iden_Typ || '|' ||
            Iden_No || '|' ||
            Prev_Iden_No || '|' ||
            TO_CHAR(Iden_No_Exp_Dt,'dd-Mon-yyyy') || '|' ||
            Sub_Name || '|' ||
            Sub_Prev_Name || '|' ||
            Sub_Short_Name || '|' ||
            Sub_Prev_Short_Name || '|' ||
            Grp_Name || '|' ||
            Prev_Grp_Name || '|' ||
            TO_CHAR(Sub_Dt_Reg,'dd-Mon-yyyy') || '|' ||
            Ec_Act_Typ || '|' ||
            Nat_Inst || '|' ||
            Add_Type_1 || '|' ||
            Add_1_Ln_1 || '|' ||
            Add_1_Ln_2 || '|' ||
            Add_1_Ln_3 || '|' ||
            Add_1_Cty || '|' ||
            Add_1_Pos_Cd || '|' ||
            Add_1_Ctry || '|' ||
            Add_1_Tel_No || '|' ||
            Add_Type_2 || '|' ||
            Add_2_Ln_1 || '|' ||
            Add_2_Ln_2 || '|' ||
            Add_2_Ln_3 || '|' ||
            Add_2_Cty || '|' ||
            Add_2_Pos_Cd || '|' ||
            Add_2_Ctry || '|' ||
            Add_2_Tel_No, 3,
            Cr_Fac_Acc_No
            FROM CBO_COR_INP_SUBJECT_DAILY
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            Data_Pro_Br_id || '|' ||
            Cr_Fac_Acc_No || '|' ||
            Sub_Iden_Cd || '|' ||
            Nat_of_Rel_Shp || '|' ||
            Rel_Ent_Type || '|' ||
            Iden_Typ || '|' ||
            Iden_No || '|' ||
            Prev_Iden_No || '|' ||
            TO_CHAR(Iden_No_Exp_Dt,'dd-Mon-yyyy') || '|' ||
            Rel_Ind_Ent_Name || '|' ||
            Rel_Ind_Ent_Prev_Name || '|' ||
            Rel_Ind_Nat || '|' ||
            TO_CHAR(Rel_Ind_Dt_Of_Bir,'dd-Mon-yyyy') || '|' ||
            Rel_Ind_Gen || '|' ||
            Ec_Act_Typ || '|' ||
            Rel_Bus_Ent_Nat_Inst || '|' ||
            Rel_Status || '|' ||
            Add_Typ || '|' ||
            Add_Line_1 || '|' ||
            Add_Line_2 || '|' ||
            Add_Line_3 || '|' ||
            Add_City || '|' ||
            Add_Pos_Cod || '|' ||
            Add_Ctry || '|' ||
            Tel_NO, 4,
            Cr_Fac_Acc_No
            FROM CBO_COR_INP_RELATION_DAILY
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            Data_Pro_Br_id || '|' ||
            Cr_Fac_Acc_No || '|' ||
            Typ_of_Sec || '|' ||
            Nat_Of_Change || '|' ||
            TO_CHAR(Dt_Crea_Sec,'dd-Mon-yyyy') || '|' ||
            Sec_Cov_per || '|' ||
            Est_Val_Sec || '|' ||
            TO_CHAR(Dt_Lat_Val,'dd-Mon-yyyy') || '|' ||
            Veh_Vin || '|' ||
            End_Use_Ast || '|' ||
            SEC_IDEN_1_TYP || '|' ||
            nvl(Sec_Iden_1,'A1234') || '|' ||
            Sec_Iden_2_Typ || '|' ||
            Sec_Iden_2, 5,
            Cr_Fac_Acc_No
            FROM CBO_COR_INP_SECURITY_DAILY
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            No_Cr_Fac, 6,
            '_'
            FROM CBO_COR_INP_TRAILER_DAILY )T ORDER BY 3,2
            
            )
    Loop
          UTL_FILE.PUT_LINE (lv_t_file, i.var1);
    End Loop;
        UTL_FILE.FCLOSE (LV_T_FILE);
        
    lv_v_fname := 'FL640000-DCN-'||TO_CHAR(SYSDATE,'DD-Mon-YYYY-HH24MiSS')||'.dlt';
    lv_t_file := UTL_FILE.FOPEN (lv_v_path, lv_v_fname, 'W');
    FOR I IN (
    
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            TO_CHAR(Rep_date,'dd-Mon-yyyy') || '|' ||
            TO_CHAR(Rep_time,'HH24MiSS') || '|' ||
            TO_CHAR(Dt_Pre_In_file,'dd-Mon-yyyy') || '|' ||
            Nat_Data|| '|' ||IFF_VERSION  var1, 1
            FROM CBO_CON_DIS_HEADER_DAILY
            UNION ALL
            SELECT
            A.Seg_Iden || '|' ||
            A.Data_Prov_id || '|' ||
            A.Prev_Data_Prov_ID || '|' ||
            A.Data_Pro_Br_id || '|' ||
            A.Prev_Data_Pro_Br_id || '|' ||
            A.Cr_Fac_Type || '|' ||
            A.Lia_Ind || '|' ||
            A.Cr_Fac_Acc_No || '|' ||
            A.Prev_Cr_Fac_Acc_No || '|' ||
            TO_CHAR(A.Infor_Update_on,'dd-Mon-yyyy') || '|' ||
               TO_CHAR(Time_Infor_Update,'HH24MiSS') || '|' ||
            A.Micr_No || '|' ||
            TO_CHAR(A.Dt_Chq_Iss,'dd-Mon-yyyy') || '|' ||
            A.Chq_Amt || '|' ||
            A.Chq_Iss_typ || '|' ||
            TO_CHAR(A.Dt_DisHon,'dd-Mon-yyyy') || '|' ||
            A.Rea_for_Dish || '|' ||
            A.Trans_Type_Cd || '|' ||
            A.Comp_Status || '|' ||
            A.Comp_Inti_No || '|' ||
            A.Spl_Cmnts1 || '|' ||
            A.Spl_Cmnts2
            || CHR(10) ||
            B.Seg_Iden || '|' ||
            B.Data_Prov_id || '|' ||
            B.Data_Pro_Br_id || '|' ||
            B.Cr_Fac_Acc_No || '|' ||
            B.Sub_Iden_Cd || '|' ||
            B.Sub_Prev_Iden_Cd || '|' ||
            B.Iden_Typ || '|' ||
            B.Iden_No || '|' ||
            B.Prev_Iden_No || '|' ||
            TO_CHAR(B.Iden_No_Exp_Dt,'dd-Mon-yyyy') || '|' ||
            B.Sub_Name || '|' ||
            B.Sub_Prev_Name || '|' ||
            B.Sub_Nat || '|' ||
            TO_CHAR(B.Sub_DOB,'dd-Mon-yyyy') || '|' ||
            B.Sub_Gen || '|' ||
            B.Add_Type_1 || '|' ||
            B.Add_1_Ln_1 || '|' ||
            B.Add_1_Ln_2 || '|' ||
            B.Add_1_Ln_3 || '|' ||
            B.Add_1_Cty || '|' ||
            B.Add_1_Pos_Cd || '|' ||
            B.Add_1_Ctry || '|' ||
            B.Add_1_Tel_No || '|' ||
            B.Add_Type_2 || '|' ||
            B.Add_2_Ln_1 || '|' ||
            B.Add_2_Ln_2 || '|' ||
            B.Add_2_Ln_3 || '|' ||
            B.Add_2_Cty || '|' ||
            B.Add_2_Pos_Cd || '|' ||
            B.Add_2_Ctry || '|' ||
            B.Add_2_Tel_No,
            2
            FROM CBO_CON_DIS_DISHONOR_DAILY A,
                 CBO_CON_DIS_SUBJECT_DAILY B
            WHERE A.CR_FAC_ACC_NO = B.CR_FAC_ACC_NO
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            No_Chq_Dish, 4
            FROM CBO_CON_DIS_TRAILER_DAILY ORDER BY 2)
    Loop
          UTL_FILE.PUT_LINE (lv_t_file, i.var1);
    End Loop;
        UTL_FILE.FCLOSE (lv_t_file);
    lv_v_fname := 'FL640000-DCM-'||TO_CHAR(SYSDATE,'DD-Mon-YYYY-HH24MiSS')||'.dlt';
    lv_t_file := UTL_FILE.FOPEN (lv_v_path, lv_v_fname, 'W');
    FOR I IN (SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            TO_CHAR(Rep_date,'dd-Mon-yyyy') || '|' ||
            TO_CHAR(Rep_time,'HH24MiSS') || '|' ||
            TO_CHAR(Dt_Pre_In_file,'dd-Mon-yyyy') || '|' ||
            Nat_Data|| '|' ||IFF_VERSION  var1, 1
            FROM CBO_COR_DIS_HEADER_DAILY
            UNION ALL
            SELECT
            A.Seg_Iden || '|' ||
            A.Data_Prov_id || '|' ||
            A.Prev_Data_Prov_ID || '|' ||
            A.Data_Pro_Br_id || '|' ||
            A.Prev_Data_Pro_Br_id || '|' ||
            A.Cr_Fac_Type || '|' ||
            A.Lia_Ind || '|' ||
            A.Cr_Fac_Acc_No || '|' ||
            A.Prev_Cr_Fac_Acc_No || '|' ||
            TO_CHAR(A.Infor_Update_on,'dd-Mon-yyyy') || '|' ||
               TO_CHAR(Time_Infor_Update,'HH24MiSS') || '|' ||
            A.Micr_No || '|' ||
            TO_CHAR(A.Dt_Chq_Iss,'dd-Mon-yyyy') || '|' ||
            A.Chq_Amt || '|' ||
            A.Chq_Iss_typ || '|' ||
            TO_CHAR(A.Dt_DisHon,'dd-Mon-yyyy') || '|' ||
            A.Rea_for_Dish || '|' ||
            A.Trans_Type_Cd || '|' ||
            A.Comp_Status || '|' ||
            A.Comp_Inti_No || '|' ||
            A.Spl_Cmnts1 || '|' ||
            A.Spl_Cmnts2
            || CHR(10) ||
            B.Seg_Iden || '|' ||
            B.Data_Prov_id || '|' ||
            B.Data_Pro_Br_id || '|' ||
            B.Cr_Fac_Acc_No || '|' ||
            B.Sub_Iden_Cd || '|' ||
            B.Sub_Prev_Iden_Cd || '|' ||
            B.Sub_Ent_Typ || '|' ||
            B.Iden_Typ || '|' ||
            B.Iden_No || '|' ||
            B.Prev_Iden_No || '|' ||
            TO_CHAR(B.Iden_No_Exp_Dt,'dd-Mon-yyyy') || '|' ||
            B.Sub_Name || '|' ||
            B.Sub_Prev_Name || '|' ||
            TO_CHAR(B.Sub_Dt_Reg,'dd-Mon-yyyy') || '|' ||
            B.Add_Type_1 || '|' ||
            B.Add_1_Ln_1 || '|' ||
            B.Add_1_Ln_2 || '|' ||
            B.Add_1_Ln_3 || '|' ||
            B.Add_1_Cty || '|' ||
            B.Add_1_Pos_Cd || '|' ||
            B.Add_1_Ctry || '|' ||
            B.Add_1_Tel_No || '|' ||
            B.Add_Type_2 || '|' ||
            B.Add_2_Ln_1 || '|' ||
            B.Add_2_Ln_2 || '|' ||
            B.Add_2_Ln_3 || '|' ||
            B.Add_2_Cty || '|' ||
            B.Add_2_Pos_Cd || '|' ||
            B.Add_2_Ctry || '|' ||
            B.Add_2_Tel_No,
            2
            FROM CBO_COR_DIS_DISHONOR_DAILY A,
                 CBO_COR_DIS_SUBJECT_DAILY  B
            WHERE A.CR_FAC_ACC_NO = B.CR_FAC_ACC_NO
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            No_Chq_Dish, 4
            FROM CBO_COR_DIS_TRAILER_DAILY ORDER BY 2)
    Loop
          UTL_FILE.PUT_LINE (lv_t_file, i.var1);
    End Loop;
        UTL_FILE.FCLOSE (lv_t_file);
    lv_v_fname := 'FL640000-CNL-'||TO_CHAR(SYSDATE,'DD-Mon-YYYY-HH24MiSS')||'.dlt';
    lv_t_file := UTL_FILE.FOPEN (lv_v_path, lv_v_fname, 'W');
    FOR I IN (SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            TO_CHAR(to_date(Rep_date),'dd-Mon-yyyy') || '|' ||
            TO_CHAR(Rep_time,'HH24MiSS') || '|' ||
            TO_CHAR(to_date(Dt_Pre_In_file),'dd-Mon-yyyy') || '|' ||
            Nat_Data|| '|' ||IFF_VERSION  var1, 1
            FROM CBO_CON_LIT_HEADER_DAILY
            UNION ALL
            SELECT
            A.Seg_Iden || '|' ||
            A.Data_Prov_id || '|' ||
            A.Prev_Data_Prov_ID || '|' ||
            A.Data_Pro_Br_id || '|' ||
            A.Prev_Data_Pro_Br_id || '|' ||
            A.Cr_Fac_Type || '|' ||
            A.Lia_Ind || '|' ||
            A.Cr_Fac_Acc_No || '|' ||
            A.Prev_Cr_Fac_Acc_No || '|' ||
            TO_CHAR(to_date(A.Infor_Update_on),'dd-Mon-yyyy') || '|' ||
               TO_CHAR(Time_Infor_Update,'HH24MiSS') || '|' ||
            A.Suit_Ref_No || '|' ||
            A.Siut_Filed_Status || '|' ||
            A.Suit_Amt || '|' ||
            A.Ltg_Cause || '|' ||
            A.Court || '|' ||
            A.Court_Loc || '|' ||
            TO_CHAR(to_date(A.Dt_Suit_Filed),'dd-Mon-yyyy') || '|' ||
            TO_CHAR(to_date(A.Dt_adj),'dd-Mon-yyyy') || '|' ||
            A.Legal_Act_Org || '|' ||
            A.Trans_Type_Cd || '|' ||
            A.Comp_Status || '|' ||
            A.Comp_Inti_No || '|' ||
            A.Spl_Cmnts1 || '|' ||
            A.Spl_Cmnts2
            || CHR(10) ||
            B.Seg_Iden || '|' ||
            B.Data_Prov_id || '|' ||
            B.Data_Pro_Br_id || '|' ||
            B.Cr_Fac_Acc_No || '|' ||
            B.Sub_Iden_Cd || '|' ||
            B.Sub_Prev_Iden_Cd || '|' ||
            B.Iden_Typ || '|' ||
            B.Iden_No || '|' ||
            B.Prev_Iden_No || '|' ||
            TO_CHAR(to_date(B.Iden_No_Exp_Dt),'dd-Mon-yyyy') || '|' ||
            B.Sub_Name || '|' ||
            B.Sub_Prev_Name || '|' ||
            B.Sub_Nat || '|' ||
            TO_CHAR(to_date(B.Sub_DOB),'dd-Mon-yyyy') || '|' ||
            B.Sub_Gen || '|' ||
            B.Add_Type_1 || '|' ||
            B.Add_1_Ln_1 || '|' ||
            B.Add_1_Ln_2 || '|' ||
            B.Add_1_Ln_3 || '|' ||
            B.Add_1_Cty || '|' ||
            B.Add_1_Pos_Cd || '|' ||
            B.Add_1_Ctry || '|' ||
            B.Add_1_Tel_No || '|' ||
            B.Add_Type_2 || '|' ||
            B.Add_2_Ln_1 || '|' ||
            B.Add_2_Ln_2 || '|' ||
            B.Add_2_Ln_3 || '|' ||
            B.Add_2_Cty || '|' ||
            B.Add_2_Pos_Cd || '|' ||
            B.Add_2_Ctry || '|' ||
            B.Add_2_Tel_No,
            2
            FROM CBO_CON_LIT_LITIGATION_DAILY A,
                 CBO_CON_LIT_SUBJECT_DAILY  B
            WHERE A.CR_FAC_ACC_NO = B.CR_FAC_ACC_NO
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            No_Liti, 4
            FROM CBO_CON_LIT_TRAILER_DAILY  ORDER BY 2)
    Loop
          UTL_FILE.PUT_LINE (lv_t_file, i.var1);
    End Loop;
        UTL_FILE.FCLOSE (lv_t_file);
    lv_v_fname := 'FL640000-CML-'||TO_CHAR(SYSDATE,'DD-Mon-YYYY-HH24MiSS')||'.dlt';
    lv_t_file := UTL_FILE.FOPEN (lv_v_path, lv_v_fname, 'W');
    FOR I IN (SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            TO_CHAR(Rep_date,'dd-Mon-yyyy') || '|' ||
            TO_CHAR(Rep_time,'HH24MiSS') || '|' ||
            TO_CHAR(Dt_Pre_In_file,'dd-Mon-yyyy') || '|' ||
            Nat_Data|| '|' ||IFF_VERSION  var1, 1
            FROM CBO_COR_LIT_HEADER_DAILY
            UNION ALL
            SELECT
            A.Seg_Iden || '|' ||
            A.Data_Prov_id || '|' ||
            A.Prev_Data_Prov_ID || '|' ||
            A.Data_Pro_Br_id || '|' ||
            A.Prev_Data_Pro_Br_id || '|' ||
            A.Cr_Fac_Type || '|' ||
            A.Lia_Ind || '|' ||
            A.Cr_Fac_Acc_No || '|' ||
            A.Prev_Cr_Fac_Acc_No || '|' ||
            TO_CHAR(A.Infor_Update_on,'dd-Mon-yyyy') || '|' ||
               TO_CHAR(Time_Infor_Update,'HH24MiSS') || '|' ||
            A.Suit_Ref_No || '|' ||
            A.Siut_Filed_Status || '|' ||
            A.Suit_Amt || '|' ||
            A.Ltg_Cause || '|' ||
            A.Court || '|' ||
            A.Court_Loc || '|' ||
            TO_CHAR(A.Dt_Suit_Filed,'dd-Mon-yyyy') || '|' ||
            TO_CHAR(A.Dt_adj,'dd-Mon-yyyy') || '|' ||
            A.Legal_Act_Org || '|' ||
            A.Trans_Type_Cd || '|' ||
            A.Comp_Status || '|' ||
            A.Comp_Inti_No || '|' ||
            A.Spl_Cmnts1 || '|' ||
            A.Spl_Cmnts2
            || CHR(10) ||
            B.Seg_Iden || '|' ||
            B.Data_Prov_id || '|' ||
            B.Data_Pro_Br_id || '|' ||
            B.Cr_Fac_Acc_No || '|' ||
            B.Sub_Iden_Cd || '|' ||
            B.Sub_Prev_Iden_Cd || '|' ||
            B.Sub_Ent_Typ || '|' ||
            B.Iden_Typ || '|' ||
            B.Iden_No || '|' ||
            B.Prev_Iden_No || '|' ||
            TO_CHAR(B.Iden_No_Exp_Dt,'dd-Mon-yyyy') || '|' ||
            B.Sub_Name || '|' ||
            B.Sub_Prev_Name || '|' ||
            TO_CHAR(B.Sub_Dt_Reg,'dd-Mon-yyyy') || '|' ||
            B.Add_Type_1 || '|' ||
            B.Add_1_Ln_1 || '|' ||
            B.Add_1_Ln_2 || '|' ||
            B.Add_1_Ln_3 || '|' ||
            B.Add_1_Cty || '|' ||
            B.Add_1_Pos_Cd || '|' ||
            B.Add_1_Ctry || '|' ||
            B.Add_1_Tel_No || '|' ||
            B.Add_Type_2 || '|' ||
            B.Add_2_Ln_1 || '|' ||
            B.Add_2_Ln_2 || '|' ||
            B.Add_2_Ln_3 || '|' ||
            B.Add_2_Cty || '|' ||
            B.Add_2_Pos_Cd || '|' ||
            B.Add_2_Ctry || '|' ||
            B.Add_2_Tel_No,
            2
            FROM CBO_COR_LIT_LITIGATION_DAILY A,
                 CBO_COR_LIT_SUBJECT_DAILY B
            WHERE A.CR_FAC_ACC_NO = B.CR_FAC_ACC_NO
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            No_Liti, 4
            FROM CBO_COR_LIT_TRAILER_DAILY ORDER BY 2)
    Loop
          UTL_FILE.PUT_LINE (lv_t_file, i.var1);
    End Loop;
        UTL_FILE.FCLOSE (lv_t_file);
    lv_v_fname := 'FL640000-SM-'||TO_CHAR(SYSDATE,'DD-Mon-YYYY-HH24MiSS')||'.dlt';
    lv_t_file := UTL_FILE.FOPEN (lv_v_path, lv_v_fname, 'W');
    FOR I IN (
    
          select T.* from( SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            TO_CHAR(to_date(Rep_date),'dd-Mon-yyyy') || '|' ||
            TO_CHAR(Rep_time,'HH24MiSS') || '|' ||
            TO_CHAR(to_date(Dt_Pre_In_file),'dd-Mon-yyyy') || '|' ||
            Nat_Data || '|' ||IFF_VERSION var1, 1,'0'
            FROM CBO_SEN_MEMBER_HEADER_DAILY
            UNION ALL
            SELECT
            A.SEG_IDEN || '|' ||
            A.DATA_PROV_ID || '|' ||
            A.PREV_DATA_PROV_ID || '|' ||
            A.DATA_PRO_BR_ID || '|' ||
            A.PREV_DATA_PRO_BR_ID || '|' ||
            A.SUB_IDEN_CD || '|' ||
            A.SUB_PREV_IDEN_CD || '|' ||
            A.SM_ENTITY_TYPE || '|' ||
            A.SM_IDEN_TYPE || '|' ||
            A.SM_IDEN_NO || '|' ||
            A.PREV_SM_IDEN_NO || '|' ||
            TO_CHAR(to_date(A.SM_IDEN_NO_EXP_DT),'dd-Mon-yyyy') || '|' ||
            A.SUB_NAME || '|' ||
            A.SUB_PREV_NAME || '|' ||
            A.SUB_NAT || '|' ||
            A.SUB_PROF || '|' ||
            TO_CHAR(to_date(A.SUB_DOB_EDOR),'dd-Mon-yyyy') || '|' ||
            A.SUB_GEN || '|' ||
            A.SUB_NAT_OF_INST || '|' ||
            A.SM_STATUS || '|' ||
            A.SM_RELATION_IND || '|' ||
            A.ADD_TYPE_1 || '|' ||
            A.ADD_1_LN_1 || '|' ||
            A.ADD_1_LN_2 || '|' ||
            A.ADD_1_LN_3 || '|' ||
            A.ADD_1_CTY || '|' ||
            A.ADD_1_POS_CD || '|' ||
            A.ADD_1_CTRY || '|' ||
            A.ADD_1_TEL_NO || '|' ||
            A.ADD_TYPE_2 || '|' ||
            A.ADD_2_LN_1 || '|' ||
            A.ADD_2_LN_2 || '|' ||
            A.ADD_2_LN_3 || '|' ||
            A.ADD_2_CTY || '|' ||
            A.ADD_2_POS_CD || '|' ||
            A.ADD_2_CTRY || '|' ||
            A.ADD_2_TEL_NO,2,A.SUB_IDEN_CD
            FROM CBO_SEN_MEMBER_SUBJECT_DAILY A
            UNION ALL
            SELECT
            B.SEG_IDEN || '|' ||
            B.DATA_PROV_ID || '|' ||
            B.PREV_DATA_PROV_ID || '|' ||
            B.DATA_PRO_BR_ID || '|' ||
            B.PREV_DATA_PRO_BR_ID || '|' ||
            B.SUB_IDEN_CD || '|' ||
            B.NAT_OF_REL_SHP || '|' ||
            B.REL_ENT_TYPE || '|' ||
            B.IDEN_TYP || '|' ||
            B.IDEN_NO || '|' ||
            TO_CHAR(to_date(B.IDEN_NO_EXP_DT) ,'dd-Mon-yyyy') || '|' ||
            B.REL_IND_ENT_NAME || '|' ||
            B.REL_IND_ENT_PREV_NAME || '|' ||
            B.REL_IND_NAT || '|' ||
            TO_CHAR(to_date(B.REL_IND_DT_OF_BIR),'dd-Mon-yyyy') || '|' ||
            B.REL_IND_GEN || '|' ||
            B.REL_BUS_ENT_NAT_INST || '|' ||
            B.REL_STATUS || '|' ||
            B.ADD_TYP || '|' ||
            B.ADD_LINE_1 || '|' ||
            B.ADD_LINE_2 || '|' ||
            B.ADD_LINE_3 || '|' ||
            B.ADD_CITY || '|' ||
            B.ADD_POS_COD || '|' ||
            B.ADD_CTRY || '|' ||
            B.TEL_NO,3,B.SUB_IDEN_CD
            FROM CBO_SEN_MEMBER_RELATION_DAILY B
            UNION ALL
            SELECT
            Seg_Iden || '|' ||
            Data_Prov_id || '|' ||
            NO_OF_SUB, 4,'_'
            FROM CBO_SEN_MEMBER_TRAILER_DAILY )T ORDER BY 3,2
            
            )
    Loop
          UTL_FILE.PUT_LINE (lv_t_file, i.var1);
    End Loop;
        UTL_FILE.FCLOSE (lv_t_file);
        OV_V_SPOOLFILE  := lv_v_path||'\';
Exception
  WHEN OTHERS THEN
    OV_V_SPOOLFILE  := NULL;
    OV_V_ERROR_MESG := 'Error while writing CBO INCREMENTAL DATA REPORT File '||Sqlerrm||'lv_v_path '||lv_v_path||'  lv_v_fname' ||lv_v_fname;
End Dp_Cbo_Data_Daily;


Procedure DP_CBO_CORPORATE_INPUT(IV_D_ASON_DATE DATE) IS
-- CORPORATE INPUT FILE  CBO_COR_INP_HEADER_DAILY
       LV_D_PARAM_DATE DATE  := IV_D_ASON_DATE;
       LV_R_CORPORATE_INP_HEADER   CBO_COR_INP_HEADER_DAILY%Rowtype;
       LV_R_CORPORATE_INP_CREDIT   CBO_COR_INP_CREDIT_DAILY%Rowtype;
       LV_R_CORPORATE_INP_SUBJECT  CBO_COR_INP_SUBJECT_DAILY%Rowtype;
       LV_R_CORPORATE_INP_RELATION CBO_COR_INP_RELATION_DAILY%Rowtype;
       LV_R_CORPORATE_INP_SECURITY CBO_COR_INP_SECURITY_DAILY%Rowtype;
       LV_R_CORPORATE_INP_TRAILER  CBO_COR_INP_TRAILER_DAILY%Rowtype;
       LV_N_CNT                    NUMBER:=0;
       LV_N_COMMIT                 NUMBER := 0;
       LV_V_MAX_LEND_LIMIT         NUMBER := '737'; --Df_N_Get_Param_Value('MAXIMUM LENDING LIMIT');

Begin
DELETE FROM CBO_COR_INP_HEADER_DAILY ;
DELETE FROM CBO_COR_INP_CREDIT_DAILY ;
DELETE FROM CBO_COR_INP_SUBJECT_DAILY;
DELETE FROM CBO_COR_INP_RELATION_DAILY;
DELETE FROM CBO_COR_INP_SECURITY_DAILY ;
DELETE FROM CBO_COR_INP_TRAILER_DAILY;
-- CORPORATE INPUT FILE - HEADER
LP_UPDATE_RUN_DATA(20,'S');-- CORPORATE INPUT FILE - HEADER
If PV_N_CNT > 0 THEN
    Begin
    LV_R_CORPORATE_INP_HEADER.SEG_IDEN       := 'HDHD';
    LV_R_CORPORATE_INP_HEADER.DATA_PROV_ID   := 'FL640000';
    LV_R_CORPORATE_INP_HEADER.REP_DATE       := LV_D_PARAM_DATE;
    LV_R_CORPORATE_INP_HEADER.REP_TIME          := TRUNC(LV_D_PARAM_DATE) - 1/(24*60*60);
    LV_R_CORPORATE_INP_HEADER.DT_PRE_IN_FILE := TRUNC(SYSDATE);
    LV_R_CORPORATE_INP_HEADER.DATA_AVAIL_IND := '001';
    LV_R_CORPORATE_INP_HEADER.NAT_DATA          := '002';
    LV_R_CORPORATE_INP_HEADER.IFF_VERSION    := '1';--Df_V_Const_Ref_Dir('COR_INPUT_VERSION_DAILY');
    
CBO_DP_AUTO_TRAN('CBO_COR_INP_HEADER_DAILY-INSERT==>');
    INSERT INTO CBO_COR_INP_HEADER_DAILY
            (SEG_IDEN, DATA_PROV_ID, REP_DATE,
             REP_TIME, DT_PRE_IN_FILE, DATA_AVAIL_IND, NAT_DATA,
              IFF_VERSION)
     VALUES (LV_R_CORPORATE_INP_HEADER.SEG_IDEN, LV_R_CORPORATE_INP_HEADER.DATA_PROV_ID,
              LV_R_CORPORATE_INP_HEADER.REP_DATE, LV_R_CORPORATE_INP_HEADER.REP_TIME,
             LV_R_CORPORATE_INP_HEADER.DT_PRE_IN_FILE, LV_R_CORPORATE_INP_HEADER.DATA_AVAIL_IND,
             LV_R_CORPORATE_INP_HEADER.NAT_DATA,
              LV_R_CORPORATE_INP_HEADER.IFF_VERSION);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_COR_INP_HEADER_DAILY_17_'||LV_R_CORPORATE_INP_HEADER.SEG_IDEN||'_'||Sqlerrm);
    End;
LP_UPDATE_RUN_DATA(20,'E',1);-- CORPORATE INPUT FILE - HEADER
End If;

LP_UPDATE_RUN_DATA(21,'S');-- CORPORATE INPUT FILE - CREDIT
If PV_N_CNT > 0 THEN
    --Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');

     FOR I IN ( SELECT CONTRACT_NUMBER,
                       DECODE (CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       APPLICATION_NUMBER, AMOUNT_FINANCED, SCM.CUSTOMER_CODE, HIRE_PERIOD,
                       INSTALMENTS, FLAT_RATE, REPAYMENT_MODE,
                       DECODE (PRODUCT_CODE,
                               1, '012',
                               4, '007',
                               5, '007',                               
                               6, '007',
                               '020'
                              ) PRODUCT_CODE,
                       'L' PRODUCT_TYPE, CCM.TXN_ID,CCM.PA_SA_REF_ID
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND CONSTITUTION_ID <> 5
                UNION
                SELECT ACCOUNT_NUMBER CONTRACT_NUMBER,
                       DECODE (BRANCH_CODE,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       ACCOUNT_NUMBER APPLICATION_NUMBER, 0 AMOUNT_FINANCED,
                       CLIENT_CODE CUSTOMER_CODE, 0 HIRE_PERIOD, 0 INSTALMENTS, 0 FLAT_RATE,
                       0 REPAYMENT_MODE,
                      /* DECODE (PRODUCT_CODE, -->> Patched by Mathialagan P for MFC-393 ON 23-AUG-2010
                               1, '012',
                               51, '007',
                               52, '007',
                               '020'
                              ) PRODUCT_CODE,*/
                        '004' PRODUCT_CODE,
                       'B' PRODUCT_TYPE, NULL,pasa.PA_SA_REF_ID
                  FROM FW_REGISTRATION_MASTER_DAILY FRM,  S3G_ORG_CUSTMASTER  SCM
                  ,S3G_LAD_ACCPASADET pasa
                 WHERE SCM.CUSTOMER_CODE = FRM.CLIENT_CODE AND  CONSTITUTION_ID  <> 5
                 and  pasa.panum=frm.ACCOUNT_NUMBER
                   AND CBOPKG00003.dF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) >= 0 ) -->> Patched by Mathialagan P for MFC-393 ON 23-AUG-2010
                     /*  OR  (CBOPKG00003.dF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) = 0) -->> Or Condition Patched by Babu I for MFC-420 ON 02-Nov-2010 <<--
                      )  -->> Condition Commented by sridhar for MFC-435 on 21-Dec-2010<<--
                  )*/
    Loop
    Begin
    LV_N_CNT := LV_N_CNT + 1;
    LV_R_CORPORATE_INP_CREDIT.SEG_IDEN := 'CMCF';
    LV_R_CORPORATE_INP_CREDIT.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_INP_CREDIT.PREV_DATA_PROV_ID := NULL;
    LV_R_CORPORATE_INP_CREDIT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    -->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
    --LV_R_CORPORATE_INP_CREDIT.PREV_DATA_PRO_BR_ID :=  I.CONTRACT_BRANCH;
    LV_R_CORPORATE_INP_CREDIT.PREV_DATA_PRO_BR_ID :=NULL;
    -->> Patch End By Mathialagan P <<--
    LV_R_CORPORATE_INP_CREDIT.CR_FAC_TYPE := i.Product_code;
    LV_R_CORPORATE_INP_CREDIT.PKG_LOAN_IND := '002';
    LV_R_CORPORATE_INP_CREDIT.LIA_IND := '004';
    LV_R_CORPORATE_INP_CREDIT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN
    LV_R_CORPORATE_INP_CREDIT.PREV_CR_FAC_ACC_NO := CBOPKG00003.dF_V_CBO_RESCHEDULE_CONTRACT(I.APPLICATION_NUMBER);
    ELSE
    LV_R_CORPORATE_INP_CREDIT.PREV_CR_FAC_ACC_NO := NULL;
    End If;

/*    LV_R_CORPORATE_INP_CREDIT.INFOR_UPDATE_ON := CBOPKG00003.dF_D_CBO_INFO_UPDATE_ON(I.PRODUCT_TYPE,I.APPLICATION_NUMBER);
    LV_R_CORPORATE_INP_CREDIT.TIME_INFOR_UPDATE := CBOPKG00003.dF_D_CBO_TXN_DATE(I.TXN_ID);
    LV_R_CORPORATE_INP_CREDIT.CR_FAC_OPEN := LV_R_CORPORATE_INP_CREDIT.INFOR_UPDATE_ON;*/
     -->> mATHI @@@@
    LV_R_CORPORATE_INP_CREDIT.INFOR_UPDATE_ON := PV_D_DATE; --@@@@
    LV_R_CORPORATE_INP_CREDIT.TIME_INFOR_UPDATE := CBOPKG00003.dF_D_CBO_TXN_DATE(I.TXN_ID);
    LV_R_CORPORATE_INP_CREDIT.CR_FAC_OPEN := CBOPKG00003.dF_D_CBO_INFO_UPDATE_ON(I.PRODUCT_TYPE,I.APPLICATION_NUMBER);

    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.LOAN_SANC_AMT := ROUND(I.AMOUNT_FINANCED);
    ELSE
       LV_R_CORPORATE_INP_CREDIT.LOAN_SANC_AMT := CBOPKG00003.dF_N_CBO_Finance_Amount(i.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    End If;

    LV_R_CORPORATE_INP_CREDIT.MAX_LEND_LIMIT := CBOPKG00003.dF_V_CBO_MAX_LEND_LIMIT(I.CUSTOMER_CODE);    
    
    LV_R_CORPORATE_INP_CREDIT.LOAN_SANC_CUR := 'OMR';
    LV_R_CORPORATE_INP_CREDIT.LOAN_SANC_AMT_FOR_CUR := NULL;
    --sridhar patch here on 19/08/2010 --MFC-393
--    LV_R_CORPORATE_INP_CREDIT.AUTH_AMT := CBOPKG00003.dF_N_CBO_AUTHORIZED_AMOUNT(I.PRODUCT_TYPE,I.CONTRACT_NUMBER,LV_D_PARAM_DATE ); sridhar

    If I.PRODUCT_TYPE = 'L' THEN
    LV_R_CORPORATE_INP_CREDIT.AUTH_AMT :=  ROUND(I.AMOUNT_FINANCED);
    ELSE
    LV_R_CORPORATE_INP_CREDIT.AUTH_AMT := CBOPKG00003.dF_N_CBO_AUTHORIZED_AMOUNT(I.PRODUCT_TYPE,I.CONTRACT_NUMBER,LV_D_PARAM_DATE );
    End If;
    --END OF PATCH

    If i.product_type = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.LOAN_TENURE := I.HIRE_PERIOD;
    ELSE
       LV_R_CORPORATE_INP_CREDIT.LOAN_TENURE := DF_N_CBO_Hire_Period(I.CONTRACT_NUMBER);
    End If;

    LV_R_CORPORATE_INP_CREDIT.NAT_LOAN_MAT_DATE := CBOPKG00003.dF_D_CBO_LOAN_MATURITY_DATE(I.PRODUCT_TYPE,I.CONTRACT_NUMBER,i.PA_SA_REF_ID);
    LV_R_CORPORATE_INP_CREDIT.PUR_OF_CRD_FAC := Case I.PRODUCT_CODE  WHEN '012' THEN '004'
                                                                        WHEN '016' THEN '003'
                                                                       WHEN '004' THEN '005'
                                                                     ELSE '004'
                                                                     End;

    LV_R_CORPORATE_INP_CREDIT.INT_TYPE := '001';
    If i.product_type = 'L' THEN
        If I.FLAT_RATE = 0 THEN
        LV_R_CORPORATE_INP_CREDIT.INT_RATE := 5.50;
        ELSE
        LV_R_CORPORATE_INP_CREDIT.INT_RATE := ROUND(I.FLAT_RATE,2);
        End If;
    ELSE
          LV_R_CORPORATE_INP_CREDIT.INT_RATE := CBOPKG00003.dF_N_CBO_ACCT_IRR(I.PRODUCT_TYPE,I.CONTRACT_NUMBER);
    End If;

    LV_R_CORPORATE_INP_CREDIT.HIGH_CR := NULL;

    LV_R_CORPORATE_INP_CREDIT.EXP_CAT := '003';

    LV_R_CORPORATE_INP_CREDIT.EXP_REF  := NULL;
    LV_R_CORPORATE_INP_CREDIT.RSK_MIT := NULL;
    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.REP_FREQ := '007';
    ELSE
       LV_R_CORPORATE_INP_CREDIT.REP_FREQ := CBOPKG00003.df_V_Cbo_Repayment_Frequency(i.CONTRACT_NUMBER);
    End If;

    If I.PRODUCT_TYPE = 'L' THEN
        If I.REPAYMENT_MODE = 2 THEN
           LV_R_CORPORATE_INP_CREDIT.REP_MOD := '001';
--        Elsif i.REPAYMENT_MODE = 4 THEN
        Elsif i.REPAYMENT_MODE IN ( 4,5) THEN  --->> Commented and added By Vasanth For DLVE015<<---------
           LV_R_CORPORATE_INP_CREDIT.REP_MOD := '004';
        ELSE
           LV_R_CORPORATE_INP_CREDIT.REP_MOD := '005';
        End If;
    ELSE
        LV_R_CORPORATE_INP_CREDIT.REP_MOD := '001';
    End If;

    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.NO_OF_INST := I.INSTALMENTS;
    ELSE
       LV_R_CORPORATE_INP_CREDIT.NO_OF_INST := CBOPKG00003.dF_N_CBO_INSTALLMENTS(I.CONTRACT_NUMBER,i.PA_SA_REF_ID);
    End If;
    --Installment Amount

    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.INST_AMT := ROUND(CBOPKG00003.Df_N_Get_Avg_Emi(I.CONTRACT_NUMBER,I.INSTALMENTS,i.PA_SA_REF_ID));
    ELSE
       LV_R_CORPORATE_INP_CREDIT.INST_AMT := CBOPKG00003.dF_N_CBO_INST_AMOUNT(I.CONTRACT_NUMBER,i.PA_SA_REF_ID);
    End If;
    If LV_R_CORPORATE_INP_CREDIT.INST_AMT < 0  THEN
      LV_R_CORPORATE_INP_CREDIT.INST_AMT := 0;
     End If;

    LV_R_CORPORATE_INP_CREDIT.LOAN_BAL := CBOPKG00003.dF_N_CBO_LOAN_BALANCE_OMR(I.PRODUCT_TYPE,I.CONTRACT_NUMBER, LV_D_PARAM_DATE,i.PA_SA_REF_ID);
    LV_R_CORPORATE_INP_CREDIT.LOAN_BAL_FOR := NULL;
    LV_R_CORPORATE_INP_CREDIT.DT_LST_AMT_PD := CBOPKG00003.dF_D_CBO_LAST_AMOUNT_DT(I.PRODUCT_TYPE,I.CONTRACT_NUMBER);
    LV_R_CORPORATE_INP_CREDIT.LST_AMT_PD := CBOPKG00003.dF_N_CBO_LAST_AMOUNT_PAID(I.PRODUCT_TYPE,I.CONTRACT_NUMBER,LV_R_CORPORATE_INP_CREDIT.DT_LST_AMT_PD);
    
    
    ----LV_R_CORPORATE_INP_CREDIT.NO_OF_DAYS_PST_DUE := CBOPKG00003.dF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER, LV_D_PARAM_DATE,'0');
    -->> Patch By Sudeesh kumar R For DLV974 on 23-May-2016    
    IF CBOPKG00003.Df_v_CBO_Cr_Fac_Status(I.Product_type,I.contract_number,Lv_d_Param_date) = '009' THEN 
       LV_R_CORPORATE_INP_CREDIT.NO_OF_DAYS_PST_DUE := 0;
    ELSE   
       LV_R_CORPORATE_INP_CREDIT.NO_OF_DAYS_PST_DUE := CBOPKG00003.DF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER, LV_D_PARAM_DATE,'0');
    END IF;  
    -->> End Patch By Sudeesh kumar R For DLV974 on 23-May-2016          

    If I.PRODUCT_TYPE = 'L' THEN
        LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE := ROUND(cbopkg00003.DF_N_GET_RENT_ARREARS(i.CONTRACT_NUMBER, LV_D_PARAM_DATE+1,i.PA_SA_REF_ID));
        IF LV_R_CORPORATE_INP_CREDIT.LOAN_BAL = 0 THEN
        LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE := 0;
        end if;
    ELSE
        LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE := ROUND(CBOPKG00003.dF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER, LV_D_PARAM_DATE,'1'));
    End If;

    If I.PRODUCT_TYPE = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.NO_OF_INST_OVERDUE := CBOPKG00003.dF_N_CBO_NIOD(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    ELSE
       LV_R_CORPORATE_INP_CREDIT.NO_OF_INST_OVERDUE := CBOPKG00003.dF_N_CBO_NDPD(i.product_type, I.CONTRACT_NUMBER,LV_D_PARAM_DATE,'2');
    End If;

    LV_R_CORPORATE_INP_CREDIT.AST_CLAF := CBOPKG00003.dF_V_CBO_GET_GRADE(LV_R_CORPORATE_INP_CREDIT.NO_OF_DAYS_PST_DUE,LV_D_PARAM_DATE,1);
    --Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT'); -->> Patch By Mathialagan P For DLV604 on 17-Nov-2011
    If LV_R_CORPORATE_INP_CREDIT.AST_CLAF IN ('003','004','005') THEN
       LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS :='003';
    ELSE
       LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS := CBOPKG00003.df_v_CBO_Cr_Fac_Status(I.Product_type,I.contract_number,Lv_d_Param_date);
    End If;

    If LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS ='003' THEN
       LV_R_CORPORATE_INP_CREDIT.CLS_RES_CODE :='001';
    ELSE
        LV_R_CORPORATE_INP_CREDIT.CLS_RES_CODE := NULL;
    End If;

    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN
--       LV_R_CORPORATE_INP_CREDIT.CR_FAC_RESTRUCT_DT := LV_R_CORPORATE_INP_CREDIT.INFOR_UPDATE_ON; --@@@@
       LV_R_CORPORATE_INP_CREDIT.CR_FAC_RESTRUCT_DT := CBOPKG00003.dF_D_CBO_INFO_UPDATE_ON(I.PRODUCT_TYPE,I.APPLICATION_NUMBER); --@@@@
    ELSE
       LV_R_CORPORATE_INP_CREDIT.CR_FAC_RESTRUCT_DT := NULL;
    End If;

    LV_R_CORPORATE_INP_CREDIT.RES_FOR_RESTRUCT := CBOPKG00003.dF_V_CBO_RESCHEDULE_REASON(I.Application_Number);
    If I.Product_type = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.INT_RES_AMT :=CBOPKG00003.dF_N_CBO_INTEREST_RESRV_AMT (I.CONTRACT_NUMBER,LV_D_PARAM_DATE,LV_R_CORPORATE_INP_CREDIT.NO_OF_DAYS_PST_DUE);
    ELSE
       LV_R_CORPORATE_INP_CREDIT.INT_RES_AMT := 0;
    End If;

    If I.Product_type = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.BAD_LOAN_PROV_AMT := CBOPKG00003.dF_N_CBO_FM13_PROVISION (I.CONTRACT_NUMBER,LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE,LV_R_CORPORATE_INP_CREDIT.NO_OF_DAYS_PST_DUE,LV_R_CORPORATE_INP_CREDIT.INT_RES_AMT,LV_D_PARAM_DATE);
    ELSE
       LV_R_CORPORATE_INP_CREDIT.BAD_LOAN_PROV_AMT :=0;
    End If;

    If LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE< 0  THEN
       LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE := 0;
    End If;
    If I.Product_Type = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.TOT_AMT_WRT_OFF := CBOPKG00003.dF_N_CBO_Write_Off(i.contract_number,LV_D_PARAM_DATE,i.PA_SA_REF_ID);
    ELSE
       LV_R_CORPORATE_INP_CREDIT.TOT_AMT_WRT_OFF := 0;
    End If;

    If LV_R_CORPORATE_INP_CREDIT.TOT_AMT_WRT_OFF < 0 THEN
       LV_R_CORPORATE_INP_CREDIT.TOT_AMT_WRT_OFF :=0;
    End If;
    -- Patch Added By Sridhar G For MFC-502
    If LV_R_CORPORATE_INP_CREDIT.TOT_AMT_WRT_OFF > 0 THEN
         -->>commented and  patch by Mathialagan P for DLV650 on 03-Apr-2012 <<--
        -- LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS := '003' ;
       If LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE =0 AND LV_R_CORPORATE_INP_CREDIT.LOAN_BAL = 0 THEN
          LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS := '009' ;
       ELSE
              ----- LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS := '003' ; commented on 07jun2106 by raja and added below
              LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS := '009' ; 
       End If;
       If LV_R_CORPORATE_INP_CREDIT.LOAN_BAL <=  LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE THEN
           LV_R_CORPORATE_INP_CREDIT.LOAN_BAL :=  LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE;
       End If;
       -->> End patch for DLV650<<--
    End If ;
    -- Patch Ends Here for MFC-502
    LV_R_CORPORATE_INP_CREDIT.AMT_WRT_OFF_P_L := NULL;
    LV_R_CORPORATE_INP_CREDIT.AMT_WRT_OFF_PROV := NULL;
    LV_R_CORPORATE_INP_CREDIT.AMT_WRT_OFF_RS := NULL;
    LV_R_CORPORATE_INP_CREDIT.RES_FOR_AMT_WRT_OFF := NULL;
    If i.product_type = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT := CBOPKG00003.dF_D_CBO_CLOSING_DATE(I.CONTRACT_NUMBER,LV_D_PARAM_DATE); --raja mohan27/02/2017
       /* Sudeesh patched for DLV840 CBO Validation Point 2 */
       IF  LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT IS NOT NULL THEN 
           IF  LV_R_CORPORATE_INP_CREDIT.DT_LST_AMT_PD > LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT THEN
               LV_R_CORPORATE_INP_CREDIT.DT_LST_AMT_PD := LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT-2;--raja mohan27/02/2017
           ELSIF  LV_R_CORPORATE_INP_CREDIT.DT_LST_AMT_PD = LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT THEN
               LV_R_CORPORATE_INP_CREDIT.DT_LST_AMT_PD := LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT-2;--raja mohan27/02/2017
           END IF; 
       END IF;
    ELSE
       -->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
       --LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT := CBOPKG00003LF_D_CBO_FACT_CLOSING_DATE(I.CONTRACT_NUMBER);
             LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT := NULL; --PV_D_DATE;
       -->> Pathch End By Mathialagan P <<--
    End If;

    If LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS IN ('010','009') THEN
         LV_R_CORPORATE_INP_CREDIT.REA_FOR_CLOS := CBOPKG00003.dF_V_CBO_CLOSURE_REASON(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    ELSE
       LV_R_CORPORATE_INP_CREDIT.REA_FOR_CLOS := NULL;
    End If;

    If LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS='009' THEN
     LV_R_CORPORATE_INP_CREDIT.LOAN_BAL:=0;
    End If;--If Condn Added By Gowthaman N For DLV605 On 29-Nov-2011

    --LV_R_CORPORATE_INP_CREDIT.SEC_COV_FLG := CBOPKG00003.dF_V_CBO_Security_Flag(i.Contract_number);   -- Comment By Sudeesh For MFCSL17M024_DLV1030 On 09-Jan-2017
    
    --> Code added By Sudeesh For For MFCSL17M024_DLV1030 On 09-Jan-2017
    If i.product_type = 'L' THEN
       LV_R_CORPORATE_INP_CREDIT.SEC_COV_FLG := CBOPKG00003.DF_V_CBO_Security_Flag(i.Contract_number,i.PA_SA_REF_ID); -- Comment By Sudeesh For MFCSL17M024_DLV1030 On 09-Jan-2017
    else 
       LV_R_CORPORATE_INP_CREDIT.SEC_COV_FLG := '002'; -- Comment By Sudeesh For MFCSL17M024_DLV1030 On 09-Jan-2017
    END IF;
    --> End Patch   
    
    
    LV_R_CORPORATE_INP_CREDIT.TRANS_TYPE_CD := '001';
    LV_R_CORPORATE_INP_CREDIT.COMP_STATUS := NULL;
    LV_R_CORPORATE_INP_CREDIT.COMP_INTI_NO := NULL;
    LV_R_CORPORATE_INP_CREDIT.SPL_CMNTS1 := NULL;
    LV_R_CORPORATE_INP_CREDIT.SPL_CMNTS2 := NULL;
    LV_N_COMMIT := LV_N_COMMIT + 1;

    CBO_DP_AUTO_TRAN('CBO_COR_INP_CREDIT_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_COR_INP_CREDIT_DAILY
            (SEG_IDEN, DATA_PROV_ID, PREV_DATA_PROV_ID, DATA_PRO_BR_ID, PREV_DATA_PRO_BR_ID,
             CR_FAC_TYPE, LIA_IND, CR_FAC_ACC_NO, PREV_CR_FAC_ACC_NO, INFOR_UPDATE_ON,
             TIME_INFOR_UPDATE, CR_FAC_OPEN, LOAN_SANC_AMT, MAX_LEND_LIMIT, LOAN_SANC_CUR,
             LOAN_SANC_AMT_FOR_CUR, AUTH_AMT, LOAN_TENURE, NAT_LOAN_MAT_DATE, PUR_OF_CRD_FAC,
             INT_TYPE, INT_RATE, HIGH_CR, EXP_CAT, RSK_MIT, REP_FREQ, REP_MOD, NO_OF_INST, INST_AMT,
             LOAN_BAL, LOAN_BAL_FOR, DT_LST_AMT_PD, LST_AMT_PD, NO_OF_DAYS_PST_DUE, AMT_OVERDUE,
             NO_OF_INST_OVERDUE, AST_CLAF, CR_FAC_STATUS, CLS_RES_CODE, CR_FAC_RESTRUCT_DT,
             RES_FOR_RESTRUCT, BAD_LOAN_PROV_AMT, INT_RES_AMT, TOT_AMT_WRT_OFF, AMT_WRT_OFF_P_L,
             AMT_WRT_OFF_PROV, AMT_WRT_OFF_RS, RES_FOR_AMT_WRT_OFF, CR_FAC_CL_DT, REA_FOR_CLOS,
             SEC_COV_FLG, TRANS_TYPE_CD, COMP_STATUS, COMP_INTI_NO, SPL_CMNTS1, SPL_CMNTS2,
             EXP_REF, PKG_LOAN_IND)
     VALUES (LV_R_CORPORATE_INP_CREDIT.SEG_IDEN, LV_R_CORPORATE_INP_CREDIT.DATA_PROV_ID,
              LV_R_CORPORATE_INP_CREDIT.PREV_DATA_PROV_ID, LV_R_CORPORATE_INP_CREDIT.DATA_PRO_BR_ID,
             LV_R_CORPORATE_INP_CREDIT.PREV_DATA_PRO_BR_ID, LV_R_CORPORATE_INP_CREDIT.CR_FAC_TYPE,
             LV_R_CORPORATE_INP_CREDIT.LIA_IND, LV_R_CORPORATE_INP_CREDIT.CR_FAC_ACC_NO,
             LV_R_CORPORATE_INP_CREDIT.PREV_CR_FAC_ACC_NO, LV_R_CORPORATE_INP_CREDIT.INFOR_UPDATE_ON,
             LV_R_CORPORATE_INP_CREDIT.TIME_INFOR_UPDATE, LV_R_CORPORATE_INP_CREDIT.CR_FAC_OPEN,
             LV_R_CORPORATE_INP_CREDIT.LOAN_SANC_AMT, LV_R_CORPORATE_INP_CREDIT.MAX_LEND_LIMIT,
             LV_R_CORPORATE_INP_CREDIT.LOAN_SANC_CUR, LV_R_CORPORATE_INP_CREDIT.LOAN_SANC_AMT_FOR_CUR,
             LV_R_CORPORATE_INP_CREDIT.AUTH_AMT, LV_R_CORPORATE_INP_CREDIT.LOAN_TENURE,
             LV_R_CORPORATE_INP_CREDIT.NAT_LOAN_MAT_DATE, LV_R_CORPORATE_INP_CREDIT.PUR_OF_CRD_FAC,
             LV_R_CORPORATE_INP_CREDIT.INT_TYPE, LV_R_CORPORATE_INP_CREDIT.INT_RATE,
             LV_R_CORPORATE_INP_CREDIT.HIGH_CR, LV_R_CORPORATE_INP_CREDIT.EXP_CAT,
             LV_R_CORPORATE_INP_CREDIT.RSK_MIT, LV_R_CORPORATE_INP_CREDIT.REP_FREQ,
             LV_R_CORPORATE_INP_CREDIT.REP_MOD, LV_R_CORPORATE_INP_CREDIT.NO_OF_INST,
             LV_R_CORPORATE_INP_CREDIT.INST_AMT, LV_R_CORPORATE_INP_CREDIT.LOAN_BAL,
             LV_R_CORPORATE_INP_CREDIT.LOAN_BAL_FOR, LV_R_CORPORATE_INP_CREDIT.DT_LST_AMT_PD,
             LV_R_CORPORATE_INP_CREDIT.LST_AMT_PD, LV_R_CORPORATE_INP_CREDIT.NO_OF_DAYS_PST_DUE,
             LV_R_CORPORATE_INP_CREDIT.AMT_OVERDUE, LV_R_CORPORATE_INP_CREDIT.NO_OF_INST_OVERDUE,
             LV_R_CORPORATE_INP_CREDIT.AST_CLAF, LV_R_CORPORATE_INP_CREDIT.CR_FAC_STATUS,
             LV_R_CORPORATE_INP_CREDIT.CLS_RES_CODE, LV_R_CORPORATE_INP_CREDIT.CR_FAC_RESTRUCT_DT,
             LV_R_CORPORATE_INP_CREDIT.RES_FOR_RESTRUCT, LV_R_CORPORATE_INP_CREDIT.BAD_LOAN_PROV_AMT,
             LV_R_CORPORATE_INP_CREDIT.INT_RES_AMT, LV_R_CORPORATE_INP_CREDIT.TOT_AMT_WRT_OFF,
             LV_R_CORPORATE_INP_CREDIT.AMT_WRT_OFF_P_L, LV_R_CORPORATE_INP_CREDIT.AMT_WRT_OFF_PROV,
             LV_R_CORPORATE_INP_CREDIT.AMT_WRT_OFF_RS, LV_R_CORPORATE_INP_CREDIT.RES_FOR_AMT_WRT_OFF,
             LV_R_CORPORATE_INP_CREDIT.CR_FAC_CL_DT, LV_R_CORPORATE_INP_CREDIT.REA_FOR_CLOS,
             LV_R_CORPORATE_INP_CREDIT.SEC_COV_FLG, LV_R_CORPORATE_INP_CREDIT.TRANS_TYPE_CD,
             LV_R_CORPORATE_INP_CREDIT.COMP_STATUS, LV_R_CORPORATE_INP_CREDIT.COMP_INTI_NO,
             LV_R_CORPORATE_INP_CREDIT.SPL_CMNTS1, LV_R_CORPORATE_INP_CREDIT.SPL_CMNTS2,
             LV_R_CORPORATE_INP_CREDIT.EXP_REF,LV_R_CORPORATE_INP_CREDIT.PKG_LOAN_IND);

    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_COR_INP_CREDIT_DAILY_18_'||LV_R_CORPORATE_INP_CREDIT.CR_FAC_ACC_NO||'_'|| Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
 LP_UPDATE_RUN_DATA(21,'C',LV_N_COMMIT);
 LV_N_COMMIT := 0;
 Exit WHEN PV_V_CONTINUE_PROCESS = 'N';
End If;
End Loop;

LP_UPDATE_RUN_DATA(21,'E',LV_N_COMMIT);-- CORPORATE INPUT FILE - CREDIT
LV_N_COMMIT := 0;
CBOPKG00003.dp_Replace_Disall_Chars('CBO_COR_INP_CREDIT_DAILY');
End If;

LP_UPDATE_RUN_DATA(22,'S');-- CORPORATE INPUT FILE - SUBJECT
If PV_N_CNT > 0 THEN
    --Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
    -- CORPORATE INPUT FILE - SUBJECT
      FOR I IN( SELECT CONTRACT_NUMBER,
                       DECODE (CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       APPLICATION_NUMBER, AMOUNT_FINANCED, SCM.CUSTOMER_CODE,
                       SCM.NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE, 
                       SCM.NATIONALITY CUM_RESIDENTIAL_CODE,  SCM.GROUP_ID CUM_CUSTOMER_GROUP_CODE,
                       SCM.CONSTITUTION_ID CUM_CONSTITUTION_CODE, PRODUCT_CODE, 'L' PRODUCT_TYPE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER  SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND CONSTITUTION_ID  <> 1
                UNION
                SELECT ACCOUNT_NUMBER CONTRACT_NUMBER,
                       DECODE (BRANCH_CODE,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       ACCOUNT_NUMBER APPLICATION_NUMBER, 0 AMOUNT_FINANCED,
                       CLIENT_CODE CUSTOMER_CODE, SCM.NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE,
                       SCM.NATIONALITY CUM_RESIDENTIAL_CODE, SCM.GROUP_ID  CUM_CUSTOMER_GROUP_CODE, 
                       SCM.CONSTITUTION_ID  CUM_CONSTITUTION_CODE,
                       PRODUCT_CODE, 'B' PRODUCT_TYPE
                  FROM FW_REGISTRATION_MASTER_DAILY FRM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = FRM.CLIENT_CODE AND CONSTITUTION_ID  <> 1
                 AND CBOPKG00003.dF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) >= 0 ) -->> Patched by Mathialagan P for MFC-393 ON 23-AUG-2010
                    /* OR  (CBOPKG00003.dF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) = 0)  -->> Or Condition Patched by Babu I for MFC-420 ON 02-Nov-2010 <<--
                    )   -->> Condition Commented by sridhar for MFC-435 on 21-Dec-2010<<--
                 )*/
    Loop
    Begin
    LV_R_CORPORATE_INP_SUBJECT.SEG_IDEN := 'CMCS';
    LV_R_CORPORATE_INP_SUBJECT.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_INP_SUBJECT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CORPORATE_INP_SUBJECT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    LV_R_CORPORATE_INP_SUBJECT.SUB_IDEN_CD := I.CUSTOMER_CODE;
    LV_R_CORPORATE_INP_SUBJECT.SUB_PREV_IDEN_CD := NULL;

  --IF I.CUM_CONSTITUTION_CODE IN (2,3,4,70) THEN
  If I.CUM_CONSTITUTION_CODE IN (6,7,8,9) THEN
    LV_R_CORPORATE_INP_SUBJECT.SUB_ENT_TYP := '002';
  Elsif I.CUM_CONSTITUTION_CODE IN (3,4) THEN
    LV_R_CORPORATE_INP_SUBJECT.SUB_ENT_TYP := '003';
  ELSE
      LV_R_CORPORATE_INP_SUBJECT.SUB_ENT_TYP := NULL;
  End If;

    LV_R_CORPORATE_INP_SUBJECT.IDEN_TYP := CBOPKG00003.dF_V_CBO_IDENTIFIER_TYPE(I.CUSTOMER_CODE, 'CORPORATE', 'INPUT');

    If     LV_R_CORPORATE_INP_SUBJECT.IDEN_TYP = '001' THEN
    LV_R_CORPORATE_INP_SUBJECT.IDEN_NO := CBOPKG00003.df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
    
    Elsif LV_R_CORPORATE_INP_SUBJECT.IDEN_TYP = '002' THEN
    LV_R_CORPORATE_INP_SUBJECT.IDEN_NO := CBOPKG00003.dF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
    ELSE
    LV_R_CORPORATE_INP_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
    End If;

    
    If LV_R_CORPORATE_INP_SUBJECT.SUB_ENT_TYP = '003' THEN
    LV_R_CORPORATE_INP_SUBJECT.IDEN_NO := CBOPKG00003.df_V_Cbo_Non_Moci(I.CUSTOMER_CODE);
        If LV_R_CORPORATE_INP_SUBJECT.IDEN_NO IS NULL THEN
           LV_R_CORPORATE_INP_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
        End If;
    End If;
    -->>Patch Ends here By sridhar<<--

    LV_R_CORPORATE_INP_SUBJECT.PREV_IDEN_NO := NULL;

  --> Commented and Patched By Babu I for call MFC-393 On 23-AUG-2010 <<--
  --LV_R_CORPORATE_INP_SUBJECT.IDEN_NO_EXP_DT := NULL;
    LV_R_CORPORATE_INP_SUBJECT.IDEN_NO_EXP_DT :=  CBOPKG00003.dF_D_CBO_Subject_Expiry_date(I.CUSTOMER_CODE);
    LV_R_CORPORATE_INP_SUBJECT.SUB_NAME := CBOPKG00003.dF_V_CBO_GET_CUSTOMER_NAME('CORPORATE',I.CUSTOMER_CODE);
    LV_R_CORPORATE_INP_SUBJECT.SUB_PREV_NAME := NULL;
    LV_R_CORPORATE_INP_SUBJECT.SUB_SHORT_NAME := NULL;
    LV_R_CORPORATE_INP_SUBJECT.SUB_PREV_SHORT_NAME := NULL;
    LV_R_CORPORATE_INP_SUBJECT.GRP_NAME := CBOPKG00003.dF_V_CBO_GROUP_NAME (I.CUM_CUSTOMER_GROUP_CODE);
    LV_R_CORPORATE_INP_SUBJECT.PREV_GRP_NAME := NULL;
    LV_R_CORPORATE_INP_SUBJECT.SUB_DT_REG := CBOPKG00003.df_V_Cbo_Cr_Issue_Date(I.CUSTOMER_CODE);
    LV_R_CORPORATE_INP_SUBJECT.EC_ACT_TYP := CBOPKG00003.dF_V_CBO_ECONOMIC_ACTIVITY(I.CUSTOMER_CODE);
    -->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
    --LV_R_CORPORATE_INP_SUBJECT.NAT_INST := CBOPKG00003.dF_V_CBO_NAT_OF_INST(I.CUM_CONSTITUTION_CODE);
    If LV_R_CORPORATE_INP_SUBJECT.SUB_ENT_TYP IN ('002','003') THEN
       LV_R_CORPORATE_INP_SUBJECT.NAT_INST := CBOPKG00003.dF_V_CBO_NAT_OF_INST(I.CUM_CONSTITUTION_CODE);
    ELSE
       LV_R_CORPORATE_INP_SUBJECT.NAT_INST :=NULL;
    End If;
    -->> Pathch End By Mathialagan P <<--
    LV_R_CORPORATE_INP_SUBJECT.ADD_TYPE_1 := '001';
    LV_R_CORPORATE_INP_SUBJECT.ADD_1_LN_1 := CBOPKG00003.dF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_INP_SUBJECT.ADD_1_LN_2 := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_1_LN_3 := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_1_CTY :=  CBOPKG00003.dF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_INP_SUBJECT.ADD_1_POS_CD := LV_R_CORPORATE_INP_SUBJECT.ADD_1_CTY;
    If LV_R_CORPORATE_INP_SUBJECT.ADD_1_POS_CD IS NOT NULL THEN
       LV_R_CORPORATE_INP_SUBJECT.ADD_1_CTRY := CBOPKG00003.dF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
        LV_R_CORPORATE_INP_SUBJECT.ADD_1_CTRY := NULL;
    End If;
    LV_R_CORPORATE_INP_SUBJECT.ADD_1_TEL_NO := CBOPKG00003.dF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_INP_SUBJECT.ADD_TYPE_2 :=NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_2_LN_1 := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_2_LN_2 := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_2_LN_3 := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_2_CTY := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_2_POS_CD := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_2_CTRY := NULL;
    LV_R_CORPORATE_INP_SUBJECT.ADD_2_TEL_NO := NULL;
    --PATCH ENDS HERE
    LV_N_COMMIT := LV_N_COMMIT + 1;
    
    CBO_DP_AUTO_TRAN('CBO_COR_INP_SUBJECT_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_COR_INP_SUBJECT_DAILY
            (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, SUB_IDEN_CD,
             SUB_PREV_IDEN_CD, SUB_ENT_TYP, IDEN_TYP, IDEN_NO, PREV_IDEN_NO, IDEN_NO_EXP_DT,
             SUB_NAME, SUB_PREV_NAME, SUB_SHORT_NAME, SUB_PREV_SHORT_NAME, GRP_NAME, PREV_GRP_NAME,
             SUB_DT_REG, EC_ACT_TYP, NAT_INST, ADD_TYPE_1, ADD_1_LN_1, ADD_1_LN_2, ADD_1_LN_3,
             ADD_1_CTY, ADD_1_POS_CD, ADD_1_CTRY, ADD_1_TEL_NO, ADD_TYPE_2, ADD_2_LN_1, ADD_2_LN_2,
             ADD_2_LN_3, ADD_2_CTY, ADD_2_POS_CD, ADD_2_CTRY, ADD_2_TEL_NO)
     VALUES (LV_R_CORPORATE_INP_SUBJECT.SEG_IDEN, LV_R_CORPORATE_INP_SUBJECT.DATA_PROV_ID,
              LV_R_CORPORATE_INP_SUBJECT.DATA_PRO_BR_ID, LV_R_CORPORATE_INP_SUBJECT.CR_FAC_ACC_NO,
             LV_R_CORPORATE_INP_SUBJECT.SUB_IDEN_CD, LV_R_CORPORATE_INP_SUBJECT.SUB_PREV_IDEN_CD,
             LV_R_CORPORATE_INP_SUBJECT.SUB_ENT_TYP, LV_R_CORPORATE_INP_SUBJECT.IDEN_TYP,
             LV_R_CORPORATE_INP_SUBJECT.IDEN_NO, LV_R_CORPORATE_INP_SUBJECT.PREV_IDEN_NO,
             LV_R_CORPORATE_INP_SUBJECT.IDEN_NO_EXP_DT, LV_R_CORPORATE_INP_SUBJECT.SUB_NAME,
             LV_R_CORPORATE_INP_SUBJECT.SUB_PREV_NAME, LV_R_CORPORATE_INP_SUBJECT.SUB_SHORT_NAME,
             LV_R_CORPORATE_INP_SUBJECT.SUB_PREV_SHORT_NAME, LV_R_CORPORATE_INP_SUBJECT.GRP_NAME,
             LV_R_CORPORATE_INP_SUBJECT.PREV_GRP_NAME, LV_R_CORPORATE_INP_SUBJECT.SUB_DT_REG,
             LV_R_CORPORATE_INP_SUBJECT.EC_ACT_TYP, LV_R_CORPORATE_INP_SUBJECT.NAT_INST,
             LV_R_CORPORATE_INP_SUBJECT.ADD_TYPE_1, LV_R_CORPORATE_INP_SUBJECT.ADD_1_LN_1,
             LV_R_CORPORATE_INP_SUBJECT.ADD_1_LN_2, LV_R_CORPORATE_INP_SUBJECT.ADD_1_LN_3,
             LV_R_CORPORATE_INP_SUBJECT.ADD_1_CTY, LV_R_CORPORATE_INP_SUBJECT.ADD_1_POS_CD,
             LV_R_CORPORATE_INP_SUBJECT.ADD_1_CTRY, LV_R_CORPORATE_INP_SUBJECT.ADD_1_TEL_NO,
             LV_R_CORPORATE_INP_SUBJECT.ADD_TYPE_2, LV_R_CORPORATE_INP_SUBJECT.ADD_2_LN_1,
             LV_R_CORPORATE_INP_SUBJECT.ADD_2_LN_2, LV_R_CORPORATE_INP_SUBJECT.ADD_2_LN_3,
             LV_R_CORPORATE_INP_SUBJECT.ADD_2_CTY, LV_R_CORPORATE_INP_SUBJECT.ADD_2_POS_CD,
             LV_R_CORPORATE_INP_SUBJECT.ADD_2_CTRY, LV_R_CORPORATE_INP_SUBJECT.ADD_2_TEL_NO);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_COR_INP_SUBJECT_DAILY_19_'||LV_R_CORPORATE_INP_SUBJECT.CR_FAC_ACC_NO||'_'|| Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
 LP_UPDATE_RUN_DATA(22,'C',LV_N_COMMIT);-- CORPORATE INPUT FILE - SUBJECT
 LV_N_COMMIT := 0;
 Exit WHEN PV_V_CONTINUE_PROCESS = 'N';
End If;
End Loop;
LP_UPDATE_RUN_DATA(22,'E',LV_N_COMMIT);-- CORPORATE INPUT FILE - SUBJECT
LV_N_COMMIT := 0;
  CBOPKG00003.dp_Replace_Disall_Chars('CBO_COR_INP_SUBJECT_DAILY');
End If;
-- CORPORATE INPUT FILE - RELATION
LP_UPDATE_RUN_DATA(23,'S');
If PV_N_CNT > 0 THEN
 FOR I IN ( SELECT CCM.CONTRACT_NUMBER,
                   DECODE (CCM.CONTRACT_BRANCH,
                           'CO|HO', 'FL640001',
                           'CO|SL', 'FL640002',
                           'CO|SH', 'FL640003',
                           'CO|BK', 'FL640004',
                           'CO|IB', 'FL640005',
                           'CO|SU', 'FL640006',
                           'CO|NZ', 'FL640007'
                          ) CONTRACT_BRANCH,
                   (SELECT CUSTOMER_CODE FROM S3G_ORG_CUSTMASTER WHERE CUSTOMER_ID = CCA.GUARANTEE_ID)  CUSTOMER_CODE,
                   CCM.CUSTOMER_CODE CCM_CUST_CODE,
                   SCM.NID_CR_RID_NUMBER  CUM_CUSTOMER_REFERENCE,
                   SCM.NATIONALITY  CUM_RESIDENTIAL_CODE, 
                   SOC.CONSTITUTION_CODE  CUM_CONSTITUTION_CODE ,
                   APPLICATION_NUMBER,
                   -- DECODE( CCA.GUARANTEE_TYPE_ID,'151','GU','152', 'AG') CUM_CUSTOMER_TYPE,
                   --  DECODE (NVL(SCM.GUARANTOR1,0) , 1,'GU',0,(DECODE(NVL(GUARANTOR2,0),1,'GU',0,NULL)),NULL) CUM_CUSTOMER_TYPE,
                   DECODE( CCA.GUARANTEE_TYPE_ID,'151', DECODE (NVL(SCM.GUARANTOR1,0) , 1,'GU',0,(DECODE(NVL(GUARANTOR2,0),1,'GU',0,null))),'152', 'AG',null) CUM_CUSTOMER_TYPE,
                   --case when CCA.RELATION_STATUS = 'ACTIVE' THEN '001' ELSE '002' END REL_STATUS --> correction done by ssk while implementing Factoring Guarantor 15-Apr-2015 
                   CASE WHEN NVL(CCA.IS_ACTIVE,0) = '1' THEN '001' ELSE '002' END REL_STATUS 
              FROM CBO_CONTRACT_MASTER_DAILY CCM,
                   S3G_ORG_APPPROCGUARANTORDET CCA,
                   S3G_ORG_CUSTMASTER SCM ,
                   S3G_ORG_CONSTMAST SOC , 
                   S3G_LAD_ACCCREATION  SLA
             WHERE CCM.CONTRACT_NUMBER = SLA.PANUM
               AND SLA.APPLICATION_PROCESS_ID = CCA.APPLICATION_PROCESS_ID
               AND CCA.GUARANTEE_TYPE_ID IN ( '150','151')--  IN ('GU', 'AG')               
               AND SCM.CUSTOMER_ID = CCA.GUARANTEE_ID    
               aND SCM.CONSTITUTION_ID = SOC.CONSTITUTION_ID
               AND SLA.LOB_ID IN (1,2,3)
               AND EXISTS (
                      SELECT 1
                        FROM S3G_ORG_CUSTMASTER A
                       WHERE A.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                         AND A.CONSTITUTION_ID <> 5 )
            UNION ALL
          SELECT CCM.ACCOUNT_NUMBER,
                   DECODE (CCM.BRANCH_CODE,
                           'CO|HO', 'FL640001',
                           'CO|SL', 'FL640002',
                           'CO|SH', 'FL640003',
                           'CO|BK', 'FL640004',
                           'CO|IB', 'FL640005',
                           'CO|SU', 'FL640006',
                           'CO|NZ', 'FL640007'
                          ) CONTRACT_BRANCH,
                   (Select CUSTOMER_CODE FROM S3G_ORG_CUSTMASTER WHERE CUSTOMER_ID = CCA.GUARANTEE_ID) CUSTOMER_CODE,
                   CCM.CLIENT_CODE CCM_CUST_CODE,-->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
                   SCM.NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE,
                   SCM.NATIONALITY CUM_RESIDENTIAL_CODE, 
                   SOC.CONSTITUTION_CODE  CUM_CONSTITUTION_CODE ,
                   NULL, 
                    DECODE( CCA.GUARANTEE_TYPE_ID,'151', DECODE (NVL(SCM.GUARANTOR1,0) , 1,'GU',0,(DECODE(NVL(GUARANTOR2,0),1,'GU',0,NULL))),'152', 'AG',NULL) CUM_CUSTOMER_TYPE, 
                    --DECODE( CCA.GUARANTEE_TYPE_ID,'151','GU','152', 'AG') CUM_CUSTOMER_TYPE,                   
                   CASE WHEN NVL(CCA.IS_ACTIVE,0) = '1' THEN '001' ELSE '002' END REL_STATUS 
              FROM FW_REGISTRATION_MASTER_DAILY CCM,
                   --CC_CONTRACT_ADDL_APPL_DTLS CCA,
                   S3G_ORG_APPPROCGUARANTORDET CCA,
                   S3G_ORG_CUSTMASTER SCM ,
                   S3G_LAD_ACCCREATION  SLA ,
                   S3G_ORG_CONSTMAST SOC 
             WHERE CCM.ACCOUNT_NUMBER = SLA.PANUM
               AND SLA.LOB_ID IN (4,5,6)
               AND GUARANTEE_TYPE_ID IN ('151','150' )-- CCA.CUSTOMER_TYPE IN ('GU', 'AG')
               AND SLA.APPLICATION_PROCESS_ID = CCA.APPLICATION_PROCESS_ID 
               aND SCM.CONSTITUTION_ID = SOC.CONSTITUTION_ID
               --AND SCM.CUM_CUSTOMER_CODE = CCA.CUSTOMER_CODE
                 AND SCM.CUSTOMER_ID       = CCA.GUARANTEE_ID
                 AND EXISTS (
                      SELECT 1
                        FROM S3G_ORG_CUSTMASTER A
                       WHERE A.CUSTOMER_CODE = CCM.CLIENT_CODE
                         AND A.CONSTITUTION_ID <> 5)
               )          
               /* --> correction done by ssk while implementing Factoring Guarantor 15-Apr-2015 for performance
               AND EXISTS (   SELECT 1
                                FROM SA_CUSTOMER_MASTER A
                               WHERE A.CUM_CUSTOMER_CODE = CCM.CUSTOMER_CODE
                                 AND A.CUM_CONSTITUTION_CODE <> 1)) */
Loop
Begin
LV_R_CORPORATE_INP_RELATION.SEG_IDEN := 'CMRS';
LV_R_CORPORATE_INP_RELATION.DATA_PROV_ID := 'FL640000';
LV_R_CORPORATE_INP_RELATION.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
LV_R_CORPORATE_INP_RELATION.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;

LV_R_CORPORATE_INP_RELATION.SUB_IDEN_CD := I.CCM_CUST_CODE;
 If I.CUM_CUSTOMER_TYPE = 'GU' AND I.CUM_CONSTITUTION_CODE = 1 THEN
  LV_R_CORPORATE_INP_RELATION.NAT_OF_REL_SHP := '009' ;
 Elsif I.CUM_CUSTOMER_TYPE = 'GU' AND I.CUM_CONSTITUTION_CODE <> 1 THEN
  LV_R_CORPORATE_INP_RELATION.NAT_OF_REL_SHP := '008';
 ELSE
  LV_R_CORPORATE_INP_RELATION.NAT_OF_REL_SHP := '008';
 End If;

If I.CUM_CONSTITUTION_CODE = 1 THEN
LV_R_CORPORATE_INP_RELATION.REL_IND_DT_OF_BIR :=  CBOPKG00003.dF_D_CBO_DATE_OF_BIRTH(I.CUSTOMER_CODE);
LV_R_CORPORATE_INP_RELATION.REL_ENT_TYPE := '001';
ELSE

LV_R_CORPORATE_INP_RELATION.REL_IND_DT_OF_BIR := CBOPKG00003.df_V_Cbo_Cr_Issue_Date(I.CUSTOMER_CODE);
LV_R_CORPORATE_INP_RELATION.REL_ENT_TYPE := '002';
END IF;
 IF I.CUM_CONSTITUTION_CODE = 1 THEN
      If I.CUM_RESIDENTIAL_CODE = 100 THEN
         LV_R_CORPORATE_INP_RELATION.IDEN_TYP := '001';--FOR CIVIL IDENTIFICATION NUMBER(NID)
     -->Patch By Mathialagan P for MFC-393 ON 23-AUG-2010
      Elsif I.CUM_RESIDENTIAL_CODE NOT IN (100,466,419,453,456,443) THEN --->>For other than GCC countries the Labour Card must be the Identifier <<---
             LV_R_CORPORATE_INP_RELATION.IDEN_TYP := '002';--FOR RESIDENT IDENTIFICATION NUMBER(Labour Card)
     -->Patch End
      ELSE
         -- LV_R_CORPORATE_INP_RELATION.IDEN_TYP := '003'; -- FOR PASSPORT NUMBER  -- Comment By Sudeesh For DLVE046 on 09-Oct-2015      
         LV_R_CORPORATE_INP_RELATION.IDEN_TYP := '006'; -- FOR PASSPORT NUMBER     -- Added Code By Sudeesh For DLVE046 on 09-Oct-2015  
      End If;
 ELSE
      LV_R_CORPORATE_INP_RELATION.IDEN_TYP := '004'; --FOR COMPANY REGISTRATION NUMBER(CR NO)
 End If;

    IF     LV_R_CORPORATE_INP_RELATION.IDEN_TYP = '001' THEN
    LV_R_CORPORATE_INP_RELATION.IDEN_NO := I.CUM_CUSTOMER_REFERENCE ;-->CBOPKG00003.df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
    --> Elsif Added By Babu I for call MFC-393 On 23-AUG-2010 <<--
    Elsif LV_R_CORPORATE_INP_RELATION.IDEN_TYP = '002' THEN
    LV_R_CORPORATE_INP_RELATION.IDEN_NO := CBOPKG00003.dF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
    ELSE
    LV_R_CORPORATE_INP_RELATION.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
    End If;
LV_R_CORPORATE_INP_RELATION.PREV_IDEN_NO := NULL;
LV_R_CORPORATE_INP_RELATION.IDEN_NO_EXP_DT := CBOPKG00003.dF_D_CBO_Subject_Expiry_date(I.CUSTOMER_CODE);
if LV_R_CORPORATE_INP_RELATION.IDEN_NO_EXP_DT <= trunc(sysdate) then --ptach by rajam 13/11/2017
    LV_R_CORPORATE_INP_RELATION.IDEN_NO_EXP_DT := trunc(sysdate)+30;
end if;
LV_R_CORPORATE_INP_RELATION.REL_IND_ENT_NAME := CBOPKG00003.dF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.CUSTOMER_CODE);
LV_R_CORPORATE_INP_RELATION.REL_IND_ENT_PREV_NAME := NULL;
--sridhar patch here on 19/08/2010 --MFC-393
--LV_R_CORPORATE_INP_RELATION.REL_IND_NAT := CBOPKG00003.dF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE); sridhar
    If I.CUM_CONSTITUTION_CODE = 1 THEN
     LV_R_CORPORATE_INP_RELATION.REL_IND_NAT := CBOPKG00003.dF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
     LV_R_CORPORATE_INP_RELATION.REL_IND_NAT := NULL;
    End If;
--patch ends here
LV_R_CORPORATE_INP_RELATION.REL_IND_GEN := CBOPKG00003.dF_V_CBO_GENDER(I.CUSTOMER_CODE);
If I.CUM_CONSTITUTION_CODE <> 1 THEN
LV_R_CORPORATE_INP_RELATION.EC_ACT_TYP := CBOPKG00003.dF_V_CBO_ECONOMIC_ACTIVITY(I.CUSTOMER_CODE);
ELSE
LV_R_CORPORATE_INP_RELATION.EC_ACT_TYP := NULL;
End If;
--SRIDHAR PATCHED HERE 19/08/2010 --MFC-393
--LV_R_CORPORATE_INP_RELATION.REL_BUS_ENT_NAT_INST := CBOPKG00003.dF_V_CBO_NAT_OF_INST(I.CUM_CONSTITUTION_CODE);  SRIDHAR
IF LV_R_CORPORATE_INP_RELATION.REL_ENT_TYPE <> '001' THEN
LV_R_CORPORATE_INP_RELATION.REL_BUS_ENT_NAT_INST :=  CBOPKG00003.dF_V_CBO_NAT_OF_INST_1(I.CUM_CONSTITUTION_CODE);
ELSE
LV_R_CORPORATE_INP_RELATION.REL_BUS_ENT_NAT_INST := NULL;
End If;
--PATCH ENDS HERE
--LV_R_CORPORATE_INP_RELATION.REL_STATUS := CBOPKG00003.dF_V_CBO_REL_STATUS(I.CONTRACT_NUMBER, I.CUSTOMER_CODE); -->> Patched By Sudeesh On 14-03-2014 (Guarantor Active -InActive Issue)
LV_R_CORPORATE_INP_RELATION.REL_STATUS := i.rel_status;  --> correction done by ssk while implementing Factoring Guarantor 15-Apr-2015 
--LV_R_CORPORATE_INP_RELATION.REL_STATUS := CBOPKG00003.df_V_Cbo_Rel_Status(I.APPLICATION_NUMBER); -->> Comment By Sudeesh On 14-03-2014 (Guarantor Active -InActive Issue)
LV_R_CORPORATE_INP_RELATION.ADD_TYP := '001';
LV_R_CORPORATE_INP_RELATION.ADD_LINE_1 := CBOPKG00003.dF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
LV_R_CORPORATE_INP_RELATION.ADD_LINE_2 := NULL;
LV_R_CORPORATE_INP_RELATION.ADD_LINE_3 := NULL;
LV_R_CORPORATE_INP_RELATION.ADD_CITY := CBOPKG00003.dF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
LV_R_CORPORATE_INP_RELATION.ADD_POS_COD := LV_R_CORPORATE_INP_RELATION.ADD_CITY;
LV_R_CORPORATE_INP_RELATION.ADD_CTRY := CBOPKG00003.dF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
LV_R_CORPORATE_INP_RELATION.TEL_NO := CBOPKG00003.dF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_COR_INP_RELATION_DAILY-INSERT==>'||I.contract_number);
INSERT INTO CBO_COR_INP_RELATION_DAILY
          (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, SUB_IDEN_CD,
             NAT_OF_REL_SHP, REL_ENT_TYPE, IDEN_TYP, IDEN_NO, PREV_IDEN_NO,
             IDEN_NO_EXP_DT, REL_IND_ENT_NAME, REL_IND_ENT_PREV_NAME, REL_IND_NAT,
             REL_IND_DT_OF_BIR, REL_IND_GEN, EC_ACT_TYP, REL_BUS_ENT_NAT_INST,
             REL_STATUS, ADD_TYP, ADD_LINE_1, ADD_LINE_2, ADD_LINE_3, ADD_CITY,
             ADD_POS_COD, ADD_CTRY, TEL_NO)
 VALUES (LV_R_CORPORATE_INP_RELATION.SEG_IDEN, LV_R_CORPORATE_INP_RELATION.DATA_PROV_ID,
             LV_R_CORPORATE_INP_RELATION.DATA_PRO_BR_ID, LV_R_CORPORATE_INP_RELATION.CR_FAC_ACC_NO,
             LV_R_CORPORATE_INP_RELATION.SUB_IDEN_CD, LV_R_CORPORATE_INP_RELATION.NAT_OF_REL_SHP,
             LV_R_CORPORATE_INP_RELATION.REL_ENT_TYPE, LV_R_CORPORATE_INP_RELATION.IDEN_TYP,
             LV_R_CORPORATE_INP_RELATION.IDEN_NO, LV_R_CORPORATE_INP_RELATION.PREV_IDEN_NO,
             LV_R_CORPORATE_INP_RELATION.IDEN_NO_EXP_DT, LV_R_CORPORATE_INP_RELATION.REL_IND_ENT_NAME,
             LV_R_CORPORATE_INP_RELATION.REL_IND_ENT_PREV_NAME, LV_R_CORPORATE_INP_RELATION.REL_IND_NAT,
             LV_R_CORPORATE_INP_RELATION.REL_IND_DT_OF_BIR, LV_R_CORPORATE_INP_RELATION.REL_IND_GEN,
             LV_R_CORPORATE_INP_RELATION.EC_ACT_TYP, LV_R_CORPORATE_INP_RELATION.REL_BUS_ENT_NAT_INST,
             LV_R_CORPORATE_INP_RELATION.REL_STATUS, LV_R_CORPORATE_INP_RELATION.ADD_TYP,
             LV_R_CORPORATE_INP_RELATION.ADD_LINE_1, LV_R_CORPORATE_INP_RELATION.ADD_LINE_2,
             LV_R_CORPORATE_INP_RELATION.ADD_LINE_3, LV_R_CORPORATE_INP_RELATION.ADD_CITY,
             LV_R_CORPORATE_INP_RELATION.ADD_POS_COD, LV_R_CORPORATE_INP_RELATION.ADD_CTRY, LV_R_CORPORATE_INP_RELATION.TEL_NO);
Exception
    WHEN OTHERS THEN
             Dp_Set_Error('CBO_COR_INP_RELATION_DAILY_20'||'_'||Sqlerrm);
End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(23,'C',LV_N_COMMIT);-- CORPORATE INPUT FILE - RELATION
 LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'N';
End If;
End Loop;

-- CORPORATE INPUT FILE - RELATION
LP_UPDATE_RUN_DATA(23,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  CBOPKG00003.dp_Replace_Disall_Chars('CBO_COR_INP_RELATION_DAILY');
End If;
-- CORPORATE INPUT FILE - SECURITY
LP_UPDATE_RUN_DATA(24,'S');-- CORPORATE INPUT FILE - SECURITY
If Pv_N_Cnt > 0 Then
 FOR I IN (SELECT CCM.CONTRACT_NUMBER,
       DECODE (CCM.CONTRACT_BRANCH,
               'CO|HO', 'FL640001',
               'CO|SL', 'FL640002',
               'CO|SH', 'FL640003',
               'CO|BK', 'FL640004',
               'CO|IB', 'FL640005',
               'CO|SU', 'FL640006',
               'CO|NZ', 'FL640007'
               ) CONTRACT_BRANCH,
                   'A' SECURITY_INDICATOR, AGREEMENT_DATE CREATION_DATE,
                   --DECODE (CONTRACT_TYPE, 1, '001', 2, '002') CONTRACT_TYPE,-->>  Patched by Mathialagan P for call MFC-393 on 27-AUG-2010  <<--
                   DECODE (CONTRACT_TYPE, 1, '001', 2, '002',3,'001') CONTRACT_TYPE, --For Contract type - Both
                   CCA.ASSET_ID ASSET_MASTER_CODE, 
                   CCM.APPLICATION_NUMBER, 
                   REGN_NUMBER REF1_NUMBER,
                   CHASIS_NUMBER REF2_NUMBER, ENGINE_NUMBER REF3_NUMBER, CCA.ASSET_NUMBER ASSET_NUMBER,
                   ASSET_COST, REF_SLNO ASSET_CONTRACT_REF_SLNO -->> ASSET_CONTRACT_REF_SLNO Field Included by Babu I for call MFC-393 on 23-AUG-2010 <<--
              FROM CBO_CONTRACT_MASTER_DAILY CCM,
                   S3G_ORG_CUSTMASTER SCM,
                   S3g_Lad_Accpasadet SLA ,
                   S3g_Lad_Accastdet CCA
             WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
               AND CONSTITUTION_ID <> 5
               AND CCM.CONTRACT_NUMBER = SLA.PANUM
               AND Cca.Pa_Sa_Ref_Id = Sla.Pa_Sa_Ref_Id
               AND CCA.ASSET_NUMBER IS NOT NULL	
            ORDER BY 1 )
Loop
Begin
LV_R_CORPORATE_INP_SECURITY.SEG_IDEN := 'CMSS';
LV_R_CORPORATE_INP_SECURITY.DATA_PROV_ID := 'FL640000';
LV_R_CORPORATE_INP_SECURITY.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
LV_R_CORPORATE_INP_SECURITY.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;

LV_R_CORPORATE_INP_SECURITY.TYP_OF_SEC := NVL(CBOPKG00003.dF_V_CBO_SECURITY_TYPE(I.APPLICATION_NUMBER,I.ASSET_CONTRACT_REF_SLNO),'013'); 
LV_R_CORPORATE_INP_SECURITY.EST_VAL_SEC := ROUND(I.ASSET_COST);
LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1_TYP := CBOPKG00003.dF_V_CBO_SECURITY_ID(I.APPLICATION_NUMBER,'TYPE',1,I.ASSET_CONTRACT_REF_SLNO);


If LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1_TYP = '003' THEN
  If I.REF1_NUMBER IS NULL  OR I.REF1_NUMBER IN ('0','x','X') THEN
  LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1 := '1101AB';
  ELSE
  LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1 := I.REF1_NUMBER ;
  End If;
Elsif LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1_TYP = '004' THEN
  If I.REF2_NUMBER IS NULL OR I.REF2_NUMBER IN ('0','x','X') THEN
  LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1 := '1MFC6X400936311';
  ELSE
  LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1 := I.REF2_NUMBER ;
  End If;
Elsif LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1_TYP = '005' THEN
  If I.REF3_NUMBER IS NULL OR I.REF3_NUMBER IN ('0','x','X')  THEN
  LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1 := '61198170085962';
  ELSE
  LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1 := I.REF3_NUMBER ;
  End If;

ELSE

LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1 := CBOPKG00003.dF_V_CBO_SECURITY_ID(I.APPLICATION_NUMBER,'VALUE',1,I.ASSET_CONTRACT_REF_SLNO);

End If;

LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_2_TYP := NULL;
LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_2 := NULL;
LV_R_CORPORATE_INP_SECURITY.DT_LAT_VAL := NVL(CBOPKG00003.dF_V_CBO_REG_DATE(I.CONTRACT_NUMBER,I.ASSET_NUMBER),I.CREATION_DATE);
LV_R_CORPORATE_INP_SECURITY.SEC_COV_PER := CBOPKG00003.dF_V_CBO_SECURITY_PERCENT(I.CONTRACT_NUMBER,I.ASSET_NUMBER,LV_D_PARAM_DATE,I.ASSET_MASTER_CODE,I.CREATION_DATE);
LV_R_CORPORATE_INP_SECURITY.NAT_OF_CHANGE := '001';

If LV_R_CORPORATE_INP_SECURITY.TYP_OF_SEC ='013' THEN
LV_R_CORPORATE_INP_SECURITY.VEH_VIN :=I.CONTRACT_TYPE;
LV_R_CORPORATE_INP_SECURITY.END_USE_AST := CBOPKG00003.dF_V_CBO_ASSET_USAGE(I.ASSET_MASTER_CODE);
ELSE
LV_R_CORPORATE_INP_SECURITY.VEH_VIN := NULL;
LV_R_CORPORATE_INP_SECURITY.END_USE_AST :=NULL;
End If;
-->> Pathch End By Mathialagan P <<--
LV_R_CORPORATE_INP_SECURITY.DT_CREA_SEC := LV_R_CORPORATE_INP_SECURITY.DT_LAT_VAL;
LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_COR_INP_SECURITY_DAILY-INSERT==>'||I.contract_number);
INSERT INTO CBO_COR_INP_SECURITY_DAILY
        (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, TYP_OF_SEC, NAT_OF_CHANGE,
         DT_CREA_SEC, SEC_COV_PER, EST_VAL_SEC, DT_LAT_VAL, VEH_VIN, END_USE_AST, SEC_IDEN_1_TYP,
         SEC_IDEN_1, SEC_IDEN_2_TYP, SEC_IDEN_2)
 VALUES (LV_R_CORPORATE_INP_SECURITY.SEG_IDEN, LV_R_CORPORATE_INP_SECURITY.DATA_PROV_ID,
          LV_R_CORPORATE_INP_SECURITY.DATA_PRO_BR_ID, LV_R_CORPORATE_INP_SECURITY.CR_FAC_ACC_NO,
         LV_R_CORPORATE_INP_SECURITY.TYP_OF_SEC, LV_R_CORPORATE_INP_SECURITY.NAT_OF_CHANGE,
         LV_R_CORPORATE_INP_SECURITY.DT_CREA_SEC, LV_R_CORPORATE_INP_SECURITY.SEC_COV_PER,
         LV_R_CORPORATE_INP_SECURITY.EST_VAL_SEC, LV_R_CORPORATE_INP_SECURITY.DT_LAT_VAL,
         LV_R_CORPORATE_INP_SECURITY.VEH_VIN, LV_R_CORPORATE_INP_SECURITY.END_USE_AST,
         LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1_TYP, LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_1,
         LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_2_TYP, LV_R_CORPORATE_INP_SECURITY.SEC_IDEN_2);
Exception
    WHEN OTHERS THEN
         Dp_Set_Error('CBO_COR_INP_SECURITY_DAILY_21'||'_'||Sqlerrm);
End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(24,'C',LV_N_COMMIT);-- CORPORATE INPUT FILE - SECURITY
 LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'N';
End If;

End Loop;
 LP_UPDATE_RUN_DATA(24,'E',LV_N_COMMIT);-- CORPORATE INPUT FILE - SECURITY
 LV_N_COMMIT := 0;
 CBOPKG00003.dp_Replace_Disall_Chars('CBO_COR_INP_SECURITY_DAILY');
End If;
-- CORPORATE INPUT FILE - TRAILER
LP_UPDATE_RUN_DATA(25,'S');

If PV_N_CNT > 0 THEN
    -- CORPORATE INPUT FILE - TRAILER

    Begin

    LV_R_CORPORATE_INP_TRAILER.SEG_IDEN := 'TLTL';
    LV_R_CORPORATE_INP_TRAILER.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_INP_TRAILER.NO_CR_FAC := LV_N_CNT;
    
    CBO_DP_AUTO_TRAN('CBO_COR_INP_TRAILER_DAILY-INSERT==>');
    INSERT INTO CBO_COR_INP_TRAILER_DAILY
            (SEG_IDEN, DATA_PROV_ID, NO_CR_FAC)
     VALUES (LV_R_CORPORATE_INP_TRAILER.SEG_IDEN,
              LV_R_CORPORATE_INP_TRAILER.DATA_PROV_ID,
             LV_R_CORPORATE_INP_TRAILER.NO_CR_FAC);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_COR_INP_TRAILER_DAILY_22'||LV_R_CORPORATE_INP_TRAILER.SEG_IDEN||'_'||Sqlerrm);
    End;
LP_UPDATE_RUN_DATA(25,'E',1);-- CORPORATE INPUT FILE - TRAILER

End If;
End DP_CBO_CORPORATE_INPUT;



Function DF_V_CBO_MAX_LEND_LIMIT(IV_V_CUST_CODE IN VARCHAR2) Return NUMBER
IS
Lv_n_Max_Limit    NUMBER:=0;
Begin
SELECT MAX_LEND_AMOUNT
INTO   Lv_n_Max_Limit
FROM   S3G_ORG_CUSTMASTER 
WHERE  CUSTOMER_CODE = IV_V_CUST_CODE;
Return Lv_n_Max_Limit;
Exception
    WHEN NO_DATA_FOUND THEN
               Return 0;
END DF_V_CBO_MAX_LEND_LIMIT;




Procedure DP_CBO_SENIOR_MEMBER(IV_D_ASON_DATE DATE) IS
       LV_D_PARAM_DATE DATE := IV_D_ASON_DATE;
       LV_V_SENIOR_MEMBER_APPL     NUMBER ;-->:= Df_N_Get_Param_Value('SENIOR MEMBER APPLICABILITY');
       LV_V_SENIOR_MEMBER_PROF     NUMBER ;-->:= ;Df_N_Get_Param_Value('DESIGNATION');
       LV_V_SENIOR_MEMBER_STATUS   NUMBER ;-->:= ;Df_N_Get_Param_Value('SENIOR MEMBER STATUS');
       LV_V_SENIOR_MEMBER_RELATION NUMBER ;-->:= ;Df_N_Get_Param_Value('RELATION');
       LV_R_SENIOR_MEMBER_HEADER   CBO_SEN_MEMBER_HEADER_DAILY%Rowtype;
       LV_R_SENIOR_MEMBER_SUBJECT  CBO_SEN_MEMBER_SUBJECT_DAILY%Rowtype;
       LV_R_SENIOR_MEMBER_RELATION CBO_SEN_MEMBER_RELATION_DAILY%Rowtype;
       LV_R_SENIOR_MEMBER_TRAILER  CBO_SEN_MEMBER_TRAILER_DAILY%Rowtype;
       LV_N_CNT NUMBER:=0;
       LV_N_COMMIT NUMBER := 0;
Begin
DELETE FROM CBO_SEN_MEMBER_HEADER_DAILY;
DELETE FROM CBO_SEN_MEMBER_SUBJECT_DAILY;
DELETE FROM CBO_SEN_MEMBER_RELATION_DAILY;
DELETE FROM CBO_SEN_MEMBER_TRAILER_DAILY;
LV_D_PARAM_DATE := trunc(sysdate);
LP_UPDATE_RUN_DATA(37,'S');
If PV_N_CNT > 0 THEN
Begin
LV_R_SENIOR_MEMBER_HEADER.SEG_IDEN := 'HDHD';
LV_R_SENIOR_MEMBER_HEADER.DATA_PROV_ID := 'FL640000';
LV_R_SENIOR_MEMBER_HEADER.REP_DATE := LV_D_PARAM_DATE;
LV_R_SENIOR_MEMBER_HEADER.REP_TIME := TRUNC(LV_D_PARAM_DATE) - 1/(24*60*60);
LV_R_SENIOR_MEMBER_HEADER.DT_PRE_IN_FILE := TRUNC(SYSDATE);
LV_R_SENIOR_MEMBER_HEADER.NAT_DATA := '003';
LV_R_SENIOR_MEMBER_HEADER.IFF_VERSION := 3; --Df_V_Const_Ref_Dir('SENIOR_MEMBER_VERSION_DAILY');


CBO_DP_AUTO_TRAN('CBO_SEN_MEMBER_HEADER_DAILY-INSERT==>');
INSERT INTO CBO_SEN_MEMBER_HEADER_DAILY
        (SEG_IDEN, DATA_PROV_ID, REP_DATE, REP_TIME, DT_PRE_IN_FILE, NAT_DATA, IFF_VERSION)
 VALUES (LV_R_SENIOR_MEMBER_HEADER.SEG_IDEN, LV_R_SENIOR_MEMBER_HEADER.DATA_PROV_ID,
          LV_R_SENIOR_MEMBER_HEADER.REP_DATE, LV_R_SENIOR_MEMBER_HEADER.REP_TIME,
         LV_R_SENIOR_MEMBER_HEADER.DT_PRE_IN_FILE, LV_R_SENIOR_MEMBER_HEADER.NAT_DATA,
         LV_R_SENIOR_MEMBER_HEADER.IFF_VERSION);
Exception
    WHEN OTHERS THEN
         Dp_Set_Error('CBO_SEN_MEMBER_HEADER_DAILY 23'||LV_R_SENIOR_MEMBER_HEADER.SEG_IDEN||'_'|| Sqlerrm);
End;
  LP_UPDATE_RUN_DATA(37,'E', 1);
End If;

LP_UPDATE_RUN_DATA(38,'S');
If PV_N_CNT > 0 THEN
FOR I IN (Select SCM.*   
              From S3G_ORG_CUSTMASTER SCM 
             WHERE  SENI_MEM_APPLICABLE = 1
             AND NOT EXISTS(SELECT 1
                              FROM S3G_ORG_CUST_SENI_REL_DTL dtl
                             WHERE SCM.CUSTOMER_ID = dtl.REL_CUSTOMER_ID )
          )
         
Loop
Begin
LV_N_CNT := LV_N_CNT + 1;
LV_R_SENIOR_MEMBER_SUBJECT.SEG_IDEN := 'SMCS';
LV_R_SENIOR_MEMBER_SUBJECT.DATA_PROV_ID := 'FL640000';
LV_R_SENIOR_MEMBER_SUBJECT.PREV_DATA_PROV_ID := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.DATA_PRO_BR_ID := 'FL640001';
-->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
-- LV_R_SENIOR_MEMBER_SUBJECT.PREV_DATA_PRO_BR_ID := 'FL640001';
LV_R_SENIOR_MEMBER_SUBJECT.PREV_DATA_PRO_BR_ID :=NULL;
   -->> Pathch End By Mathialagan P <<--
LV_R_SENIOR_MEMBER_SUBJECT.SUB_IDEN_CD := I.CUSTOMER_CODE;
LV_R_SENIOR_MEMBER_SUBJECT.SUB_PREV_IDEN_CD := NULL;
If I.CONSTITUTION_ID = 5 THEN
 LV_R_SENIOR_MEMBER_SUBJECT.SM_ENTITY_TYPE := '001';
 LV_R_SENIOR_MEMBER_SUBJECT.SUB_DOB_EDOR := Cbopkg00003.DF_D_CBO_DATE_OF_BIRTH(I.CUSTOMER_CODE);
 LV_R_SENIOR_MEMBER_SUBJECT.SUB_GEN := Cbopkg00003.DF_V_CBO_GENDER(I.CUSTOMER_CODE);
ELSE
 LV_R_SENIOR_MEMBER_SUBJECT.SUB_DOB_EDOR := Cbopkg00003.Df_V_Cbo_Cr_Issue_Date(I.CUSTOMER_CODE);
 LV_R_SENIOR_MEMBER_SUBJECT.SUB_GEN := NULL;
 LV_R_SENIOR_MEMBER_SUBJECT.SM_ENTITY_TYPE := '002';
END IF;
 If I.CONSTITUTION_ID = 5 THEN
      If I.NATIONALITY = 100 THEN
         LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_TYPE := '001';--FOR CIVIL IDENTIFICATION NUMBER(NID)          
      Elsif I.NATIONALITY NOT IN (100,466,419,453,456,443) THEN --->>For other than GCC countries the Labour Card must be the Identifier <<---
             LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_TYPE := '002';--FOR RESIDENT IDENTIFICATION NUMBER(Labour Card)     
      ELSE         
         LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_TYPE := '006'; -- FOR PASSPORT NUMBER    
      End If;
 ELSE
      LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_TYPE := '004'; --FOR COMPANY REGISTRATION NUMBER(CR NO)
 End If;

  If LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_TYPE = '001' THEN
   LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_NO := I.NID_CR_RID_NUMBER ;---> Cbopkg00003.Df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
  
  Elsif LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_TYPE = '002' THEN
   LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
  ELSE
   LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_NO := I.NID_CR_RID_NUMBER ;-->NVL( DF_V_GET_NRID_NUMBER(I.CUSTOMER_CODE), I.CUM_CUSTOMER_REFERENCE);

  End If;
  LV_R_SENIOR_MEMBER_SUBJECT.PREV_SM_IDEN_NO := NULL;
  LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_NO_EXP_DT := CASE WHEN  CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) <= TRUNC(LV_D_PARAM_DATE) THEN 
                                                              ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) 
                                                        ELSE CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) END; 
LV_R_SENIOR_MEMBER_SUBJECT.SUB_NAME := I.CUSTOMER_NAME;--> Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.CUM_CUSTOMER_CODE);
LV_R_SENIOR_MEMBER_SUBJECT.SUB_PREV_NAME := NULL;
If I.CONSTITUTION_ID = 5 THEN
   LV_R_SENIOR_MEMBER_SUBJECT.SUB_NAT :=  Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.NATIONALITY);
ELSE
    LV_R_SENIOR_MEMBER_SUBJECT.SUB_NAT := NULL;
END IF;
LV_R_SENIOR_MEMBER_SUBJECT.SUB_PROF         := UPPER(I.DESIGNATION) ;--> Cbopkg00003.DF_V_CBO_PARAM_VALUE(I.CUM_CUSTOMER_CODE,LV_V_SENIOR_MEMBER_PROF,'u');
LV_R_SENIOR_MEMBER_SUBJECT.SUB_NAT_OF_INST  := CBOPKG00003.DF_V_CBO_NAT_OF_INST(I.CONSTITUTION_ID);
LV_R_SENIOR_MEMBER_SUBJECT.SM_STATUS        := I.SENI_MEM_STATUS;--> Cbopkg00003.DF_V_CBO_PARAM_VALUE(I.CUSTOMER_CODE,LV_V_SENIOR_MEMBER_STATUS,'Y');
LV_R_SENIOR_MEMBER_SUBJECT.SM_RELATION_IND  := Cbopkg00003.DF_V_CBO_RELATION_IND(I.CUSTOMER_CODE);
LV_R_SENIOR_MEMBER_SUBJECT.ADD_TYPE_1       := '001';
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_LN_1       := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_LN_2 := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_LN_3 := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_CTY := Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_POS_CD := LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_CTY;
If I.CONSTITUTION_ID = 5 THEN
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_CTRY := 'OMN';
ELSE
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_CTRY := NULL;
End If;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_TEL_NO := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
LV_R_SENIOR_MEMBER_SUBJECT.ADD_TYPE_2 := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_LN_1 := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_LN_2 := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_LN_3 := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_CTY  := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_POS_CD:=NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_CTRY := NULL;
LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_TEL_NO :=NULL;
LV_N_COMMIT := LV_N_COMMIT + 1;
CBO_DP_AUTO_TRAN('CBO_SEN_MEMBER_SUBJECT_DAILY-INSERT==>');
INSERT INTO CBO_SEN_MEMBER_SUBJECT_DAILY(seg_iden, data_prov_id, prev_data_prov_id, data_pro_br_id, prev_data_pro_br_id,
                                       sub_iden_cd, sub_prev_iden_cd, sm_entity_type, sm_iden_type, sm_iden_no,
                                        prev_sm_iden_no, sm_iden_no_exp_dt, sub_name, sub_prev_name, sub_nat, sub_prof,
                                        sub_dob_edor, sub_gen, sub_nat_of_inst, sm_status, sm_relation_ind, add_type_1,
                                        add_1_ln_1, add_1_ln_2, add_1_ln_3, add_1_cty, add_1_pos_cd, add_1_ctry,
                                        add_1_tel_no, add_type_2, add_2_ln_1, add_2_ln_2, add_2_ln_3, add_2_cty,
                                        add_2_pos_cd, add_2_ctry, add_2_tel_no )
                                VALUES (LV_R_SENIOR_MEMBER_SUBJECT.SEG_IDEN, LV_R_SENIOR_MEMBER_SUBJECT.DATA_PROV_ID,
                                          LV_R_SENIOR_MEMBER_SUBJECT.PREV_DATA_PROV_ID, LV_R_SENIOR_MEMBER_SUBJECT.DATA_PRO_BR_ID,
                                       LV_R_SENIOR_MEMBER_SUBJECT.PREV_DATA_PRO_BR_ID, LV_R_SENIOR_MEMBER_SUBJECT.SUB_IDEN_CD,
                                       LV_R_SENIOR_MEMBER_SUBJECT.SUB_PREV_IDEN_CD, LV_R_SENIOR_MEMBER_SUBJECT.SM_ENTITY_TYPE,
                                       LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_TYPE, LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_NO ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.PREV_SM_IDEN_NO, LV_R_SENIOR_MEMBER_SUBJECT.SM_IDEN_NO_EXP_DT,
                                       LV_R_SENIOR_MEMBER_SUBJECT.SUB_NAME , LV_R_SENIOR_MEMBER_SUBJECT.SUB_PREV_NAME,
                                       LV_R_SENIOR_MEMBER_SUBJECT.SUB_NAT , LV_R_SENIOR_MEMBER_SUBJECT.SUB_PROF ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.SUB_DOB_EDOR, LV_R_SENIOR_MEMBER_SUBJECT.SUB_GEN ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.SUB_NAT_OF_INST, LV_R_SENIOR_MEMBER_SUBJECT.SM_STATUS ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.SM_RELATION_IND, LV_R_SENIOR_MEMBER_SUBJECT.ADD_TYPE_1 ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_LN_1 , LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_LN_2 ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_LN_3 , LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_CTY ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_POS_CD, LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_CTRY ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_1_TEL_NO , LV_R_SENIOR_MEMBER_SUBJECT.ADD_TYPE_2 ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_LN_1 , LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_LN_2 ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_LN_3 , LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_CTY ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_POS_CD, LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_CTRY ,
                                       LV_R_SENIOR_MEMBER_SUBJECT.ADD_2_TEL_NO
                                      );
Exception
    WHEN OTHERS THEN
         Dp_Set_Error('CBO_SEN_MEMBER_SUBJECT_DAILY_25'||LV_R_SENIOR_MEMBER_SUBJECT.SUB_IDEN_CD||'_'|| Sqlerrm);
End;
If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
 LP_UPDATE_RUN_DATA(38,'C',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(38,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
 Cbopkg00003.Dp_Replace_Disall_Chars('CBO_SEN_MEMBER_SUBJECT_DAILY');
End If;
-- SENIOR MEMBER FILE - RELATION
LP_UPDATE_RUN_DATA(39, 'S');
If PV_N_CNT > 0 THEN
FOR I IN (SELECT SCM.NATIONALITY CUM_RESIDENTIAL_CODE, 
                 SCM.CONSTITUTION_ID CUM_CONSTITUTION_CODE, 
                 SCM.NID_CR_RID_NUMBER CUM_CUSTOMER_REFERENCE,
                 SMR.CUSTOMER_ID RELATION_CUSTOMER_CODE, 
                 SMR.REL_IND_CODE RELATION,
                 SMR.REL_CUSTOMER_ID SR_MEMBER_CODE, 
                 SCM.CUSTOMER_TYPE_ID CUM_CUSTOMER_TYPE 
                 ,SCM.GUARANTOR1
                 ,(Select CUSTOMER_NAME FROM S3g_Org_Custmaster B WHERE B.CUSTOMER_ID  = SMR.REL_CUSTOMER_ID ) SR_MEMBER_NAME 
            FROM S3g_Org_Custmaster SCM,S3G_ORG_CUST_SENI_REL_DTL SMR
           WHERE smr.CUSTOMER_ID = SCM.CUSTOMER_id
           AND   SMR.IS_ACTIVE =1 
            AND  SCM.SENI_MEM_APPLICABLE = 1)
Loop
Begin
LV_R_SENIOR_MEMBER_RELATION.SEG_IDEN := 'SMRS';
LV_R_SENIOR_MEMBER_RELATION.DATA_PROV_ID := 'FL640000';
LV_R_SENIOR_MEMBER_RELATION.PREV_DATA_PROV_ID := NULL;
LV_R_SENIOR_MEMBER_RELATION.DATA_PRO_BR_ID := 'FL640001';
LV_R_SENIOR_MEMBER_RELATION.PREV_DATA_PRO_BR_ID := NULL;
LV_R_SENIOR_MEMBER_RELATION.SUB_IDEN_CD := I.RELATION_CUSTOMER_CODE;

     If I.GUARANTOR1 = '1'  AND  I.CUM_CONSTITUTION_CODE = 5 THEN
      LV_R_SENIOR_MEMBER_RELATION.NAT_OF_REL_SHP := '009' ;
     Elsif I.GUARANTOR1 = '1' AND  I.CUM_CONSTITUTION_CODE <> 5 THEN
      LV_R_SENIOR_MEMBER_RELATION.NAT_OF_REL_SHP := '008';
     ELSE
      LV_R_SENIOR_MEMBER_RELATION.NAT_OF_REL_SHP := '008';
     End If;
 
If Lf_Sr_Member_Details(I.SR_MEMBER_CODE,1)= 1 THEN 
 LV_R_SENIOR_MEMBER_RELATION.REL_ENT_TYPE := '001';
 LV_R_SENIOR_MEMBER_RELATION.REL_IND_DT_OF_BIR := Cbopkg00003.DF_D_CBO_DATE_OF_BIRTH(I.SR_MEMBER_CODE);
 LV_R_SENIOR_MEMBER_RELATION.REL_IND_GEN := Cbopkg00003.DF_V_CBO_GENDER(I.SR_MEMBER_CODE);
ELSE
 LV_R_SENIOR_MEMBER_RELATION.REL_IND_DT_OF_BIR :=  Cbopkg00003.Df_V_Cbo_Cr_Issue_Date(I.SR_MEMBER_CODE);
 LV_R_SENIOR_MEMBER_RELATION.REL_ENT_TYPE := '002';
 LV_R_SENIOR_MEMBER_RELATION.REL_IND_GEN := NULL;
End If;

  If Lf_Sr_Member_Details(I.SR_MEMBER_CODE,1) = 1 THEN
      If Lf_Sr_Member_Details(I.SR_MEMBER_CODE,2) = 0 THEN
            LV_R_SENIOR_MEMBER_RELATION.IDEN_TYP := '001';--FOR CIVIL IDENTIFICATION NUMBER(NID)
    
      Elsif I.CUM_RESIDENTIAL_CODE NOT IN (100,466,419,453,456,443) THEN --->>For other than GCC countries the Labour Card must be the Identifier <<---
            LV_R_SENIOR_MEMBER_RELATION.IDEN_TYP := '002';--FOR RESIDENT IDENTIFICATION NUMBER(Labour Card)
         -->Patch End
      ELSE
           LV_R_SENIOR_MEMBER_RELATION.IDEN_TYP := '006'; -- FOR PASSPORT NUMBER    -- Added Code By Sudeesh For DLVE046 on 09-Oct-2015  
      End If;
 ELSE
     LV_R_SENIOR_MEMBER_RELATION.IDEN_TYP := '004'; --FOR COMPANY REGISTRATION NUMBER(CR NO)
 End If;

 If LV_R_SENIOR_MEMBER_RELATION.IDEN_TYP = '001' THEN 
    LV_R_SENIOR_MEMBER_RELATION.IDEN_NO := Cbopkg00003.Df_V_Cbo_Nid(Lf_Sr_Member_Details(I.SR_MEMBER_CODE,3));   
 Elsif LV_R_SENIOR_MEMBER_RELATION.IDEN_TYP = '002' THEN
    LV_R_SENIOR_MEMBER_RELATION.IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.SR_MEMBER_CODE);
 ELSE
     LV_R_SENIOR_MEMBER_RELATION.IDEN_NO := Lf_Sr_Member_Details(I.SR_MEMBER_CODE,3);
 End If;
 LV_R_SENIOR_MEMBER_RELATION.IDEN_NO_EXP_DT := Cbopkg00003.DF_D_CBO_Subject_Expiry_date(I.SR_MEMBER_CODE);


if LV_R_SENIOR_MEMBER_RELATION.IDEN_NO_EXP_DT <= trunc(sysdate) then      
     LV_R_SENIOR_MEMBER_RELATION.IDEN_NO_EXP_DT := ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) ;
end if;
LV_R_SENIOR_MEMBER_RELATION.REL_IND_ENT_NAME := I.SR_MEMBER_NAME ;-->Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.SR_MEMBER_CODE);
LV_R_SENIOR_MEMBER_RELATION.REL_IND_ENT_PREV_NAME := NULL;

If Lf_Sr_Member_Details(I.SR_MEMBER_CODE,1) = 1 THEN
      LV_R_SENIOR_MEMBER_RELATION.REL_IND_NAT :=  Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(Lf_Sr_Member_Details(I.SR_MEMBER_CODE,2));
    ELSE
        LV_R_SENIOR_MEMBER_RELATION.REL_IND_NAT :=NULL;
    End If;

    LV_R_SENIOR_MEMBER_RELATION.REL_BUS_ENT_NAT_INST := Cbopkg00003.DF_V_CBO_NAT_OF_INST(Lf_Sr_Member_Details(I.SR_MEMBER_CODE,1));


LV_R_SENIOR_MEMBER_RELATION.REL_STATUS := '001';
LV_R_SENIOR_MEMBER_RELATION.ADD_TYP    := '001';
LV_R_SENIOR_MEMBER_RELATION.ADD_LINE_1 := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.SR_MEMBER_CODE);
LV_R_SENIOR_MEMBER_RELATION.ADD_LINE_2 := NULL;
LV_R_SENIOR_MEMBER_RELATION.ADD_LINE_3 := NULL;
LV_R_SENIOR_MEMBER_RELATION.ADD_CITY   := Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.SR_MEMBER_CODE);
LV_R_SENIOR_MEMBER_RELATION.ADD_POS_COD := LV_R_SENIOR_MEMBER_RELATION.ADD_CITY;
--LV_R_SENIOR_MEMBER_RELATION.ADD_CTRY := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE); --Commented here by Sridhar for MFC-428 on 24-11-2010
LV_R_SENIOR_MEMBER_RELATION.ADD_CTRY   := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(Lf_Sr_Member_Details(I.SR_MEMBER_CODE,2)); --Patched Here By Sridhar G For MFC-428 on 24-11-2010
LV_R_SENIOR_MEMBER_RELATION.TEL_NO     := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.SR_MEMBER_CODE);
-->> Patched by Babu I for call MFC-393 ends <<--

LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_SEN_MEMBER_RELATION_DAILY-INSERT==>');
INSERT INTO CBO_SEN_MEMBER_RELATION_DAILY
        (SEG_IDEN, DATA_PROV_ID, PREV_DATA_PROV_ID, DATA_PRO_BR_ID, PREV_DATA_PRO_BR_ID,
         SUB_IDEN_CD, NAT_OF_REL_SHP, REL_ENT_TYPE, IDEN_TYP, IDEN_NO, IDEN_NO_EXP_DT,
         REL_IND_ENT_NAME, REL_IND_ENT_PREV_NAME, REL_IND_NAT, REL_IND_DT_OF_BIR,
         REL_IND_GEN, REL_BUS_ENT_NAT_INST, REL_STATUS, ADD_TYP, ADD_LINE_1,
         ADD_LINE_2, ADD_LINE_3, ADD_CITY, ADD_POS_COD, ADD_CTRY, TEL_NO)
 VALUES (LV_R_SENIOR_MEMBER_RELATION.SEG_IDEN, LV_R_SENIOR_MEMBER_RELATION.DATA_PROV_ID,
         LV_R_SENIOR_MEMBER_RELATION.PREV_DATA_PROV_ID, LV_R_SENIOR_MEMBER_RELATION.DATA_PRO_BR_ID,
         LV_R_SENIOR_MEMBER_RELATION.PREV_DATA_PRO_BR_ID, LV_R_SENIOR_MEMBER_RELATION.SUB_IDEN_CD,
         LV_R_SENIOR_MEMBER_RELATION.NAT_OF_REL_SHP, LV_R_SENIOR_MEMBER_RELATION.REL_ENT_TYPE,
         LV_R_SENIOR_MEMBER_RELATION.IDEN_TYP, LV_R_SENIOR_MEMBER_RELATION.IDEN_NO,
         LV_R_SENIOR_MEMBER_RELATION.IDEN_NO_EXP_DT, LV_R_SENIOR_MEMBER_RELATION.REL_IND_ENT_NAME,
         LV_R_SENIOR_MEMBER_RELATION.REL_IND_ENT_PREV_NAME, LV_R_SENIOR_MEMBER_RELATION.REL_IND_NAT,
         LV_R_SENIOR_MEMBER_RELATION.REL_IND_DT_OF_BIR, LV_R_SENIOR_MEMBER_RELATION.REL_IND_GEN,
         LV_R_SENIOR_MEMBER_RELATION.REL_BUS_ENT_NAT_INST, LV_R_SENIOR_MEMBER_RELATION.REL_STATUS,
         LV_R_SENIOR_MEMBER_RELATION.ADD_TYP, LV_R_SENIOR_MEMBER_RELATION.ADD_LINE_1,
         LV_R_SENIOR_MEMBER_RELATION.ADD_LINE_2, LV_R_SENIOR_MEMBER_RELATION.ADD_LINE_3,
         LV_R_SENIOR_MEMBER_RELATION.ADD_CITY, LV_R_SENIOR_MEMBER_RELATION.ADD_POS_COD,
         LV_R_SENIOR_MEMBER_RELATION.ADD_CTRY, LV_R_SENIOR_MEMBER_RELATION.TEL_NO);
Exception
    WHEN OTHERS THEN
         Dp_Set_Error('CBO_SEN_MEMBER_RELATION_DAILY_27'|| Sqlerrm);
End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
 LP_UPDATE_RUN_DATA(39,'C',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;

End Loop;
LP_UPDATE_RUN_DATA(39,'E',LV_N_COMMIT);
 LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_SEN_MEMBER_RELATION_DAILY');
End If;
-- SENIOR MEMBER FILE - TRAILER
LP_UPDATE_RUN_DATA(40,'S');
If PV_N_CNT > 0 THEN
Begin
LV_R_SENIOR_MEMBER_TRAILER.SEG_IDEN := 'TLTL';
LV_R_SENIOR_MEMBER_TRAILER.DATA_PROV_ID := 'FL640000';
LV_R_SENIOR_MEMBER_TRAILER.NO_OF_SUB := LV_N_CNT;


CBO_DP_AUTO_TRAN('CBO_SEN_MEMBER_TRAILER_DAILY-INSERT==>');
INSERT INTO CBO_SEN_MEMBER_TRAILER_DAILY
        (SEG_IDEN, DATA_PROV_ID, NO_OF_SUB)
 VALUES (LV_R_SENIOR_MEMBER_TRAILER.SEG_IDEN,
          LV_R_SENIOR_MEMBER_TRAILER.DATA_PROV_ID,
         LV_R_SENIOR_MEMBER_TRAILER.NO_OF_SUB);
Exception
    WHEN OTHERS THEN
         Dp_Set_Error('CBO_SEN_MEMBER_TRAILER_DAILY_29'|| Sqlerrm);
End;
LP_UPDATE_RUN_DATA(40,'E',1);
End If;
End DP_CBO_SENIOR_MEMBER;


Function DF_V_CBO_RELATION_IND(IV_V_CUST_CODE IN VARCHAR2) Return VARCHAR2 IS
LV_V_IND  VARCHAR2(3);
Begin
   Begin
     SELECT '001'
       INTO LV_V_IND
       FROM S3g_Org_Cust_Seni_Rel_Dtl
      WHERE REL_CUSTOMER_ID =  IV_V_CUST_CODE
        AND ROWNUM < 2;
   Exception
       WHEN OTHERS THEN
          LV_V_IND := '002';
   End;
         RETURN LV_V_IND;
End;



Function DF_V_CBO_NAT_OF_INST_1(IV_V_CONSTITUTION_CODE IN NUMBER)Return VARCHAR2
IS
LV_N_CONST_CODE NUMBER := IV_V_CONSTITUTION_CODE;
BEGIN


    If LV_N_CONST_CODE = 4 THEN
       Return '002';
    Elsif LV_N_CONST_CODE = 2 THEN
        Return '001';
    Elsif LV_N_CONST_CODE = 3 THEN
        Return '003';
    Elsif LV_N_CONST_CODE = 70 THEN
        Return '004';
    Elsif LV_N_CONST_CODE = 71 THEN
        Return '009';
    Elsif LV_N_CONST_CODE = 72 THEN
        Return '006';
    Elsif LV_N_CONST_CODE = 1 THEN  --PATCHED HERE FOR MFC-428 ON 23-DEC-2010
        Return NULL ;
    ELSE
        Return '013';
    End If;


  
 

End DF_V_CBO_NAT_OF_INST_1;






Function DF_V_CBO_ISSUER_CODE(IV_N_HEADER_KEY IN NUMBER) Return VARCHAR2
  IS
    LV_V_ISSUER_CODE   VARCHAR2(3);
    LV_V_CHARSET       varchar2(10);
    LV_V_INSTRUMENT_NO varchar2(50);
    LV_V_INSTRUMENT_Date varchar2(50);
    LV_V_Instrument_amount varchar2(50);
Begin
 
   select  case when RVD.PAYMENT_MODE=5 then 'PD' else 'CC' end,
           RVD.INSTRUMENT_NO,
           RVD.INSTRUMENT_DATE,
           RVD.TOTAL_RECEIPT_AMOUNT
     into  LV_V_CHARSET,LV_V_INSTRUMENT_NO,LV_V_INSTRUMENT_Date,LV_V_Instrument_amount
     from S3G_CLN_RCPTPROC RVD
    WHERE RVD.ACCOUNT_LINK_KEY = IV_N_HEADER_KEY;
     

  If LV_V_CHARSET = 'PD' THEN
     begin
       SELECT LPAD(LP.NAME,3,'0')
         into LV_V_ISSUER_CODE
         from S3G_CLN_PDC PDC
         inner join S3G_CLN_PDCDTL dtl on dtl.PDC_HDR_ID=pdc.PDC_HDR_ID
         inner join S3G_ORG_LOOKUP LP on LP.value=PDC.ISSUER_TYPE
         where INSTRUMENT_NO = LV_V_INSTRUMENT_NO
         and INSTRUMENT_DATE=LV_V_INSTRUMENT_DATE
         and INSTRUMENT_AMOUNT=LV_V_INSTRUMENT_AMOUNT
         and LP.Type='ISSUER_BY';
     Exception
       WHEN OTHERS THEN
    
           LV_V_ISSUER_CODE := '001' ;
     End;
  End If;
  LV_V_ISSUER_CODE := NVL(LV_V_ISSUER_CODE,'001') ;
  Return LV_V_ISSUER_CODE;
Exception
   WHEN OTHERS THEN
  
   LV_V_ISSUER_CODE := '001' ; 
   Return LV_V_ISSUER_CODE ;

End DF_V_CBO_ISSUER_CODE;

Function DF_D_CBO_LIT_TIME (IV_V_CONTRACT_NUMBER IN VARCHAR2, IV_D_DATE IN DATE)Return DATE
IS
LV_N_TXN_ID     NUMBER;
LV_D_TXN_DATE   DATE;
Begin

  Begin
  
  SELECT nvl(csmst.MODIFIED_ON,csmst.created_on)
  INTO LV_D_TXN_DATE
  FROM s3g_lr_casemaster CSMST
  Inner Join S3G_LR_CASEDTL CSDTL
  On CSMST.Case_ID = CSDTL.Case_ID
  WHERE CSMST.PANUM = IV_V_CONTRACT_NUMBER
  AND CSMST.CASE_ID =
  (SELECT MAX (B.CASE_ID)
  FROM s3g_lr_casemaster B
  Inner Join S3G_LR_CASEDTL CSDTL
  On B.Case_ID = CSDTL.Case_ID
  WHERE B.PANUM = IV_V_CONTRACT_NUMBER
  )
  AND ROWNUM < 2;
  
  Exception
  WHEN OTHERS
  THEN
    LV_N_TXN_ID := NULL;
  End;
  
  /*
  
    If (LV_N_TXN_ID IS NOT NULL) THEN
    Begin
    
    SELECT TD_TXN_DATE
    INTO LV_D_TXN_DATE
    FROM SA_TRANSACTION_DETAILS
    WHERE TD_TXN_ID = LV_N_TXN_ID;
    
    ---Added by Gowthaman For DLV630
    
    If IV_D_DATE < LV_D_TXN_DATE THEN
      Return IV_D_DATE;
    ELSE
      Return LV_D_TXN_DATE;
    End If;
    
    ---Patch ends DLV 630
    Exception
    WHEN OTHERS
    THEN
    -- LV_D_TXN_DATE := TRUNC (SYSDATE); Commented By Sridhar G For MFC - 485
    LV_D_TXN_DATE := TRUNC (IV_D_DATE)  ; --Patched by sridhar G For MFC - 485
    Return LV_D_TXN_DATE;
    
    End;
    ELSE
    Return NULL;
    End If;
    Exception
    WHEN OTHERS
    THEN
    LV_D_TXN_DATE := NULL;
    
    */


Return LV_D_TXN_DATE;


END DF_D_CBO_LIT_TIME;

Function DF_V_CBO_LIT_CAUSE(IV_V_REF_NUM IN VARCHAR2) Return VARCHAR2
  IS
    LV_V_LIT   VARCHAR2(3);
Begin
   SELECT LPAD(A.LITICATION_CODE,3,'0')
     INTO LV_V_LIT
     FROM s3g_lr_casemaster A
    WHERE Panum = IV_V_REF_NUM
    AND    A.CASE_CODE = (SELECT MAX(CASE_CODE)
                               FROM   s3g_lr_casemaster B
                            WHERE  B.Panum = IV_V_REF_NUM);
--->> Added By Gowthaman For DLV630 <<---
  If LV_V_LIT IS NULL THEN
   Return '001';
  End If;
--->Patch Ends <<----
  Return LV_V_LIT;
Exception
   WHEN NO_DATA_FOUND THEN -- Exception Added by Sridhar G For MFC-503
    Return '001';
   WHEN OTHERS THEN
--    Return '0'; -->>Commented and Added By Vasanth for DLV625
      Return '001';
End DF_V_CBO_LIT_CAUSE;




Procedure DP_CBO_CONSUMER_LITIGATION(IV_D_ASON_DATE DATE) IS
-- CONSUMER INPUT FILE  CBO_CON_LIT_HEADER_DAILY
       LV_D_PARAM_DATE DATE := IV_D_ASON_DATE;
       LV_R_CONSUMER_LIT_HEADER CBO_CON_LIT_HEADER_DAILY%Rowtype;
       LV_R_CONSUMER_LIT_LITIGATION CBO_CON_LIT_LITIGATION_DAILY%Rowtype;
       LV_R_CONSUMER_LIT_SUBJECT CBO_CON_LIT_SUBJECT_DAILY%Rowtype;
       LV_R_CONSUMER_LIT_TRAILER CBO_CON_LIT_TRAILER_DAILY%Rowtype;
       LV_N_CNT                NUMBER:=0;
       LV_N_COMMIT NUMBER := 0;
Begin
DELETE FROM CBO_CON_LIT_HEADER_DAILY ;
DELETE FROM CBO_CON_LIT_LITIGATION_DAILY;
DELETE FROM CBO_CON_LIT_SUBJECT_DAILY ;
DELETE FROM CBO_CON_LIT_TRAILER_DAILY ;

--Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
LP_UPDATE_RUN_DATA(15,'S');--CONSUMER LITIGATION FILE - HEADER
If PV_N_CNT > 0 THEN
    Begin
    LV_R_CONSUMER_LIT_HEADER.SEG_IDEN       := 'HDHD';
    LV_R_CONSUMER_LIT_HEADER.DATA_PROV_ID   := 'FL640000';
    LV_R_CONSUMER_LIT_HEADER.REP_DATE       := LV_D_PARAM_DATE;
    LV_R_CONSUMER_LIT_HEADER.REP_TIME       := TRUNC(LV_D_PARAM_DATE) - 1/(24*60*60);
    LV_R_CONSUMER_LIT_HEADER.DT_PRE_IN_FILE := TRUNC(SYSDATE);
    LV_R_CONSUMER_LIT_HEADER.NAT_DATA       := '006';
    LV_R_CONSUMER_LIT_HEADER.IFF_VERSION    := 6;     --Df_V_Const_Ref_Dir('CON_LITIGATION_VERSION_DAILY');
    CBO_DP_AUTO_TRAN('CBO_CON_LIT_HEADER_DAILY-INSERT==>');
    INSERT INTO CBO_CON_LIT_HEADER_DAILY
            (SEG_IDEN, DATA_PROV_ID, REP_DATE,
             REP_TIME, DT_PRE_IN_FILE, NAT_DATA,
             IFF_VERSION)
     VALUES (LV_R_CONSUMER_LIT_HEADER.SEG_IDEN, LV_R_CONSUMER_LIT_HEADER.DATA_PROV_ID,
              LV_R_CONSUMER_LIT_HEADER.REP_DATE, LV_R_CONSUMER_LIT_HEADER.REP_TIME,
             LV_R_CONSUMER_LIT_HEADER.DT_PRE_IN_FILE, LV_R_CONSUMER_LIT_HEADER.NAT_DATA,
              LV_R_CONSUMER_LIT_HEADER.IFF_VERSION);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_LIT_HEADER_DAILY_5_' || LV_R_CONSUMER_LIT_HEADER.SEG_IDEN || '_' || Sqlerrm);
    End;
    LP_UPDATE_RUN_DATA(15,'E',1);--CONSUMER LITIGATION FILE - HEADER
End If;

LP_UPDATE_RUN_DATA(16,'S');-- CONSUMER LITIGATION FILE - LITIGATION

If PV_N_CNT > 0 THEN
      FOR I IN ( SELECT CONTRACT_NUMBER,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       APPLICATION_NUMBER,
                       DECODE (CCM.PRODUCT_CODE,
                               1, '009',
                               3, '004',
                               4, '016',
                               5, '016',
                               '020'
                              ) PRODUCT_CODE,
                       TXN_ID
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, 
                  s3g_org_custmaster SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND SCM.CONSTITUTION_ID = 5  --Individual
                   AND EXISTS (
                          SELECT 1
                            FROM s3g_lr_casemaster CSMST
                           WHERE CSMST.PANUM = CCM.CONTRACT_NUMBER
-- Comment Removed By Sridhar G For MFC-428 on 24-11-2010 for Checking Transaction Table
--Commented by babu for call DLV-447 on 03-jan-2011
            ---COMMENTED  ON 05-JAN-2016 CNL DATA
                            -- AND EXISTS (
                              --      SELECT 1
                                --      FROM SA_TRANSACTION_DETAILS C
                                  --   WHERE C.TD_TXN_ID = B.TXN_ID
                                    --   AND TRUNC (TD_TXN_DATE) = TRUNC (LV_D_PARAM_DATE))
                                      ))

     

    Loop
    Begin
    LV_N_CNT := LV_N_CNT + 1;
    LV_R_CONSUMER_LIT_LITIGATION.SEG_IDEN := 'CNLS';
    LV_R_CONSUMER_LIT_LITIGATION.DATA_PROV_ID:= 'FL640000';
    LV_R_CONSUMER_LIT_LITIGATION.PREV_DATA_PROV_ID := NULL;
    LV_R_CONSUMER_LIT_LITIGATION.DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    -->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
    --LV_R_CONSUMER_LIT_LITIGATION.PREV_DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    LV_R_CONSUMER_LIT_LITIGATION.PREV_DATA_PRO_BR_ID:=NULL;
    -->> Pathch End By Mathialagan P <<--
    LV_R_CONSUMER_LIT_LITIGATION.CR_FAC_TYPE:= I.PRODUCT_CODE;
    LV_R_CONSUMER_LIT_LITIGATION.LIA_IND:= '001';
    LV_R_CONSUMER_LIT_LITIGATION.CR_FAC_ACC_NO:= I.CONTRACT_NUMBER;

    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN
    LV_R_CONSUMER_LIT_LITIGATION.PREV_CR_FAC_ACC_NO := Cbopkg00003.DF_V_CBO_RESCHEDULE_CONTRACT(I.APPLICATION_NUMBER);
    ELSE
    LV_R_CONSUMER_LIT_LITIGATION.PREV_CR_FAC_ACC_NO:= NULL;
    End If;

    LV_R_CONSUMER_LIT_LITIGATION.INFOR_UPDATE_ON := Cbopkg00003.DF_D_CBO_LIT_TIME(I.CONTRACT_NUMBER, LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.TIME_INFOR_UPDATE:= Cbopkg00003.DF_D_CBO_LIT_TIME(I.CONTRACT_NUMBER, LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.SUIT_REF_NO:= Cbopkg00003.DF_V_CBO_SUIT_REF_NUMBER(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.SIUT_FILED_STATUS := Cbopkg00003.DF_V_CBO_SUIT_STATUS(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.SUIT_AMT := Cbopkg00003.DF_N_CBO_SUIT_AMT(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.LTG_CAUSE := Cbopkg00003.DF_V_CBO_LIT_CAUSE(I.CONTRACT_NUMBER);
    LV_R_CONSUMER_LIT_LITIGATION.COURT := Cbopkg00003.DF_V_CBO_COURT(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.COURT_LOC := Cbopkg00003.DF_V_CBO_COURT_LOCATION(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.DT_SUIT_FILED := Cbopkg00003.DF_D_CBO_GET_DATE_SUIT_FILED(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.DT_ADJ := Cbopkg00003.DF_D_CBO_DATE_ADJUDICATED(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CONSUMER_LIT_LITIGATION.LEGAL_ACT_ORG := '001';
    LV_R_CONSUMER_LIT_LITIGATION.TRANS_TYPE_CD := '001';
    LV_R_CONSUMER_LIT_LITIGATION.COMP_STATUS := NULL;
    LV_R_CONSUMER_LIT_LITIGATION.COMP_INTI_NO := NULL;
    LV_R_CONSUMER_LIT_LITIGATION.SPL_CMNTS1 := NULL;
    LV_R_CONSUMER_LIT_LITIGATION.SPL_CMNTS2 := NULL;
    LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_CON_LIT_LITIGATION_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_CON_LIT_LITIGATION_DAILY
            (SEG_IDEN, DATA_PROV_ID, PREV_DATA_PROV_ID, DATA_PRO_BR_ID,
             PREV_DATA_PRO_BR_ID, CR_FAC_TYPE, LIA_IND, CR_FAC_ACC_NO,
             PREV_CR_FAC_ACC_NO, INFOR_UPDATE_ON, TIME_INFOR_UPDATE,
             SUIT_REF_NO, SIUT_FILED_STATUS, SUIT_AMT, LTG_CAUSE, COURT,
             COURT_LOC, DT_SUIT_FILED, DT_ADJ, LEGAL_ACT_ORG, TRANS_TYPE_CD,
             COMP_STATUS, COMP_INTI_NO, SPL_CMNTS1, SPL_CMNTS2)
     VALUES (LV_R_CONSUMER_LIT_LITIGATION.SEG_IDEN, LV_R_CONSUMER_LIT_LITIGATION.DATA_PROV_ID,
              LV_R_CONSUMER_LIT_LITIGATION.PREV_DATA_PROV_ID, LV_R_CONSUMER_LIT_LITIGATION.DATA_PRO_BR_ID,
             LV_R_CONSUMER_LIT_LITIGATION.PREV_DATA_PRO_BR_ID, LV_R_CONSUMER_LIT_LITIGATION.CR_FAC_TYPE,
             LV_R_CONSUMER_LIT_LITIGATION.LIA_IND, LV_R_CONSUMER_LIT_LITIGATION.CR_FAC_ACC_NO,
             LV_R_CONSUMER_LIT_LITIGATION.PREV_CR_FAC_ACC_NO, LV_R_CONSUMER_LIT_LITIGATION.INFOR_UPDATE_ON,
             LV_R_CONSUMER_LIT_LITIGATION.TIME_INFOR_UPDATE, LV_R_CONSUMER_LIT_LITIGATION.SUIT_REF_NO,
             LV_R_CONSUMER_LIT_LITIGATION.SIUT_FILED_STATUS, LV_R_CONSUMER_LIT_LITIGATION.SUIT_AMT,
             LV_R_CONSUMER_LIT_LITIGATION.LTG_CAUSE, LV_R_CONSUMER_LIT_LITIGATION.COURT,
             LV_R_CONSUMER_LIT_LITIGATION.COURT_LOC, LV_R_CONSUMER_LIT_LITIGATION.DT_SUIT_FILED,
             LV_R_CONSUMER_LIT_LITIGATION.DT_ADJ, LV_R_CONSUMER_LIT_LITIGATION.LEGAL_ACT_ORG,
             LV_R_CONSUMER_LIT_LITIGATION.TRANS_TYPE_CD, LV_R_CONSUMER_LIT_LITIGATION.COMP_STATUS,
             LV_R_CONSUMER_LIT_LITIGATION.COMP_INTI_NO, LV_R_CONSUMER_LIT_LITIGATION.SPL_CMNTS1,
             LV_R_CONSUMER_LIT_LITIGATION.SPL_CMNTS2);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_LIT_LITIGATION_DAILY_6_' || LV_R_CONSUMER_LIT_LITIGATION.CR_FAC_ACC_NO || '_' || Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(16,'C',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - LITIGATION
LV_N_COMMIT := 0;
Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(16,'E',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - LITIGATION
LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_LIT_LITIGATION_DAILY');

End If;

LP_UPDATE_RUN_DATA(17,'S');-- CONSUMER LITIGATION FILE - SUBJECT
If PV_N_CNT > 0 THEN
    -- CONSUMER LITIGATION FILE - SUBJECT
     FOR I IN ( SELECT CCM.CONTRACT_NUMBER, CCM.CUSTOMER_CODE,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       SCM.NATIONALITY AS CUM_RESIDENTIAL_CODE, SCM.NID_CR_RID_NUMBER AS CUM_CUSTOMER_REFERENCE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, 
                  S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND SCM.CONSTITUTION_ID = 5    --Individual
                   AND EXISTS (SELECT 1
                                 FROM CBO_CON_LIT_LITIGATION_DAILY B
                                WHERE B.CR_FAC_ACC_NO = CCM.CONTRACT_NUMBER))
    Loop
    Begin
    LV_R_CONSUMER_LIT_SUBJECT.SEG_IDEN := 'CNCS';
    LV_R_CONSUMER_LIT_SUBJECT.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_LIT_SUBJECT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CONSUMER_LIT_SUBJECT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    LV_R_CONSUMER_LIT_SUBJECT.SUB_IDEN_CD := I.CUSTOMER_CODE;
    LV_R_CONSUMER_LIT_SUBJECT.SUB_PREV_IDEN_CD := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.IDEN_TYP := CBOPKG00003.DF_V_CBO_IDENTIFIER_TYPE(I.CUSTOMER_CODE, 'CONSUMER', 'LITIGATION');
     LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
--    If LV_R_CONSUMER_LIT_SUBJECT.IDEN_TYP = '001' THEN
--         LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO := Cbopkg00003.Df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
--    -->Elsif Added By Babu I for call MFC-393 On 23-AUG-2010 <<--
--    Elsif LV_R_CONSUMER_LIT_SUBJECT.IDEN_TYP = '002' THEN
--        LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
--    ELSE
--               --- LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
--              ---commented and patched for NRID 24-NOV-2015
--    LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO := NVL( DF_V_GET_NRID_NUMBER(i.customer_code), i.CUM_CUSTOMER_REFERENCE);
--
--    End If;

    LV_R_CONSUMER_LIT_SUBJECT.PREV_IDEN_NO := NULL;
    -- LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO_EXP_DT := Cbopkg00003.DF_D_CBO_Subject_Expiry_date(I.CUSTOMER_CODE);  -- Comment by sudeesh for  DLV1035
     LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO_EXP_DT :=   CASE WHEN  CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) <= TRUNC(LV_D_PARAM_DATE) THEN 
                                                             ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) 
                                                        ELSE CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) END;  -- Code added by Sudeesh From DLV1035
    LV_R_CONSUMER_LIT_SUBJECT.SUB_NAME := Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.CUSTOMER_CODE);
    LV_R_CONSUMER_LIT_SUBJECT.SUB_PREV_NAME := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.SUB_NAT := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    LV_R_CONSUMER_LIT_SUBJECT.SUB_DOB := Cbopkg00003.DF_D_CBO_DATE_OF_BIRTH(I.CUSTOMER_CODE);
    LV_R_CONSUMER_LIT_SUBJECT.SUB_GEN := Cbopkg00003.DF_V_CBO_GENDER(I.CUSTOMER_CODE);
    LV_R_CONSUMER_LIT_SUBJECT.ADD_TYPE_1 := '001';
    LV_R_CONSUMER_LIT_SUBJECT.ADD_1_LN_1 := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_LIT_SUBJECT.ADD_1_LN_2 := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_1_LN_3 := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_1_CTY :=  Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_LIT_SUBJECT.ADD_1_POS_CD := LV_R_CONSUMER_LIT_SUBJECT.ADD_1_CTY;
    If LV_R_CONSUMER_LIT_SUBJECT.ADD_1_POS_CD IS NOT NULL THEN
       LV_R_CONSUMER_LIT_SUBJECT.ADD_1_CTRY := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
       LV_R_CONSUMER_LIT_SUBJECT.ADD_1_CTRY := NULL;
    End If;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_1_TEL_NO := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_LIT_SUBJECT.ADD_TYPE_2 := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_2_LN_1 := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_2_LN_2 := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_2_LN_3 := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_2_CTY := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_2_POS_CD := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_2_CTRY := NULL;
    LV_R_CONSUMER_LIT_SUBJECT.ADD_2_TEL_NO := NULL;

    LV_N_COMMIT := LV_N_COMMIT + 1;
    
CBO_DP_AUTO_TRAN('CBO_CON_LIT_SUBJECT_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_CON_LIT_SUBJECT_DAILY
            (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, SUB_IDEN_CD,
             SUB_PREV_IDEN_CD, IDEN_TYP, IDEN_NO, PREV_IDEN_NO, IDEN_NO_EXP_DT,
             SUB_NAME, SUB_PREV_NAME, SUB_NAT, SUB_DOB, SUB_GEN, ADD_TYPE_1, ADD_1_LN_1,
             ADD_1_LN_2, ADD_1_LN_3, ADD_1_CTY, ADD_1_POS_CD, ADD_1_CTRY, ADD_1_TEL_NO,
             ADD_TYPE_2, ADD_2_LN_1, ADD_2_LN_2, ADD_2_LN_3, ADD_2_CTY, ADD_2_POS_CD,
             ADD_2_CTRY, ADD_2_TEL_NO)
     VALUES (LV_R_CONSUMER_LIT_SUBJECT.SEG_IDEN, LV_R_CONSUMER_LIT_SUBJECT.DATA_PROV_ID,
              LV_R_CONSUMER_LIT_SUBJECT.DATA_PRO_BR_ID, LV_R_CONSUMER_LIT_SUBJECT.CR_FAC_ACC_NO,
             LV_R_CONSUMER_LIT_SUBJECT.SUB_IDEN_CD, LV_R_CONSUMER_LIT_SUBJECT.SUB_PREV_IDEN_CD,
             LV_R_CONSUMER_LIT_SUBJECT.IDEN_TYP, LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO,
             LV_R_CONSUMER_LIT_SUBJECT.PREV_IDEN_NO, LV_R_CONSUMER_LIT_SUBJECT.IDEN_NO_EXP_DT,
             LV_R_CONSUMER_LIT_SUBJECT.SUB_NAME, LV_R_CONSUMER_LIT_SUBJECT.SUB_PREV_NAME,
             LV_R_CONSUMER_LIT_SUBJECT.SUB_NAT, LV_R_CONSUMER_LIT_SUBJECT.SUB_DOB,
             LV_R_CONSUMER_LIT_SUBJECT.SUB_GEN, LV_R_CONSUMER_LIT_SUBJECT.ADD_TYPE_1,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_1_LN_1, LV_R_CONSUMER_LIT_SUBJECT.ADD_1_LN_2,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_1_LN_3, LV_R_CONSUMER_LIT_SUBJECT.ADD_1_CTY,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_1_POS_CD, LV_R_CONSUMER_LIT_SUBJECT.ADD_1_CTRY,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_1_TEL_NO, LV_R_CONSUMER_LIT_SUBJECT.ADD_TYPE_2,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_2_LN_1, LV_R_CONSUMER_LIT_SUBJECT.ADD_2_LN_2,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_2_LN_3, LV_R_CONSUMER_LIT_SUBJECT.ADD_2_CTY,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_2_POS_CD, LV_R_CONSUMER_LIT_SUBJECT.ADD_2_CTRY,
             LV_R_CONSUMER_LIT_SUBJECT.ADD_2_TEL_NO);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_LIT_SUBJECT_DAILY_7_' || LV_R_CONSUMER_LIT_SUBJECT.CR_FAC_ACC_NO || '_' || Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(17,'C',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - SUBJECT
LV_N_COMMIT := 0;
Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(17,'E',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - SUBJECT
LV_N_COMMIT := 0;
Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_LIT_SUBJECT_DAILY');

End If;

LP_UPDATE_RUN_DATA(18,'S');-- CONSUMER LITIGATION FILE - TRAILER
If PV_N_CNT > 0 THEN
    -- CONSUMER LITIGATION FILE - TRAILER
    Begin
    LV_R_CONSUMER_LIT_TRAILER.SEG_IDEN := 'TLTL';
    LV_R_CONSUMER_LIT_TRAILER.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_LIT_TRAILER.NO_LITI := LV_N_CNT;
    INSERT INTO CBO_CON_LIT_TRAILER_DAILY
            (SEG_IDEN, DATA_PROV_ID, NO_LITI)
     VALUES (LV_R_CONSUMER_LIT_TRAILER.SEG_IDEN, LV_R_CONSUMER_LIT_TRAILER.DATA_PROV_ID, LV_R_CONSUMER_LIT_TRAILER.NO_LITI);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_LIT_TRAILER_DAILY_8_' || LV_R_CONSUMER_LIT_TRAILER.SEG_IDEN || '_' || Sqlerrm);
    End;
    LP_UPDATE_RUN_DATA(18,'E',1);-- CONSUMER LITIGATION FILE - TRAILER
End If;

END DP_CBO_CONSUMER_LITIGATION;


Procedure DP_CBO_CONSUMER_DISHONOR(IV_D_ASON_DATE DATE) IS
-- CONSUMER INPUT FILE  CBO_CON_DIS_HEADER_DAILY
       LV_D_PARAM_DATE DATE := IV_D_ASON_DATE;
       LV_R_CONSUMER_DIS_HEADER    CBO_CON_DIS_HEADER_DAILY%Rowtype;
       LV_R_CONSUMER_DIS_DISHONOR  CBO_CON_DIS_DISHONOR_DAILY%Rowtype;
        LV_R_CONSUMER_DIS_SUBJECT   CBO_CON_DIS_SUBJECT_DAILY%Rowtype;
       LV_R_CONSUMER_DIS_TRAILER   CBO_CON_DIS_TRAILER_DAILY%Rowtype;
       LV_N_CNT NUMBER:=0;
       LV_N_COMMIT NUMBER := 0;
Begin
DELETE FROM CBO_CON_DIS_HEADER_DAILY;
DELETE FROM CBO_CON_DIS_DISHONOR_DAILY;
DELETE FROM CBO_CON_DIS_SUBJECT_DAILY;
DELETE FROM CBO_CON_DIS_TRAILER_DAILY;
-- CONSUMER DISHONOR FILE - HEADER
LP_UPDATE_RUN_DATA(10,'S');--CONSUMER DISHONOR FILE - HEADER
If PV_N_CNT > 0 THEN
    Begin
    LV_R_CONSUMER_DIS_HEADER.SEG_IDEN       := 'HDHD';
    LV_R_CONSUMER_DIS_HEADER.DATA_PROV_ID   := 'FL640000';
    LV_R_CONSUMER_DIS_HEADER.REP_DATE        := LV_D_PARAM_DATE;
    LV_R_CONSUMER_DIS_HEADER.REP_TIME        := TRUNC(LV_D_PARAM_DATE) - 1/(24*60*60);
    LV_R_CONSUMER_DIS_HEADER.DT_PRE_IN_FILE := TRUNC(SYSDATE);
    LV_R_CONSUMER_DIS_HEADER.NAT_DATA        := '004';
    LV_R_CONSUMER_DIS_HEADER.IFF_VERSION    := 4 ;-- Df_V_Const_Ref_Dir('CON_DISHONOR_VERSION_DAILY');
    
CBO_DP_AUTO_TRAN('CBO_CON_DIS_HEADER_DAILY-INSERT==>');
    INSERT INTO CBO_CON_DIS_HEADER_DAILY
            (SEG_IDEN, DATA_PROV_ID, REP_DATE,
             REP_TIME, DT_PRE_IN_FILE, NAT_DATA,
              IFF_VERSION)
     VALUES (LV_R_CONSUMER_DIS_HEADER.SEG_IDEN, LV_R_CONSUMER_DIS_HEADER.DATA_PROV_ID,
              LV_R_CONSUMER_DIS_HEADER.REP_DATE, LV_R_CONSUMER_DIS_HEADER.REP_TIME,
             LV_R_CONSUMER_DIS_HEADER.DT_PRE_IN_FILE, LV_R_CONSUMER_DIS_HEADER.NAT_DATA,
              LV_R_CONSUMER_DIS_HEADER.IFF_VERSION);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_CON_DIS_HEADER_DAILY_13'|| LV_R_CONSUMER_DIS_HEADER.SEG_IDEN ||'~'|| Sqlerrm);
    End;
    LP_UPDATE_RUN_DATA(10,'E',1);--CONSUMER DISHONOR FILE - HEADER
End If;

LP_UPDATE_RUN_DATA(11,'S');--CONSUMER DISHONOR FILE - DISHONOR
If PV_N_CNT > 0 THEN
--    Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
    -- CONSUMER DISHONOR FILE - DISHONOR

/*
    FOR I IN (  SELECT CCM.CONTRACT_NUMBER,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       CCM.APPLICATION_NUMBER,
                      DECODE (CCM.PRODUCT_CODE,
                               1, '009',
                               3, '004',
                               4, '016',
                               5, '016',
                               6, '016'
                               ,'020'
                              ) PRODUCT_CODE,
                       'L' PRODUCT_TYPE, C.INSTRUMENT_DATE INST_DATE,
                       A.TXN_AMOUNT INST_AMT,
                       --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
                       A.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
                       DECODE (B.CHEQUE_REASON_TYPE,
                               2, '001',
                               1, '002',
                               21, '003',
                               9, '003',
                               4, '004',
                               '006'
                              ) DISHN_REASON,
                       C.INSTRUMENT_NO CHQ_NO,
                       D.ACCOUNT_LINK_KEY AS RECEIPT_HEADER_KEY,
                       1 AS TXN_ID,
--                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
                        '' AS MICR_NUMBER
                  from CBO_CONTRACT_MASTER_DAILY CCM,
                       S3G_ORG_CUSTMASTER SCM,
                       S3G_JV_DET a,
                       S3G_JV_HDR D,
                       S3G_CLN_CHEQRETPROC B,
                       S3G_CLN_RCPTPROC C
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and SCM.CONSTITUTION_ID = 5
                   and CCM.PRODUCT_CODE IN(1,3)
--                   AND A.MODULE_CODE = 11
--                   AND A.REFERENCE_TYPE = 'ACCOUNT'
                   AND a.REFERENCE_NUMBER = CCM.CONTRACT_NUMBER
                
                   and TRUNC (a.JV_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')
                   and a.account_link_key=D.ACCOUNT_LINK_KEY
                  
                   and a.ACCOUNT_LINK_KEY=B.ACCOUNT_LINK_KEY
                   and B.RECEIPT_ID = C.RECEIPT_ID
                   AND B.RECEIPT_ID=(SELECT MAX(C.RECEIPT_ID) -->> -- Added By Gowthaman N For DLV630 On 01-Feb-2012
                                                  FROM
                                                   S3G_JV_DET a,
                                                   S3G_JV_HDR D,
                                                   S3G_CLN_CHEQRETPROC B,
                                                   S3G_CLN_RCPTPROC C
                                             where
                                              TRUNC (a.JV_DATE,'MM') =  TRUNC (LV_D_PARAM_DATE,'MM')
                                               and a.ACCOUNT_LINK_KEY=d.ACCOUNT_LINK_KEY
                                               and a.ACCOUNT_LINK_KEY = B.ACCOUNT_LINK_KEY
                                               AND B.receipt_id = C.receipt_id
                                               AND a.REFERENCE_NUMBER =CCM.CONTRACT_NUMBER )
                union
                 SELECT CCM.CONTRACT_NUMBER,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       CCM.APPLICATION_NUMBER,
                       DECODE (CCM.PRODUCT_CODE,
                               1, '009',
                               3, '004',
                               4, '016',
                               5, '016',
                               '020'
                              ) PRODUCT_CODE,
                       'FW' PRODUCT_TYPE, C.INSTRUMENT_DATE INST_DATE,
                       A.TXN_AMOUNT INST_AMT,
                       --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
                       A.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
                       DECODE (B.CHEQUE_REASON_TYPE,
                               2, '001',
                               1, '002',
                               21, '003',
                               9, '003',
                               4, '004',
                               '006'
                              ) DISHN_REASON,
                       C.INSTRUMENT_NO CHQ_NO,
                       d.account_link_key as RECEIPT_HEADER_KEY,
--                       A.TXN_ID,
                      1 AS TXN_ID,
--                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
               '' AS MICR_NUMBER
                  from CBO_CONTRACT_MASTER_DAILY CCM,
                       S3G_ORG_CUSTMASTER SCM,
                       S3G_JV_DET a,
                       S3G_JV_HDR D,
                       S3G_CLN_CHEQRETPROC B,
                       S3G_CLN_RCPTPROC C
                 where SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and SCM.CONSTITUTION_ID = 5
                   and CCM.PRODUCT_CODE NOT IN(1,3)
--                   AND A.MODULE_CODE = 11
--                   AND A.REFERENCE_TYPE = 'ACCOUNT'
                   AND a.REFERENCE_NUMBER = CCM.CONTRACT_NUMBER
                
                   and TRUNC (a.JV_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')
                   and a.account_link_key=D.ACCOUNT_LINK_KEY
--                   and a.REFERENCE_NUMBER=D.REFERENCE_NUMBER
                   and a.ACCOUNT_LINK_KEY=B.ACCOUNT_LINK_KEY
                   and B.RECEIPT_ID = C.RECEIPT_ID
                   AND B.RECEIPT_ID=(SELECT MAX(C.RECEIPT_ID) -->> -- Added By Gowthaman N For DLV630 On 01-Feb-2012
                                                  FROM
                                                   S3G_JV_DET a,
                                                   S3G_JV_HDR D,
                                                   S3G_CLN_CHEQRETPROC B,
                                                   S3G_CLN_RCPTPROC C
                                             where
                                              TRUNC (a.JV_DATE,'MM') =  TRUNC (LV_D_PARAM_DATE,'MM')
                                               and a.ACCOUNT_LINK_KEY=B.ACCOUNT_LINK_KEY
                                               and a.ACCOUNT_LINK_KEY = B.ACCOUNT_LINK_KEY
                                               AND B.RECEIPT_ID = C.RECEIPT_ID
                                               AND a.REFERENCE_NUMBER =CCM.CONTRACT_NUMBER ))
--                SELECT FRM.ACCOUNT_NUMBER CONTRACT_NUMBER,
--                       DECODE (FRM.BRANCH_CODE,
--                               'HO', 'FL640001',
--                               'SL', 'FL640002',
--                               'SH', 'FL640003',
--                               'BK', 'FL640004',
--                               'IB', 'FL640005',
--                               'SU', 'FL640006',
--                               'NZ', 'FL640007'
--                              ) CONTRACT_BRANCH,
--                       FRM.ACCOUNT_NUMBER APPLICATION_NUMBER,
--                       DECODE (FRM.PRODUCT_CODE,
--                               1, '009',
--                               3, '004',
--                               51, '016',
--                               52, '016',
--                               '020'
--                              ) PRODUCT_CODE,
--                       'FW' PRODUCT_TYPE, FRH.INSTRUMENT_DATE INST_DATE,
--                       FRH.INSTRUMENT_AMOUNT.TXN_AMT   INST_AMT
--                       , FCR.DOCUMENT_DATE DATE_DISHN,
--                       DECODE (FCR.REASON_CODE,
--                               2, '001',
--                               1, '002',
--                               21, '003',
--                               4, '004',
--                               '006'
--                              ) DISHN_REASON,
--                       FRH.INSTRUMENT_NO CHQ_NO,
--                       NULL, NULL,
--                       NULL -- Added By Gowthaman N For DLV630 On 01-Feb-2012
--                  FROM FW_REGISTRATION_MASTER_DAILY FRM,
--                       SA_CUSTOMER_MASTER SCM,
--                       FW_CHEQUE_RETURN_HEADER FCR,
--                       FW_RECEIPT_HEADER FRH
--                 WHERE SCM.CUM_CUSTOMER_CODE = FRM.CLIENT_CODE
--                   AND FRM.FW_ID = FRH.FW_ID
--                   AND CUM_CONSTITUTION_CODE = 1
--                   AND SOURCE_VOUCHER_ID = VOUCHER_ID
--                   AND Cbopkg00003.DF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) > 0 -->> Patched by Mathialagan P for MFC-393 ON 25-AUG-2010
--                  -->> Commented and Patched by Babu I on 04-Jan-2011 for MFC-447 <<--
--                -- AND TRUNC (FCR.DOCUMENT_DATE) = TRUNC (LV_D_PARAM_DATE))
--                   AND TRUNC (FCR.DOCUMENT_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM'))

*/

FOR I IN (
    SELECT CCM.CONTRACT_NUMBER,
    DECODE (CCM.CONTRACT_BRANCH,
    'CO|HO', 'FL640001',
    'CO|SL', 'FL640002',
    'CO|SH', 'FL640003',
    'CO|BK', 'FL640004',
    'CO|IB', 'FL640005',
    'CO|SU', 'FL640006',
    'CO|NZ', 'FL640007'
    ) CONTRACT_BRANCH,
    CCM.APPLICATION_NUMBER,
    DECODE (CCM.PRODUCT_CODE,
    1, '009',
    3, '004',
    4, '016',
    5, '016',
    6, '016'
    ,'020'
    ) PRODUCT_CODE,
    'L' PRODUCT_TYPE
    ,RCPT.INSTRUMENT_DATE INST_DATE
    ,RCPT.Total_Receipt_Amount INST_AMT,
    --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
    JVHDR.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
    DECODE (CHQRTN.CHEQUE_REASON_TYPE,
    2, '001',
    1, '002',
    21, '003',
    9, '003',
    4, '004',
    '006'
    ) DISHN_REASON,
    RCPT.INSTRUMENT_NO CHQ_NO,
    RCPT.Receipt_ID AS RECEIPT_HEADER_KEY,
    1 AS TXN_ID,
    --                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
    '' AS MICR_NUMBER,
    CHQRTN.CHEQUE_RETURN_ADVICE_DATE
   
    from CBO_CONTRACT_MASTER_DAILY CCM
    Inner Join S3G_ORG_CUSTMASTER SCM
    On CCM.Customer_Code = SCM.Customer_Code
    Inner Join s3g_cln_rcptprocdtl RCPTDTL
    On RCPTDTL.PANUM = CCM.CONTRACT_NUMBER
    Inner Join S3G_CLN_RCPTPROC RCPT
    On RCPT.Receipt_ID = RCPTDTL.Receipt_ID
    Inner Join S3G_CLN_CHEQRETPROC CHQRTN
    On CHQRTN.Receipt_ID = RCPT.Receipt_ID
    Inner Join S3G_JV_Hdr JVHDR
    On JVHDR.Account_Link_Key = CHQRTN.ACCOUNT_LINK_KEY
    WHERE SCM.CONSTITUTION_ID = 5
    and CCM.PRODUCT_CODE IN(1,3)
    and TRUNC (CHQRTN.CHEQUE_RETURN_ADVICE_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')
    
    Union 
    
    SELECT CCM.CONTRACT_NUMBER,
    DECODE (CCM.CONTRACT_BRANCH,
    'CO|HO', 'FL640001',
    'CO|SL', 'FL640002',
    'CO|SH', 'FL640003',
    'CO|BK', 'FL640004',
    'CO|IB', 'FL640005',
    'CO|SU', 'FL640006',
    'CO|NZ', 'FL640007'
    ) CONTRACT_BRANCH,
    CCM.APPLICATION_NUMBER,
    DECODE (CCM.PRODUCT_CODE,
    1, '009',
    3, '004',
    4, '016',
    5, '016',
    6, '016'
    ,'020'
    ) PRODUCT_CODE,
    'L' PRODUCT_TYPE
    ,RCPT.INSTRUMENT_DATE INST_DATE
    ,RCPT.Total_Receipt_Amount INST_AMT,
    --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
    JVHDR.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
    DECODE (CHQRTN.CHEQUE_REASON_TYPE,
    2, '001',
    1, '002',
    21, '003',
    9, '003',
    4, '004',
    '006'
    ) DISHN_REASON,
    RCPT.INSTRUMENT_NO CHQ_NO,
    RCPT.Receipt_ID AS RECEIPT_HEADER_KEY,
    1 AS TXN_ID,
    --                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
    '' AS MICR_NUMBER,
    CHQRTN.CHEQUE_RETURN_ADVICE_DATE
    
    from CBO_CONTRACT_MASTER_DAILY CCM
    Inner Join S3G_ORG_CUSTMASTER SCM
    On CCM.Customer_Code = SCM.Customer_Code
    Inner Join s3g_cln_rcptprocdtl RCPTDTL
    On RCPTDTL.PANUM = CCM.CONTRACT_NUMBER
    Inner Join S3G_CLN_RCPTPROC RCPT
    On RCPT.Receipt_ID = RCPTDTL.Receipt_ID
    Inner Join S3G_CLN_CHEQRETPROC CHQRTN
    On CHQRTN.Receipt_ID = RCPT.Receipt_ID
    Inner Join S3G_JV_Hdr JVHDR
    On JVHDR.Account_Link_Key = CHQRTN.ACCOUNT_LINK_KEY
    WHERE SCM.CONSTITUTION_ID = 5
    and CCM.PRODUCT_CODE Not IN(1,3)
    and TRUNC (CHQRTN.CHEQUE_RETURN_ADVICE_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')



)

    Loop
    Begin
    LV_N_CNT := LV_N_CNT + 1;
    LV_R_CONSUMER_DIS_DISHONOR.SEG_IDEN := 'CNDC';
    LV_R_CONSUMER_DIS_DISHONOR.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_DIS_DISHONOR.PREV_DATA_PROV_ID := NULL;
    LV_R_CONSUMER_DIS_DISHONOR.DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    -->>  Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
    -- LV_R_CONSUMER_DIS_DISHONOR.PREV_DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    LV_R_CONSUMER_DIS_DISHONOR.PREV_DATA_PRO_BR_ID:=NULL;
    --->> Pathch End By Mathialagan P <<--
    LV_R_CONSUMER_DIS_DISHONOR.CR_FAC_TYPE:= I.PRODUCT_CODE;
    LV_R_CONSUMER_DIS_DISHONOR.LIA_IND:= '001';
    LV_R_CONSUMER_DIS_DISHONOR.CR_FAC_ACC_NO:= I.CONTRACT_NUMBER;
    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN
    LV_R_CONSUMER_DIS_DISHONOR.PREV_CR_FAC_ACC_NO := Cbopkg00003.DF_V_CBO_RESCHEDULE_CONTRACT(I.APPLICATION_NUMBER);
    ELSE
    LV_R_CONSUMER_DIS_DISHONOR.PREV_CR_FAC_ACC_NO:= NULL;
    End If;
   -- LV_R_CONSUMER_DIS_DISHONOR.INFOR_UPDATE_ON := Cbopkg00003.DF_D_CBO_TXN_DATE(I.TXN_ID);
   LV_R_CONSUMER_DIS_DISHONOR.INFOR_UPDATE_ON :=i.CHEQUE_RETURN_ADVICE_DATE;
   
    /*
-->> Commented and Patched by Babu I on 20-Jan-2011 for call MFC-447 <<--
    If TRUNC(LV_R_CONSUMER_DIS_DISHONOR.INFOR_UPDATE_ON) > PV_D_DATE THEN
     LV_R_CONSUMER_DIS_DISHONOR.INFOR_UPDATE_ON := PV_D_DATE;
    End If;*/

    If TRUNC(LV_R_CONSUMER_DIS_DISHONOR.INFOR_UPDATE_ON) < PV_D_DATE THEN--Commented And Added By Gowthaman N For DLV608 On 06-Dec-2011
     LV_R_CONSUMER_DIS_DISHONOR.INFOR_UPDATE_ON := PV_D_DATE;
    End If;

    LV_R_CONSUMER_DIS_DISHONOR.TIME_INFOR_UPDATE:= Cbopkg00003.DF_D_CBO_TXN_DATE(I.TXN_ID);
    -- Patch Added By Sridhar G For MFC-503
    If I.PRODUCT_TYPE = 'L' THEN
--    LV_R_CONSUMER_DIS_DISHONOR.MICR_NO := Cbopkg00003.DF_N_CBO_MICR(I.RECEIPT_HEADER_KEY);
    LV_R_CONSUMER_DIS_DISHONOR.MICR_NO :=null;
        If LV_R_CONSUMER_DIS_DISHONOR.MICR_NO IS NULL THEN--Added By Gowthaman N For DLV630 On 01-Feb-2012
          LV_R_CONSUMER_DIS_DISHONOR.MICR_NO:=I.MICR_NUMBER;
        End If;
    ELSE
    LV_R_CONSUMER_DIS_DISHONOR.MICR_NO := 27014200401150081018219 ;
    End If ;
    -- Patch Ends Here For MFC-503
    LV_R_CONSUMER_DIS_DISHONOR.DT_CHQ_ISS   := I.INST_DATE;
    LV_R_CONSUMER_DIS_DISHONOR.CHQ_AMT      := ROUND(I.INST_AMT);
    LV_R_CONSUMER_DIS_DISHONOR.CHQ_ISS_TYP  := Cbopkg00003.DF_V_CBO_ISSUER_CODE(I.RECEIPT_HEADER_KEY);
    LV_R_CONSUMER_DIS_DISHONOR.DT_DISHON    := I.DATE_DISHN;
    LV_R_CONSUMER_DIS_DISHONOR.REA_FOR_DISH := I.DISHN_REASON;
    LV_R_CONSUMER_DIS_DISHONOR.TRANS_TYPE_CD:= '001';
    LV_R_CONSUMER_DIS_DISHONOR.COMP_STATUS  := NULL;
    LV_R_CONSUMER_DIS_DISHONOR.COMP_INTI_NO := NULL;
    LV_R_CONSUMER_DIS_DISHONOR.SPL_CMNTS1   := NULL;
    LV_R_CONSUMER_DIS_DISHONOR.SPL_CMNTS2   := NULL;




    LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_CON_DIS_DISHONOR_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_CON_DIS_DISHONOR_DAILY
            (SEG_IDEN, DATA_PROV_ID, PREV_DATA_PROV_ID, DATA_PRO_BR_ID, PREV_DATA_PRO_BR_ID,
             CR_FAC_TYPE, LIA_IND, CR_FAC_ACC_NO, PREV_CR_FAC_ACC_NO, INFOR_UPDATE_ON,
             TIME_INFOR_UPDATE, MICR_NO, DT_CHQ_ISS, CHQ_AMT, CHQ_ISS_TYP, DT_DISHON,
             REA_FOR_DISH, TRANS_TYPE_CD, COMP_STATUS, COMP_INTI_NO, SPL_CMNTS1, SPL_CMNTS2)
     VALUES (LV_R_CONSUMER_DIS_DISHONOR.SEG_IDEN, LV_R_CONSUMER_DIS_DISHONOR.DATA_PROV_ID,
              LV_R_CONSUMER_DIS_DISHONOR.PREV_DATA_PROV_ID, LV_R_CONSUMER_DIS_DISHONOR.DATA_PRO_BR_ID,
             LV_R_CONSUMER_DIS_DISHONOR.PREV_DATA_PRO_BR_ID, LV_R_CONSUMER_DIS_DISHONOR.CR_FAC_TYPE,
             LV_R_CONSUMER_DIS_DISHONOR.LIA_IND, LV_R_CONSUMER_DIS_DISHONOR.CR_FAC_ACC_NO,
             LV_R_CONSUMER_DIS_DISHONOR.PREV_CR_FAC_ACC_NO, LV_R_CONSUMER_DIS_DISHONOR.INFOR_UPDATE_ON,
             LV_R_CONSUMER_DIS_DISHONOR.TIME_INFOR_UPDATE, LV_R_CONSUMER_DIS_DISHONOR.MICR_NO,
             LV_R_CONSUMER_DIS_DISHONOR.DT_CHQ_ISS, LV_R_CONSUMER_DIS_DISHONOR.CHQ_AMT,
             LV_R_CONSUMER_DIS_DISHONOR.CHQ_ISS_TYP, LV_R_CONSUMER_DIS_DISHONOR.DT_DISHON,
             LV_R_CONSUMER_DIS_DISHONOR.REA_FOR_DISH, LV_R_CONSUMER_DIS_DISHONOR.TRANS_TYPE_CD,
             LV_R_CONSUMER_DIS_DISHONOR.COMP_STATUS, LV_R_CONSUMER_DIS_DISHONOR.COMP_INTI_NO,
             LV_R_CONSUMER_DIS_DISHONOR.SPL_CMNTS1, LV_R_CONSUMER_DIS_DISHONOR.SPL_CMNTS2);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_CON_DIS_DISHONOR_DAILY_14'||LV_R_CONSUMER_DIS_DISHONOR.CR_FAC_ACC_NO || '~' || Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
  LP_UPDATE_RUN_DATA(11,'C',LV_N_COMMIT);--CONSUMER DISHONOR FILE - DISHONOR
  LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(11,'E',LV_N_COMMIT);--CONSUMER DISHONOR FILE - DISHONOR
LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_DIS_DISHONOR_DAILY');

End If;

LP_UPDATE_RUN_DATA(12,'S');--CONSUMER DISHONOR FILE - SUBJECT
If PV_N_CNT > 0 THEN
--    Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
    -- CONSUMER DISHONOR FILE - SUBJECT
   FOR I IN (  SELECT CCM.CONTRACT_NUMBER CONTRACT_NUMBER, CCM.CUSTOMER_CODE,
                       DECODE (CCM.CONTRACT_BRANCH,
                              'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       Nationality as CUM_RESIDENTIAL_CODE, NID_CR_RID_NUMBER as CUM_CUSTOMER_REFERENCE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and CONSTITUTION_ID = 5
                    and CCM.PRODUCT_CODE IN(1,3)
                   AND EXISTS (SELECT 1
                                 FROM CBO_CON_DIS_DISHONOR_DAILY
                                WHERE CR_FAC_ACC_NO = CCM.CONTRACT_NUMBER)
                UNION
                SELECT CCM.CONTRACT_NUMBER CONTRACT_NUMBER, CCM.CUSTOMER_CODE,
                       DECODE (CCM.CONTRACT_BRANCH,
                              'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       Nationality as CUM_RESIDENTIAL_CODE, NID_CR_RID_NUMBER as CUM_CUSTOMER_REFERENCE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and CONSTITUTION_ID = 5
                    and CCM.PRODUCT_CODE NOT IN(1,3)
                   AND EXISTS (SELECT 1
                                 FROM CBO_CON_DIS_DISHONOR_DAILY
                                WHERE CR_FAC_ACC_NO = CCM.CONTRACT_NUMBER)
                                
                                )
    Loop
    Begin
    LV_R_CONSUMER_DIS_SUBJECT.SEG_IDEN := 'DCCS';
    LV_R_CONSUMER_DIS_SUBJECT.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_DIS_SUBJECT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CONSUMER_DIS_SUBJECT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    LV_R_CONSUMER_DIS_SUBJECT.SUB_IDEN_CD := I.CUSTOMER_CODE;
    LV_R_CONSUMER_DIS_SUBJECT.SUB_PREV_IDEN_CD := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.IDEN_TYP := CBOPKG00003.DF_V_CBO_IDENTIFIER_TYPE(I.CUSTOMER_CODE, 'CONSUMER', 'DISHONOR');
    LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
--    If     LV_R_CONSUMER_DIS_SUBJECT.IDEN_TYP = '001' THEN
----    LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO := Cbopkg00003.Df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
--  
--    Elsif LV_R_CONSUMER_DIS_SUBJECT.IDEN_TYP = '002' THEN
--    LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
--    ELSE
--    ---   LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
--     ---commented and patched for NRID 24-NOV-2015
--    LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO := NVL( DF_V_GET_NRID_NUMBER(i.customer_code), i.CUM_CUSTOMER_REFERENCE);
--
--    End If;

    LV_R_CONSUMER_DIS_SUBJECT.PREV_IDEN_NO   := NULL;
    --LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO_EXP_DT := Cbopkg00003.DF_D_CBO_Subject_Expiry_date(I.CUSTOMER_CODE);  -- Comment by Sudeesh For DLV1035    
    
    LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO_EXP_DT :=CASE WHEN  CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) <= TRUNC(LV_D_PARAM_DATE) THEN 
                                                             ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) 
                                                        ELSE CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) END;  -- Code added by Sudeesh From DLV1035
    
    LV_R_CONSUMER_DIS_SUBJECT.SUB_NAME       := Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.CUSTOMER_CODE);
    LV_R_CONSUMER_DIS_SUBJECT.SUB_PREV_NAME  := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.SUB_NAT        := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    LV_R_CONSUMER_DIS_SUBJECT.SUB_DOB        := Cbopkg00003.DF_D_CBO_DATE_OF_BIRTH(I.CUSTOMER_CODE);
    LV_R_CONSUMER_DIS_SUBJECT.SUB_GEN := Cbopkg00003.DF_V_CBO_GENDER(I.CUSTOMER_CODE);
    LV_R_CONSUMER_DIS_SUBJECT.ADD_TYPE_1 := '001';
    LV_R_CONSUMER_DIS_SUBJECT.ADD_1_LN_1 := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_DIS_SUBJECT.ADD_1_LN_2 := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_1_LN_3 := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_1_CTY := Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_DIS_SUBJECT.ADD_1_POS_CD := LV_R_CONSUMER_DIS_SUBJECT.ADD_1_CTY;
    If LV_R_CONSUMER_DIS_SUBJECT.ADD_1_POS_CD IS NOT NULL THEN
       LV_R_CONSUMER_DIS_SUBJECT.ADD_1_CTRY := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
       LV_R_CONSUMER_DIS_SUBJECT.ADD_1_CTRY := NULL;
    End If;

    LV_R_CONSUMER_DIS_SUBJECT.ADD_1_TEL_NO := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
    LV_R_CONSUMER_DIS_SUBJECT.ADD_TYPE_2 := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_2_LN_1 := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_2_LN_2 := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_2_LN_3 := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_2_CTY :=  NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_2_POS_CD := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_2_CTRY := NULL;
    LV_R_CONSUMER_DIS_SUBJECT.ADD_2_TEL_NO := NULL;

    LV_N_COMMIT := LV_N_COMMIT + 1;
    
CBO_DP_AUTO_TRAN('CBO_CON_DIS_SUBJECT_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_CON_DIS_SUBJECT_DAILY
            (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO, SUB_IDEN_CD,
             SUB_PREV_IDEN_CD, IDEN_TYP, IDEN_NO, PREV_IDEN_NO, IDEN_NO_EXP_DT,
             SUB_NAME, SUB_PREV_NAME, SUB_NAT, SUB_DOB, SUB_GEN, ADD_TYPE_1, ADD_1_LN_1,
             ADD_1_LN_2, ADD_1_LN_3, ADD_1_CTY, ADD_1_POS_CD, ADD_1_CTRY, ADD_1_TEL_NO,
             ADD_TYPE_2, ADD_2_LN_1, ADD_2_LN_2, ADD_2_LN_3, ADD_2_CTY, ADD_2_POS_CD,
             ADD_2_CTRY, ADD_2_TEL_NO)
     VALUES (LV_R_CONSUMER_DIS_SUBJECT.SEG_IDEN, LV_R_CONSUMER_DIS_SUBJECT.DATA_PROV_ID,
              LV_R_CONSUMER_DIS_SUBJECT.DATA_PRO_BR_ID, LV_R_CONSUMER_DIS_SUBJECT.CR_FAC_ACC_NO,
             LV_R_CONSUMER_DIS_SUBJECT.SUB_IDEN_CD, LV_R_CONSUMER_DIS_SUBJECT.SUB_PREV_IDEN_CD,
             LV_R_CONSUMER_DIS_SUBJECT.IDEN_TYP, LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO,
             LV_R_CONSUMER_DIS_SUBJECT.PREV_IDEN_NO, LV_R_CONSUMER_DIS_SUBJECT.IDEN_NO_EXP_DT,
             LV_R_CONSUMER_DIS_SUBJECT.SUB_NAME, LV_R_CONSUMER_DIS_SUBJECT.SUB_PREV_NAME,
             LV_R_CONSUMER_DIS_SUBJECT.SUB_NAT, LV_R_CONSUMER_DIS_SUBJECT.SUB_DOB,
             LV_R_CONSUMER_DIS_SUBJECT.SUB_GEN, LV_R_CONSUMER_DIS_SUBJECT.ADD_TYPE_1,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_1_LN_1, LV_R_CONSUMER_DIS_SUBJECT.ADD_1_LN_2,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_1_LN_3, LV_R_CONSUMER_DIS_SUBJECT.ADD_1_CTY,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_1_POS_CD, LV_R_CONSUMER_DIS_SUBJECT.ADD_1_CTRY,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_1_TEL_NO, LV_R_CONSUMER_DIS_SUBJECT.ADD_TYPE_2,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_2_LN_1, LV_R_CONSUMER_DIS_SUBJECT.ADD_2_LN_2,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_2_LN_3, LV_R_CONSUMER_DIS_SUBJECT.ADD_2_CTY,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_2_POS_CD, LV_R_CONSUMER_DIS_SUBJECT.ADD_2_CTRY,
             LV_R_CONSUMER_DIS_SUBJECT.ADD_2_TEL_NO);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_CON_DIS_SUBJECT_DAILY_15'|| LV_R_CONSUMER_DIS_SUBJECT.CR_FAC_ACC_NO || '~' || Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(12,'C',LV_N_COMMIT);--CONSUMER DISHONOR FILE - SUBJECT
LV_N_COMMIT := 0;
Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(12,'E',LV_N_COMMIT);--CONSUMER DISHONOR FILE - SUBJECT
LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_CON_DIS_SUBJECT_DAILY');

End If;

LP_UPDATE_RUN_DATA(13,'S');--CONSUMER DISHONOR FILE - TRAILER
If PV_N_CNT > 0 THEN
    -- CONSUMER DISHONOR FILE - TRAILER
    Begin
    LV_R_CONSUMER_DIS_TRAILER.SEG_IDEN := 'TLTL';
    LV_R_CONSUMER_DIS_TRAILER.DATA_PROV_ID := 'FL640000';
    LV_R_CONSUMER_DIS_TRAILER.NO_CHQ_DISH := LV_N_CNT;
    CBO_DP_AUTO_TRAN('CBO_CON_DIS_TRAILER_DAILY-INSERT==>');
    INSERT INTO CBO_CON_DIS_TRAILER_DAILY
            (SEG_IDEN, DATA_PROV_ID, NO_CHQ_DISH)
   VALUES (LV_R_CONSUMER_DIS_TRAILER.SEG_IDEN,
              LV_R_CONSUMER_DIS_TRAILER.DATA_PROV_ID,
             LV_R_CONSUMER_DIS_TRAILER.NO_CHQ_DISH);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_CON_DIS_TRAILER_DAILY_16'||  LV_R_CONSUMER_DIS_TRAILER.SEG_IDEN || '_' || Sqlerrm);
    End;
LP_UPDATE_RUN_DATA(13,'E',1);--CONSUMER DISHONOR FILE - TRAILER
END IF;
End DP_CBO_CONSUMER_DISHONOR;




Procedure DP_CBO_CORPORATE_DISHONOR(IV_D_ASON_DATE DATE) IS
-- CORPORATE INPUT FILE  CBO_CON_DIS_HEADER_DAILY
       LV_D_PARAM_DATE DATE := IV_D_ASON_DATE;
       LV_R_CORPORATE_DIS_HEADER    CBO_COR_DIS_HEADER_DAILY%Rowtype;
       LV_R_CORPORATE_DIS_DISHONOR  CBO_COR_DIS_DISHONOR_DAILY%Rowtype;
       LV_R_CORPORATE_DIS_SUBJECT   CBO_COR_DIS_SUBJECT_DAILY%ROWTYPE;
       LV_R_CORPORATE_DIS_TRAILER   CBO_COR_DIS_TRAILER_DAILY%Rowtype;
       LV_N_CNT NUMBER:=0;
       LV_N_COMMIT NUMBER := 0;
Begin
DELETE FROM CBO_COR_DIS_HEADER_DAILY;
DELETE FROM CBO_COR_DIS_DISHONOR_DAILY;
DELETE FROM CBO_COR_DIS_SUBJECT_DAILY;
DELETE FROM CBO_COR_DIS_TRAILER_DAILY;
-- CORPORATE DISHONOR FILE - HEADER
LP_UPDATE_RUN_DATA(10,'S');--CORPORATE DISHONOR FILE - HEADER
If PV_N_CNT > 0 THEN
    Begin
    LV_R_CORPORATE_DIS_HEADER.SEG_IDEN       := 'HDHD';
    LV_R_CORPORATE_DIS_HEADER.DATA_PROV_ID   := 'FL640000';
    LV_R_CORPORATE_DIS_HEADER.REP_DATE        := LV_D_PARAM_DATE;
    LV_R_CORPORATE_DIS_HEADER.REP_TIME        := TRUNC(LV_D_PARAM_DATE) - 1/(24*60*60);
    LV_R_CORPORATE_DIS_HEADER.DT_PRE_IN_FILE := TRUNC(SYSDATE);
    LV_R_CORPORATE_DIS_HEADER.NAT_DATA        := '004';
    LV_R_CORPORATE_DIS_HEADER.IFF_VERSION    := 4 ;-- Df_V_Const_Ref_Dir('CON_DISHONOR_VERSION_DAILY');
    
    
CBO_DP_AUTO_TRAN('CBO_COR_DIS_HEADER_DAILY-INSERT==>');
    INSERT INTO CBO_COR_DIS_HEADER_DAILY
            (SEG_IDEN, DATA_PROV_ID, REP_DATE,
             REP_TIME, DT_PRE_IN_FILE, NAT_DATA,
              IFF_VERSION)
     VALUES (LV_R_CORPORATE_DIS_HEADER.SEG_IDEN, LV_R_CORPORATE_DIS_HEADER.DATA_PROV_ID,
              LV_R_CORPORATE_DIS_HEADER.REP_DATE, LV_R_CORPORATE_DIS_HEADER.REP_TIME,
             LV_R_CORPORATE_DIS_HEADER.DT_PRE_IN_FILE, LV_R_CORPORATE_DIS_HEADER.NAT_DATA,
              LV_R_CORPORATE_DIS_HEADER.IFF_VERSION);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_COR_DIS_HEADER_DAILY_9'|| LV_R_CORPORATE_DIS_HEADER.SEG_IDEN ||'~'|| Sqlerrm);
    end;
    LP_UPDATE_RUN_DATA(27,'E',1);--CORPORATE DISHONOR FILE - HEADER
End If;

LP_UPDATE_RUN_DATA(28,'S');--CORPORATE DISHONOR FILE - DISHONOR
If PV_N_CNT > 0 THEN
--    Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
    -- CORPORATE DISHONOR FILE - DISHONOR

/*
    FOR I IN (  SELECT CCM.CONTRACT_NUMBER,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       CCM.APPLICATION_NUMBER,
                      DECODE (CCM.PRODUCT_CODE,
                               1, '009',
                               3, '004',
                               4, '016',
                               5, '016',
                               6, '016'
                               ,'020'
                              ) PRODUCT_CODE,
                       'L' PRODUCT_TYPE, C.INSTRUMENT_DATE INST_DATE,
                       A.TXN_AMOUNT INST_AMT,
                       --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
                       A.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
                       DECODE (B.CHEQUE_REASON_TYPE,
                               2, '001',
                               1, '002',
                               21, '003',
                               9, '003',
                               4, '004',
                               '006'
                              ) DISHN_REASON,
                       C.INSTRUMENT_NO CHQ_NO,
                       D.ACCOUNT_LINK_KEY AS RECEIPT_HEADER_KEY,
                       1 AS TXN_ID,
--                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
                        '' AS MICR_NUMBER
                  from CBO_CONTRACT_MASTER_DAILY CCM,
                       S3G_ORG_CUSTMASTER SCM,
                       S3G_JV_DET a,
                       S3G_JV_HDR D,
                       S3G_CLN_CHEQRETPROC B,
                       S3G_CLN_RCPTPROC C
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and SCM.CONSTITUTION_ID = 5
                   and CCM.PRODUCT_CODE IN(1,3)
--                   AND A.MODULE_CODE = 11
--                   AND A.REFERENCE_TYPE = 'ACCOUNT'
                   AND a.REFERENCE_NUMBER = CCM.CONTRACT_NUMBER
                
                   and TRUNC (a.JV_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')
                   and a.account_link_key=D.ACCOUNT_LINK_KEY
                  
                   and a.ACCOUNT_LINK_KEY=B.ACCOUNT_LINK_KEY
                   and B.RECEIPT_ID = C.RECEIPT_ID
                   AND B.RECEIPT_ID=(SELECT MAX(C.RECEIPT_ID) -->> -- Added By Gowthaman N For DLV630 On 01-Feb-2012
                                                  FROM
                                                   S3G_JV_DET a,
                                                   S3G_JV_HDR D,
                                                   S3G_CLN_CHEQRETPROC B,
                                                   S3G_CLN_RCPTPROC C
                                             where
                                              TRUNC (a.JV_DATE,'MM') =  TRUNC (LV_D_PARAM_DATE,'MM')
                                               and a.ACCOUNT_LINK_KEY=d.ACCOUNT_LINK_KEY
                                               and a.ACCOUNT_LINK_KEY = B.ACCOUNT_LINK_KEY
                                               AND B.receipt_id = C.receipt_id
                                               AND a.REFERENCE_NUMBER =CCM.CONTRACT_NUMBER )
                union
                 SELECT CCM.CONTRACT_NUMBER,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       CCM.APPLICATION_NUMBER,
                       DECODE (CCM.PRODUCT_CODE,
                               1, '009',
                               3, '004',
                               4, '016',
                               5, '016',
                               '020'
                              ) PRODUCT_CODE,
                       'FW' PRODUCT_TYPE, C.INSTRUMENT_DATE INST_DATE,
                       A.TXN_AMOUNT INST_AMT,
                       --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
                       A.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
                       DECODE (B.CHEQUE_REASON_TYPE,
                               2, '001',
                               1, '002',
                               21, '003',
                               9, '003',
                               4, '004',
                               '006'
                              ) DISHN_REASON,
                       C.INSTRUMENT_NO CHQ_NO,
                       d.account_link_key as RECEIPT_HEADER_KEY,
--                       A.TXN_ID,
                      1 AS TXN_ID,
--                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
               '' AS MICR_NUMBER
                  from CBO_CONTRACT_MASTER_DAILY CCM,
                       S3G_ORG_CUSTMASTER SCM,
                       S3G_JV_DET a,
                       S3G_JV_HDR D,
                       S3G_CLN_CHEQRETPROC B,
                       S3G_CLN_RCPTPROC C
                 where SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and SCM.CONSTITUTION_ID = 5
                   and CCM.PRODUCT_CODE NOT IN(1,3)
--                   AND A.MODULE_CODE = 11
--                   AND A.REFERENCE_TYPE = 'ACCOUNT'
                   AND a.REFERENCE_NUMBER = CCM.CONTRACT_NUMBER
                
                   and TRUNC (a.JV_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')
                   and a.account_link_key=D.ACCOUNT_LINK_KEY
--                   and a.REFERENCE_NUMBER=D.REFERENCE_NUMBER
                   and a.ACCOUNT_LINK_KEY=B.ACCOUNT_LINK_KEY
                   and B.RECEIPT_ID = C.RECEIPT_ID
                   AND B.RECEIPT_ID=(SELECT MAX(C.RECEIPT_ID) -->> -- Added By Gowthaman N For DLV630 On 01-Feb-2012
                                                  FROM
                                                   S3G_JV_DET a,
                                                   S3G_JV_HDR D,
                                                   S3G_CLN_CHEQRETPROC B,
                                                   S3G_CLN_RCPTPROC C
                                             where
                                              TRUNC (a.JV_DATE,'MM') =  TRUNC (LV_D_PARAM_DATE,'MM')
                                               and a.ACCOUNT_LINK_KEY=B.ACCOUNT_LINK_KEY
                                               and a.ACCOUNT_LINK_KEY = B.ACCOUNT_LINK_KEY
                                               AND B.RECEIPT_ID = C.RECEIPT_ID
                                               AND a.REFERENCE_NUMBER =CCM.CONTRACT_NUMBER ))
--                SELECT FRM.ACCOUNT_NUMBER CONTRACT_NUMBER,
--                       DECODE (FRM.BRANCH_CODE,
--                               'HO', 'FL640001',
--                               'SL', 'FL640002',
--                               'SH', 'FL640003',
--                               'BK', 'FL640004',
--                               'IB', 'FL640005',
--                               'SU', 'FL640006',
--                               'NZ', 'FL640007'
--                              ) CONTRACT_BRANCH,
--                       FRM.ACCOUNT_NUMBER APPLICATION_NUMBER,
--                       DECODE (FRM.PRODUCT_CODE,
--                               1, '009',
--                               3, '004',
--                               51, '016',
--                               52, '016',
--                               '020'
--                              ) PRODUCT_CODE,
--                       'FW' PRODUCT_TYPE, FRH.INSTRUMENT_DATE INST_DATE,
--                       FRH.INSTRUMENT_AMOUNT.TXN_AMT   INST_AMT
--                       , FCR.DOCUMENT_DATE DATE_DISHN,
--                       DECODE (FCR.REASON_CODE,
--                               2, '001',
--                               1, '002',
--                               21, '003',
--                               4, '004',
--                               '006'
--                              ) DISHN_REASON,
--                       FRH.INSTRUMENT_NO CHQ_NO,
--                       NULL, NULL,
--                       NULL -- Added By Gowthaman N For DLV630 On 01-Feb-2012
--                  FROM FW_REGISTRATION_MASTER_DAILY FRM,
--                       SA_CUSTOMER_MASTER SCM,
--                       FW_CHEQUE_RETURN_HEADER FCR,
--                       FW_RECEIPT_HEADER FRH
--                 WHERE SCM.CUM_CUSTOMER_CODE = FRM.CLIENT_CODE
--                   AND FRM.FW_ID = FRH.FW_ID
--                   AND CUM_CONSTITUTION_CODE = 1
--                   AND SOURCE_VOUCHER_ID = VOUCHER_ID
--                   AND Cbopkg00003.DF_N_CBO_AUTHORIZED_AMOUNT('B',ACCOUNT_NUMBER,LV_D_PARAM_DATE) > 0 -->> Patched by Mathialagan P for MFC-393 ON 25-AUG-2010
--                  -->> Commented and Patched by Babu I on 04-Jan-2011 for MFC-447 <<--
--                -- AND TRUNC (FCR.DOCUMENT_DATE) = TRUNC (LV_D_PARAM_DATE))
--                   AND TRUNC (FCR.DOCUMENT_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM'))

*/

          FOR I IN (
              SELECT CCM.CONTRACT_NUMBER,
              DECODE (CCM.CONTRACT_BRANCH,
              'CO|HO', 'FL640001',
              'CO|SL', 'FL640002',
              'CO|SH', 'FL640003',
              'CO|BK', 'FL640004',
              'CO|IB', 'FL640005',
              'CO|SU', 'FL640006',
              'CO|NZ', 'FL640007'
              ) CONTRACT_BRANCH,
              CCM.APPLICATION_NUMBER,
              DECODE (CCM.PRODUCT_CODE,
              1, '009',
              3, '004',
              4, '016',
              5, '016',
              6, '016'
              ,'020'
              ) PRODUCT_CODE,
              'L' PRODUCT_TYPE
              ,RCPT.INSTRUMENT_DATE INST_DATE
              ,RCPT.Total_Receipt_Amount INST_AMT,
              --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
              JVHDR.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
              DECODE (CHQRTN.CHEQUE_REASON_TYPE,
              2, '001',
              1, '002',
              21, '003',
              9, '003',
              4, '004',
              '006'
              ) DISHN_REASON,
              RCPT.INSTRUMENT_NO CHQ_NO,
              RCPT.Receipt_ID AS RECEIPT_HEADER_KEY,
              1 AS TXN_ID,
              --                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
              '' AS MICR_NUMBER,
               CHQRTN.CHEQUE_RETURN_ADVICE_DATE
             
              from CBO_CONTRACT_MASTER_DAILY CCM
              Inner Join S3G_ORG_CUSTMASTER SCM
              On CCM.Customer_Code = SCM.Customer_Code
              Inner Join s3g_cln_rcptprocdtl RCPTDTL
              On RCPTDTL.PANUM = CCM.CONTRACT_NUMBER
              Inner Join S3G_CLN_RCPTPROC RCPT
              On RCPT.Receipt_ID = RCPTDTL.Receipt_ID
              Inner Join S3G_CLN_CHEQRETPROC CHQRTN
              On CHQRTN.Receipt_ID = RCPT.Receipt_ID
              Inner Join S3G_JV_Hdr JVHDR
              On JVHDR.Account_Link_Key = CHQRTN.ACCOUNT_LINK_KEY
              WHERE SCM.CONSTITUTION_ID <> 5
              and CCM.PRODUCT_CODE IN(1,3)
              and TRUNC (CHQRTN.CHEQUE_RETURN_ADVICE_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')
              
              Union 
              
              SELECT CCM.CONTRACT_NUMBER,
              DECODE (CCM.CONTRACT_BRANCH,
              'CO|HO', 'FL640001',
              'CO|SL', 'FL640002',
              'CO|SH', 'FL640003',
              'CO|BK', 'FL640004',
              'CO|IB', 'FL640005',
              'CO|SU', 'FL640006',
              'CO|NZ', 'FL640007'
              ) CONTRACT_BRANCH,
              CCM.APPLICATION_NUMBER,
              DECODE (CCM.PRODUCT_CODE,
              1, '009',
              3, '004',
              4, '016',
              5, '016',
              6, '016'
              ,'020'
              ) PRODUCT_CODE,
              'L' PRODUCT_TYPE
              ,RCPT.INSTRUMENT_DATE INST_DATE
              ,RCPT.Total_Receipt_Amount INST_AMT,
              --B.ADVICE_DATE DATE_DISHN, -- Commented by Sridhar G For MFC-473 On 17-Mar-2011
              JVHDR.JV_DATE DATE_DISHN, -- Patched by Sridhar G for MFC-473 On 17-Mar-2011
              DECODE (CHQRTN.CHEQUE_REASON_TYPE,
              2, '001',
              1, '002',
              21, '003',
              9, '003',
              4, '004',
              '006'
              ) DISHN_REASON,
              RCPT.INSTRUMENT_NO CHQ_NO,
              RCPT.Receipt_ID AS RECEIPT_HEADER_KEY,
              1 AS TXN_ID,
              --                       C.MICR_NUMBER-- Added By Gowthaman N For DLV630 On 01-Feb-2012
              '' AS MICR_NUMBER,
              CHQRTN.CHEQUE_RETURN_ADVICE_DATE
              
              from CBO_CONTRACT_MASTER_DAILY CCM
              Inner Join S3G_ORG_CUSTMASTER SCM
              On CCM.Customer_Code = SCM.Customer_Code
              Inner Join s3g_cln_rcptprocdtl RCPTDTL
              On RCPTDTL.PANUM = CCM.CONTRACT_NUMBER
              Inner Join S3G_CLN_RCPTPROC RCPT
              On RCPT.Receipt_ID = RCPTDTL.Receipt_ID
              Inner Join S3G_CLN_CHEQRETPROC CHQRTN
              On CHQRTN.Receipt_ID = RCPT.Receipt_ID
              Inner Join S3G_JV_Hdr JVHDR
              On JVHDR.Account_Link_Key = CHQRTN.ACCOUNT_LINK_KEY
              WHERE SCM.CONSTITUTION_ID <> 5
              and CCM.PRODUCT_CODE Not IN(1,3)
              and TRUNC (CHQRTN.CHEQUE_RETURN_ADVICE_DATE,'MM') = TRUNC (LV_D_PARAM_DATE,'MM')
          
          
          
          )

    Loop
    Begin
    LV_N_CNT := LV_N_CNT + 1;
    LV_R_CORPORATE_DIS_DISHONOR.SEG_IDEN := 'CMDC';
    LV_R_CORPORATE_DIS_DISHONOR.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_DIS_DISHONOR.PREV_DATA_PROV_ID := NULL;
    LV_R_CORPORATE_DIS_DISHONOR.DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    -->>  Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
    -- LV_R_CORPORATE_DIS_DISHONOR.PREV_DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    LV_R_CORPORATE_DIS_DISHONOR.PREV_DATA_PRO_BR_ID:=NULL;
    --->> Pathch End By Mathialagan P <<--
    LV_R_CORPORATE_DIS_DISHONOR.CR_FAC_TYPE:= I.PRODUCT_CODE;
    LV_R_CORPORATE_DIS_DISHONOR.LIA_IND:= '001';
    LV_R_CORPORATE_DIS_DISHONOR.CR_FAC_ACC_NO:= I.CONTRACT_NUMBER;
    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN
    LV_R_CORPORATE_DIS_DISHONOR.PREV_CR_FAC_ACC_NO := Cbopkg00003.DF_V_CBO_RESCHEDULE_CONTRACT(I.APPLICATION_NUMBER);
    ELSE
    LV_R_CORPORATE_DIS_DISHONOR.PREV_CR_FAC_ACC_NO:= NULL;
    End If;
    LV_R_CORPORATE_DIS_DISHONOR.INFOR_UPDATE_ON := i.CHEQUE_RETURN_ADVICE_DATE;
    /*
-->> Commented and Patched by Babu I on 20-Jan-2011 for call MFC-447 <<--
    If TRUNC(LV_R_CORPORATE_DIS_DISHONOR.INFOR_UPDATE_ON) > PV_D_DATE THEN
     LV_R_CORPORATE_DIS_DISHONOR.INFOR_UPDATE_ON := PV_D_DATE;
    End If;*/

    If TRUNC(LV_R_CORPORATE_DIS_DISHONOR.INFOR_UPDATE_ON) < PV_D_DATE THEN--Commented And Added By Gowthaman N For DLV608 On 06-Dec-2011
     LV_R_CORPORATE_DIS_DISHONOR.INFOR_UPDATE_ON := PV_D_DATE;
    End If;

    LV_R_CORPORATE_DIS_DISHONOR.TIME_INFOR_UPDATE:= Cbopkg00003.DF_D_CBO_TXN_DATE(I.TXN_ID);
    -- Patch Added By Sridhar G For MFC-503
    If I.PRODUCT_TYPE = 'L' THEN
--    LV_R_CORPORATE_DIS_DISHONOR.MICR_NO := Cbopkg00003.DF_N_CBO_MICR(I.RECEIPT_HEADER_KEY);
    LV_R_CORPORATE_DIS_DISHONOR.MICR_NO :=null;
        If LV_R_CORPORATE_DIS_DISHONOR.MICR_NO IS NULL THEN--Added By Gowthaman N For DLV630 On 01-Feb-2012
          LV_R_CORPORATE_DIS_DISHONOR.MICR_NO:=I.MICR_NUMBER;
        End If;
    ELSE
    LV_R_CORPORATE_DIS_DISHONOR.MICR_NO := 27014200401150081018219 ;
    End If ;
    -- Patch Ends Here For MFC-503
    LV_R_CORPORATE_DIS_DISHONOR.DT_CHQ_ISS   := I.INST_DATE;
    LV_R_CORPORATE_DIS_DISHONOR.CHQ_AMT      := ROUND(I.INST_AMT);
    LV_R_CORPORATE_DIS_DISHONOR.CHQ_ISS_TYP  := Cbopkg00003.DF_V_CBO_ISSUER_CODE(I.RECEIPT_HEADER_KEY);
    LV_R_CORPORATE_DIS_DISHONOR.DT_DISHON    := I.DATE_DISHN;
    LV_R_CORPORATE_DIS_DISHONOR.REA_FOR_DISH := I.DISHN_REASON;
    LV_R_CORPORATE_DIS_DISHONOR.TRANS_TYPE_CD:= '001';
    LV_R_CORPORATE_DIS_DISHONOR.COMP_STATUS  := NULL;
    LV_R_CORPORATE_DIS_DISHONOR.COMP_INTI_NO := NULL;
    LV_R_CORPORATE_DIS_DISHONOR.SPL_CMNTS1   := NULL;
    LV_R_CORPORATE_DIS_DISHONOR.SPL_CMNTS2   := NULL;




    LV_N_COMMIT := LV_N_COMMIT + 1;

CBO_DP_AUTO_TRAN('CBO_COR_DIS_DISHONOR_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_COR_DIS_DISHONOR_DAILY
            (SEG_IDEN, DATA_PROV_ID, PREV_DATA_PROV_ID, DATA_PRO_BR_ID, PREV_DATA_PRO_BR_ID,
             CR_FAC_TYPE, LIA_IND, CR_FAC_ACC_NO, PREV_CR_FAC_ACC_NO, INFOR_UPDATE_ON,
             TIME_INFOR_UPDATE, MICR_NO, DT_CHQ_ISS, CHQ_AMT, CHQ_ISS_TYP, DT_DISHON,
             REA_FOR_DISH, TRANS_TYPE_CD, COMP_STATUS, COMP_INTI_NO, SPL_CMNTS1, SPL_CMNTS2)
     VALUES (LV_R_CORPORATE_DIS_DISHONOR.SEG_IDEN, LV_R_CORPORATE_DIS_DISHONOR.DATA_PROV_ID,
              LV_R_CORPORATE_DIS_DISHONOR.PREV_DATA_PROV_ID, LV_R_CORPORATE_DIS_DISHONOR.DATA_PRO_BR_ID,
             LV_R_CORPORATE_DIS_DISHONOR.PREV_DATA_PRO_BR_ID, LV_R_CORPORATE_DIS_DISHONOR.CR_FAC_TYPE,
             LV_R_CORPORATE_DIS_DISHONOR.LIA_IND, LV_R_CORPORATE_DIS_DISHONOR.CR_FAC_ACC_NO,
             LV_R_CORPORATE_DIS_DISHONOR.PREV_CR_FAC_ACC_NO, LV_R_CORPORATE_DIS_DISHONOR.INFOR_UPDATE_ON,
             LV_R_CORPORATE_DIS_DISHONOR.TIME_INFOR_UPDATE, LV_R_CORPORATE_DIS_DISHONOR.MICR_NO,
             LV_R_CORPORATE_DIS_DISHONOR.DT_CHQ_ISS, LV_R_CORPORATE_DIS_DISHONOR.CHQ_AMT,
             LV_R_CORPORATE_DIS_DISHONOR.CHQ_ISS_TYP, LV_R_CORPORATE_DIS_DISHONOR.DT_DISHON,
             LV_R_CORPORATE_DIS_DISHONOR.REA_FOR_DISH, LV_R_CORPORATE_DIS_DISHONOR.TRANS_TYPE_CD,
             LV_R_CORPORATE_DIS_DISHONOR.COMP_STATUS, LV_R_CORPORATE_DIS_DISHONOR.COMP_INTI_NO,
             LV_R_CORPORATE_DIS_DISHONOR.SPL_CMNTS1, LV_R_CORPORATE_DIS_DISHONOR.SPL_CMNTS2);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_CON_DIS_DISHONOR_DAILY_10'||LV_R_CORPORATE_DIS_DISHONOR.CR_FAC_ACC_NO || '~' || Sqlerrm);
    End;

if LV_N_COMMIT = PV_N_COMMIT_FREQUENCY then
  LP_UPDATE_RUN_DATA(28,'C',LV_N_COMMIT);--CORPORATE DISHONOR FILE - DISHONOR
  LV_N_COMMIT := 0;
  Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(28,'E',LV_N_COMMIT);--CORPORATE DISHONOR FILE - DISHONOR
LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_COR_DIS_DISHONOR_DAILY');

End If;

LP_UPDATE_RUN_DATA(29,'S');--CORPORATE DISHONOR FILE - SUBJECT
If PV_N_CNT > 0 THEN
--    Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
    -- CORPORATE DISHONOR FILE - SUBJECT
   FOR I IN (  SELECT CCM.CONTRACT_NUMBER CONTRACT_NUMBER, CCM.CUSTOMER_CODE,
                       DECODE (CCM.CONTRACT_BRANCH,
                              'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       Nationality as CUM_RESIDENTIAL_CODE, NID_CR_RID_NUMBER as CUM_CUSTOMER_REFERENCE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and CONSTITUTION_ID <> 5
                    and CCM.PRODUCT_CODE IN(1,3)
                   AND EXISTS (SELECT 1
                                 FROM CBO_COR_DIS_DISHONOR_DAILY
                                WHERE CR_FAC_ACC_NO = CCM.CONTRACT_NUMBER)
                UNION
                SELECT CCM.CONTRACT_NUMBER CONTRACT_NUMBER, CCM.CUSTOMER_CODE,
                       DECODE (CCM.CONTRACT_BRANCH,
                              'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       Nationality as CUM_RESIDENTIAL_CODE, NID_CR_RID_NUMBER as CUM_CUSTOMER_REFERENCE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   and CONSTITUTION_ID <> 5
                    and CCM.PRODUCT_CODE NOT IN(1,3)
                   AND EXISTS (SELECT 1
                                 FROM CBO_COR_DIS_DISHONOR_DAILY
                                WHERE CR_FAC_ACC_NO = CCM.CONTRACT_NUMBER)
                                
                                )
    Loop
    Begin
    LV_R_CORPORATE_DIS_SUBJECT.SEG_IDEN := 'DCCM';
    LV_R_CORPORATE_DIS_SUBJECT.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_DIS_SUBJECT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CORPORATE_DIS_SUBJECT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    LV_R_CORPORATE_DIS_SUBJECT.SUB_IDEN_CD := I.CUSTOMER_CODE;
    LV_R_CORPORATE_DIS_SUBJECT.SUB_PREV_IDEN_CD := null;
    LV_R_CORPORATE_DIS_SUBJECT.SUB_ENT_TYP := '002';
    LV_R_CORPORATE_DIS_SUBJECT.IDEN_TYP := CBOPKG00003.DF_V_CBO_IDENTIFIER_TYPE(I.CUSTOMER_CODE, 'CORPORATE', 'DISHONOR');
    LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
    
--    If     LV_R_CORPORATE_DIS_SUBJECT.IDEN_TYP = '001' THEN
----    LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO := Cbopkg00003.Df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
--  
--    Elsif LV_R_CORPORATE_DIS_SUBJECT.IDEN_TYP = '002' THEN
--    LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
--    ELSE
--    ---   LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
--     ---commented and patched for NRID 24-NOV-2015
--    LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO := NVL( DF_V_GET_NRID_NUMBER(i.customer_code), i.CUM_CUSTOMER_REFERENCE);
--
--    End If;

    LV_R_CORPORATE_DIS_SUBJECT.PREV_IDEN_NO   := NULL;
    --LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO_EXP_DT := Cbopkg00003.DF_D_CBO_Subject_Expiry_date(I.CUSTOMER_CODE);  -- Comment by Sudeesh For DLV1035    
    
    LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO_EXP_DT :=CASE WHEN  CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) <= TRUNC(LV_D_PARAM_DATE) THEN 
                                                             ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) 
                                                        ELSE CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) END; 
    
    LV_R_CORPORATE_DIS_SUBJECT.SUB_NAME       := Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CORPORATE',I.CUSTOMER_CODE);
    LV_R_CORPORATE_DIS_SUBJECT.SUB_PREV_NAME  := NULL;
    
    LV_R_CORPORATE_DIS_SUBJECT.ADD_TYPE_1 := '001';
    LV_R_CORPORATE_DIS_SUBJECT.ADD_1_LN_1 := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_DIS_SUBJECT.ADD_1_LN_2 := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_1_LN_3 := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_1_CTY := Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_DIS_SUBJECT.ADD_1_POS_CD := LV_R_CORPORATE_DIS_SUBJECT.ADD_1_CTY;
    If LV_R_CORPORATE_DIS_SUBJECT.ADD_1_POS_CD IS NOT NULL THEN
       LV_R_CORPORATE_DIS_SUBJECT.ADD_1_CTRY := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
       LV_R_CORPORATE_DIS_SUBJECT.ADD_1_CTRY := NULL;
    End If;

    LV_R_CORPORATE_DIS_SUBJECT.ADD_1_TEL_NO := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_DIS_SUBJECT.ADD_TYPE_2 := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_2_LN_1 := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_2_LN_2 := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_2_LN_3 := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_2_CTY :=  NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_2_POS_CD := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_2_CTRY := NULL;
    LV_R_CORPORATE_DIS_SUBJECT.ADD_2_TEL_NO := NULL;

    LV_N_COMMIT := LV_N_COMMIT + 1;
    CBO_DP_AUTO_TRAN('CBO_COR_DIS_SUBJECT_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_COR_DIS_SUBJECT_DAILY
            (SEG_IDEN, DATA_PROV_ID, DATA_PRO_BR_ID, CR_FAC_ACC_NO,
             SUB_IDEN_CD, SUB_PREV_IDEN_CD, SUB_ENT_TYP, IDEN_TYP, IDEN_NO,
             PREV_IDEN_NO, IDEN_NO_EXP_DT, SUB_NAME, SUB_PREV_NAME, SUB_DT_REG,
             ADD_TYPE_1, ADD_1_LN_1, ADD_1_LN_2, ADD_1_LN_3, ADD_1_CTY, ADD_1_POS_CD,
             ADD_1_CTRY, ADD_1_TEL_NO, ADD_TYPE_2, ADD_2_LN_1, ADD_2_LN_2, ADD_2_LN_3,
             ADD_2_CTY, ADD_2_POS_CD, ADD_2_CTRY, ADD_2_TEL_NO)
     VALUES (LV_R_CORPORATE_DIS_SUBJECT.SEG_IDEN, LV_R_CORPORATE_DIS_SUBJECT.DATA_PROV_ID,
             LV_R_CORPORATE_DIS_SUBJECT.DATA_PRO_BR_ID, LV_R_CORPORATE_DIS_SUBJECT.CR_FAC_ACC_NO,
             LV_R_CORPORATE_DIS_SUBJECT.SUB_IDEN_CD, LV_R_CORPORATE_DIS_SUBJECT.SUB_PREV_IDEN_CD,
             LV_R_CORPORATE_DIS_SUBJECT.SUB_ENT_TYP, LV_R_CORPORATE_DIS_SUBJECT.IDEN_TYP,
             LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO, LV_R_CORPORATE_DIS_SUBJECT.PREV_IDEN_NO,
             LV_R_CORPORATE_DIS_SUBJECT.IDEN_NO_EXP_DT, LV_R_CORPORATE_DIS_SUBJECT.SUB_NAME,
             LV_R_CORPORATE_DIS_SUBJECT.SUB_PREV_NAME, LV_R_CORPORATE_DIS_SUBJECT.SUB_DT_REG,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_TYPE_1, LV_R_CORPORATE_DIS_SUBJECT.ADD_1_LN_1,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_1_LN_2, LV_R_CORPORATE_DIS_SUBJECT.ADD_1_LN_3,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_1_CTY, LV_R_CORPORATE_DIS_SUBJECT.ADD_1_POS_CD,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_1_CTRY, LV_R_CORPORATE_DIS_SUBJECT.ADD_1_TEL_NO,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_TYPE_2, LV_R_CORPORATE_DIS_SUBJECT.ADD_2_LN_1,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_2_LN_2, LV_R_CORPORATE_DIS_SUBJECT.ADD_2_LN_3,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_2_CTY, LV_R_CORPORATE_DIS_SUBJECT.ADD_2_POS_CD,
             LV_R_CORPORATE_DIS_SUBJECT.ADD_2_CTRY, LV_R_CORPORATE_DIS_SUBJECT.ADD_2_TEL_NO);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_COR_DIS_SUBJECT_DAILY_11'|| LV_R_CORPORATE_DIS_SUBJECT.CR_FAC_ACC_NO || '~' || Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(29,'C',LV_N_COMMIT);--CORPORATE DISHONOR FILE - SUBJECT
LV_N_COMMIT := 0;
Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(29,'E',LV_N_COMMIT);--CORPORATE DISHONOR FILE - SUBJECT
LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_COR_DIS_SUBJECT_DAILY');

End If;

LP_UPDATE_RUN_DATA(30,'S');--CORPORATE DISHONOR FILE - TRAILER
If PV_N_CNT > 0 THEN
    -- CORPORATE DISHONOR FILE - TRAILER
    Begin
    LV_R_CORPORATE_DIS_TRAILER.SEG_IDEN := 'TLTL';
    LV_R_CORPORATE_DIS_TRAILER.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_DIS_TRAILER.NO_CHQ_DISH := LV_N_CNT;
    
    CBO_DP_AUTO_TRAN('CBO_COR_DIS_TRAILER_DAILY-INSERT==>');
    INSERT INTO CBO_COR_DIS_TRAILER_DAILY
            (SEG_IDEN, DATA_PROV_ID, NO_CHQ_DISH)
   VALUES (LV_R_CORPORATE_DIS_TRAILER.SEG_IDEN,
              LV_R_CORPORATE_DIS_TRAILER.DATA_PROV_ID,
             LV_R_CORPORATE_DIS_TRAILER.NO_CHQ_DISH);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_COR_DIS_TRAILER_DAILY_12'||  LV_R_CORPORATE_DIS_TRAILER.SEG_IDEN || '_' || Sqlerrm);
    End;
LP_UPDATE_RUN_DATA(30,'E',1);--CORPORATE DISHONOR FILE - TRAILER
END IF;
End DP_CBO_CORPORATE_DISHONOR;


Procedure Dp_Cbo_Corporate_Litigation(IV_D_ASON_DATE DATE) IS
-- CONSUMER INPUT FILE  CBO_CON_LIT_HEADER_DAILY
       LV_D_PARAM_DATE DATE := IV_D_ASON_DATE;
       LV_R_CORPORATE_LIT_HEADER CBO_COR_LIT_HEADER_DAILY%ROWTYPE;
       LV_R_CORPORATE_LIT_LITIGATION      CBO_COR_LIT_LITIGATION_DAILY%Rowtype;
       LV_R_CORPORATE_LIT_SUBJECT         CBO_COR_LIT_SUBJECT_DAILY%ROWTYPE;
       LV_R_CORPORATE_LIT_TRAILER CBO_COR_LIT_TRAILER_DAILY%Rowtype;
       LV_N_CNT                NUMBER:=0;
       LV_N_COMMIT NUMBER := 0;
Begin
DELETE FROM CBO_COR_LIT_HEADER_DAILY ;
DELETE FROM CBO_COR_LIT_LITIGATION_DAILY;
DELETE FROM CBO_COR_LIT_SUBJECT_DAILY ;
DELETE FROM CBO_COR_LIT_TRAILER_DAILY ;

--Syadpkg00153.DP_SET_REFERENCE_TYPE('ACCOUNT');
LP_UPDATE_RUN_DATA(32,'S');--CONSUMER LITIGATION FILE - HEADER
If PV_N_CNT > 0 THEN
    Begin
    LV_R_CORPORATE_LIT_HEADER.SEG_IDEN       := 'HDHD';
    LV_R_CORPORATE_LIT_HEADER.DATA_PROV_ID   := 'FL640000';
    LV_R_CORPORATE_LIT_HEADER.REP_DATE       := LV_D_PARAM_DATE;
    LV_R_CORPORATE_LIT_HEADER.REP_TIME       := TRUNC(LV_D_PARAM_DATE) - 1/(24*60*60);
    LV_R_CORPORATE_LIT_HEADER.DT_PRE_IN_FILE := TRUNC(SYSDATE);
    LV_R_CORPORATE_LIT_HEADER.NAT_DATA       := '006';
    LV_R_CORPORATE_LIT_HEADER.IFF_VERSION    := 6;     --Df_V_Const_Ref_Dir('CON_LITIGATION_VERSION_DAILY');
    CBO_DP_AUTO_TRAN('CBO_COR_LIT_HEADER_DAILY-INSERT==>');
    INSERT INTO CBO_COR_LIT_HEADER_DAILY
            (SEG_IDEN, DATA_PROV_ID, REP_DATE,
             REP_TIME, DT_PRE_IN_FILE, NAT_DATA,
             IFF_VERSION)
     VALUES (LV_R_CORPORATE_LIT_HEADER.SEG_IDEN, LV_R_CORPORATE_LIT_HEADER.DATA_PROV_ID,
              LV_R_CORPORATE_LIT_HEADER.REP_DATE, LV_R_CORPORATE_LIT_HEADER.REP_TIME,
             LV_R_CORPORATE_LIT_HEADER.DT_PRE_IN_FILE, LV_R_CORPORATE_LIT_HEADER.NAT_DATA,
              LV_R_CORPORATE_LIT_HEADER.IFF_VERSION);
    Exception
        when OTHERS then
             Dp_Set_Error('CBO_COR_LIT_HEADER_DAILY_1' || LV_R_CORPORATE_LIT_HEADER.SEG_IDEN || '_' || Sqlerrm);
    End;
    LP_UPDATE_RUN_DATA(32,'E',1);--CONSUMER LITIGATION FILE - HEADER
End If;

LP_UPDATE_RUN_DATA(33,'S');-- CONSUMER LITIGATION FILE - LITIGATION

If PV_N_CNT > 0 THEN
      FOR I IN ( SELECT CONTRACT_NUMBER,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       APPLICATION_NUMBER,
                       DECODE (CCM.PRODUCT_CODE,
                               1, '009',
                               3, '004',
                               4, '016',
                               5, '016',
                               '020'
                              ) PRODUCT_CODE,
                       TXN_ID
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, 
                  s3g_org_custmaster SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND SCM.CONSTITUTION_ID = 5  --Individual
                   AND EXISTS (
                          SELECT 1
                            FROM s3g_lr_casemaster CSMST
                           WHERE CSMST.PANUM = CCM.CONTRACT_NUMBER
-- Comment Removed By Sridhar G For MFC-428 on 24-11-2010 for Checking Transaction Table
--Commented by babu for call DLV-447 on 03-jan-2011
            ---COMMENTED  ON 05-JAN-2016 CNL DATA
                            -- AND EXISTS (
                              --      SELECT 1
                                --      FROM SA_TRANSACTION_DETAILS C
                                  --   WHERE C.TD_TXN_ID = B.TXN_ID
                                    --   AND TRUNC (TD_TXN_DATE) = TRUNC (LV_D_PARAM_DATE))
                                      ))

     

    Loop
    Begin
    LV_N_CNT := LV_N_CNT + 1;
    LV_R_CORPORATE_LIT_LITIGATION.SEG_IDEN := 'CMLS';
    LV_R_CORPORATE_LIT_LITIGATION.DATA_PROV_ID:= 'FL640000';
    LV_R_CORPORATE_LIT_LITIGATION.PREV_DATA_PROV_ID := NULL;
    LV_R_CORPORATE_LIT_LITIGATION.DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    -->> Patched by Mathialagan P for call MFC-393 on 19-AUG-2010 <<--
    --LV_R_CORPORATE_LIT_LITIGATION.PREV_DATA_PRO_BR_ID:= I.CONTRACT_BRANCH;
    LV_R_CORPORATE_LIT_LITIGATION.PREV_DATA_PRO_BR_ID:=NULL;
    -->> Pathch End By Mathialagan P <<--
    LV_R_CORPORATE_LIT_LITIGATION.CR_FAC_TYPE:= I.PRODUCT_CODE;
    LV_R_CORPORATE_LIT_LITIGATION.LIA_IND:= '001';
    LV_R_CORPORATE_LIT_LITIGATION.CR_FAC_ACC_NO:= I.CONTRACT_NUMBER;

    If SUBSTR(trim(i.contract_number),LENGTH(trim(i.contract_number)))='R' THEN
    LV_R_CORPORATE_LIT_LITIGATION.PREV_CR_FAC_ACC_NO := Cbopkg00003.DF_V_CBO_RESCHEDULE_CONTRACT(I.APPLICATION_NUMBER);
    ELSE
    LV_R_CORPORATE_LIT_LITIGATION.PREV_CR_FAC_ACC_NO:= NULL;
    End If;

    LV_R_CORPORATE_LIT_LITIGATION.INFOR_UPDATE_ON := Cbopkg00003.DF_D_CBO_LIT_TIME(I.CONTRACT_NUMBER, LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.TIME_INFOR_UPDATE:= Cbopkg00003.DF_D_CBO_LIT_TIME(I.CONTRACT_NUMBER, LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.SUIT_REF_NO:= Cbopkg00003.DF_V_CBO_SUIT_REF_NUMBER(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.SIUT_FILED_STATUS := Cbopkg00003.DF_V_CBO_SUIT_STATUS(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.SUIT_AMT := Cbopkg00003.DF_N_CBO_SUIT_AMT(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.LTG_CAUSE := Cbopkg00003.DF_V_CBO_LIT_CAUSE(I.CONTRACT_NUMBER);
    LV_R_CORPORATE_LIT_LITIGATION.COURT := Cbopkg00003.DF_V_CBO_COURT(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.COURT_LOC := Cbopkg00003.DF_V_CBO_COURT_LOCATION(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.DT_SUIT_FILED := Cbopkg00003.DF_D_CBO_GET_DATE_SUIT_FILED(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.DT_ADJ := Cbopkg00003.DF_D_CBO_DATE_ADJUDICATED(I.CONTRACT_NUMBER,LV_D_PARAM_DATE);
    LV_R_CORPORATE_LIT_LITIGATION.LEGAL_ACT_ORG := '001';
    LV_R_CORPORATE_LIT_LITIGATION.TRANS_TYPE_CD := '001';
    LV_R_CORPORATE_LIT_LITIGATION.COMP_STATUS := NULL;
    LV_R_CORPORATE_LIT_LITIGATION.COMP_INTI_NO := NULL;
    LV_R_CORPORATE_LIT_LITIGATION.SPL_CMNTS1 := NULL;
    LV_R_CORPORATE_LIT_LITIGATION.SPL_CMNTS2 := NULL;
    LV_N_COMMIT := LV_N_COMMIT + 1;

   CBO_DP_AUTO_TRAN('CBO_COR_LIT_LITIGATION_DAILY-INSERT==>'||I.contract_number);
    INSERT INTO CBO_COR_LIT_LITIGATION_DAILY
            (SEG_IDEN, DATA_PROV_ID, PREV_DATA_PROV_ID, DATA_PRO_BR_ID,
             PREV_DATA_PRO_BR_ID, CR_FAC_TYPE, LIA_IND, CR_FAC_ACC_NO,
             PREV_CR_FAC_ACC_NO, INFOR_UPDATE_ON, TIME_INFOR_UPDATE,
             SUIT_REF_NO, SIUT_FILED_STATUS, SUIT_AMT, LTG_CAUSE, COURT,
             COURT_LOC, DT_SUIT_FILED, DT_ADJ, LEGAL_ACT_ORG, TRANS_TYPE_CD,
             COMP_STATUS, COMP_INTI_NO, SPL_CMNTS1, SPL_CMNTS2)
     VALUES (LV_R_CORPORATE_LIT_LITIGATION.SEG_IDEN, LV_R_CORPORATE_LIT_LITIGATION.DATA_PROV_ID,
              LV_R_CORPORATE_LIT_LITIGATION.PREV_DATA_PROV_ID, LV_R_CORPORATE_LIT_LITIGATION.DATA_PRO_BR_ID,
             LV_R_CORPORATE_LIT_LITIGATION.PREV_DATA_PRO_BR_ID, LV_R_CORPORATE_LIT_LITIGATION.CR_FAC_TYPE,
             LV_R_CORPORATE_LIT_LITIGATION.LIA_IND, LV_R_CORPORATE_LIT_LITIGATION.CR_FAC_ACC_NO,
             LV_R_CORPORATE_LIT_LITIGATION.PREV_CR_FAC_ACC_NO, LV_R_CORPORATE_LIT_LITIGATION.INFOR_UPDATE_ON,
             LV_R_CORPORATE_LIT_LITIGATION.TIME_INFOR_UPDATE, LV_R_CORPORATE_LIT_LITIGATION.SUIT_REF_NO,
             LV_R_CORPORATE_LIT_LITIGATION.SIUT_FILED_STATUS, LV_R_CORPORATE_LIT_LITIGATION.SUIT_AMT,
             LV_R_CORPORATE_LIT_LITIGATION.LTG_CAUSE, LV_R_CORPORATE_LIT_LITIGATION.COURT,
             LV_R_CORPORATE_LIT_LITIGATION.COURT_LOC, LV_R_CORPORATE_LIT_LITIGATION.DT_SUIT_FILED,
             LV_R_CORPORATE_LIT_LITIGATION.DT_ADJ, LV_R_CORPORATE_LIT_LITIGATION.LEGAL_ACT_ORG,
             LV_R_CORPORATE_LIT_LITIGATION.TRANS_TYPE_CD, LV_R_CORPORATE_LIT_LITIGATION.COMP_STATUS,
             LV_R_CORPORATE_LIT_LITIGATION.COMP_INTI_NO, LV_R_CORPORATE_LIT_LITIGATION.SPL_CMNTS1,
             LV_R_CORPORATE_LIT_LITIGATION.SPL_CMNTS2);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_COR_LIT_LITIGATION_DAILY_2' || LV_R_CORPORATE_LIT_LITIGATION.CR_FAC_ACC_NO || '_' || Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(33,'C',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - LITIGATION
LV_N_COMMIT := 0;
Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
End Loop;
LP_UPDATE_RUN_DATA(33,'E',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - LITIGATION
LV_N_COMMIT := 0;
  Cbopkg00003.Dp_Replace_Disall_Chars('CBO_COR_LIT_LITIGATION_DAILY');

End If;

LP_UPDATE_RUN_DATA(34,'S');-- CONSUMER LITIGATION FILE - SUBJECT
If PV_N_CNT > 0 THEN
    -- CONSUMER LITIGATION FILE - SUBJECT
     FOR I IN ( SELECT CCM.CONTRACT_NUMBER, CCM.CUSTOMER_CODE,
                       DECODE (CCM.CONTRACT_BRANCH,
                               'CO|HO', 'FL640001',
                               'CO|SL', 'FL640002',
                               'CO|SH', 'FL640003',
                               'CO|BK', 'FL640004',
                               'CO|IB', 'FL640005',
                               'CO|SU', 'FL640006',
                               'CO|NZ', 'FL640007'
                              ) CONTRACT_BRANCH,
                       SCM.NATIONALITY AS CUM_RESIDENTIAL_CODE, SCM.NID_CR_RID_NUMBER AS CUM_CUSTOMER_REFERENCE
                  FROM CBO_CONTRACT_MASTER_DAILY CCM, 
                  S3G_ORG_CUSTMASTER SCM
                 WHERE SCM.CUSTOMER_CODE = CCM.CUSTOMER_CODE
                   AND SCM.CONSTITUTION_ID = 5    --Individual
                   AND EXISTS (SELECT 1
                                 FROM CBO_COR_LIT_LITIGATION_DAILY B
                                WHERE B.CR_FAC_ACC_NO = CCM.CONTRACT_NUMBER))
    Loop
    begin
    LV_R_CORPORATE_LIT_SUBJECT.SEG_IDEN := 'CMCS';
    LV_R_CORPORATE_LIT_SUBJECT.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_LIT_SUBJECT.DATA_PRO_BR_ID := I.CONTRACT_BRANCH;
    LV_R_CORPORATE_LIT_SUBJECT.CR_FAC_ACC_NO := I.CONTRACT_NUMBER;
    LV_R_CORPORATE_LIT_SUBJECT.SUB_IDEN_CD := I.CUSTOMER_CODE;
    LV_R_CORPORATE_LIT_SUBJECT.SUB_PREV_IDEN_CD := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.IDEN_TYP := CBOPKG00003.DF_V_CBO_IDENTIFIER_TYPE(I.CUSTOMER_CODE, 'CONSUMER', 'LITIGATION');
     LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
--    If LV_R_CORPORATE_LIT_SUBJECT.IDEN_TYP = '001' THEN
--         LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO := Cbopkg00003.Df_V_Cbo_Nid(I.CUM_CUSTOMER_REFERENCE);
--    -->Elsif Added By Babu I for call MFC-393 On 23-AUG-2010 <<--
--    Elsif LV_R_CORPORATE_LIT_SUBJECT.IDEN_TYP = '002' THEN
--        LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO := Cbopkg00003.DF_V_CBO_LABOUR_CARD(I.CUSTOMER_CODE);
--    ELSE
--               --- LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO := I.CUM_CUSTOMER_REFERENCE;
--              ---commented and patched for NRID 24-NOV-2015
--    LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO := NVL( DF_V_GET_NRID_NUMBER(i.customer_code), i.CUM_CUSTOMER_REFERENCE);
--
--    End If;

    LV_R_CORPORATE_LIT_SUBJECT.PREV_IDEN_NO := NULL;
    -- LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO_EXP_DT := Cbopkg00003.DF_D_CBO_Subject_Expiry_date(I.CUSTOMER_CODE);  -- Comment by sudeesh for  DLV1035
     LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO_EXP_DT :=   CASE WHEN  CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) <= TRUNC(LV_D_PARAM_DATE) THEN 
                                                             ADD_MONTHS(LAST_DAY(TRUNC(LV_D_PARAM_DATE)),6) 
                                                        ELSE CBOPKG00003.DF_D_CBO_Subject_Expiry_date (I.CUSTOMER_CODE) END;  -- Code added by Sudeesh From DLV1035
    LV_R_CORPORATE_LIT_SUBJECT.SUB_NAME := Cbopkg00003.DF_V_CBO_GET_CUSTOMER_NAME('CONSUMER',I.CUSTOMER_CODE);
    LV_R_CORPORATE_LIT_SUBJECT.SUB_PREV_NAME := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_TYPE_1 := '001';
    LV_R_CORPORATE_LIT_SUBJECT.ADD_1_LN_1 := Cbopkg00003.DF_V_CBO_ADDRESS_LINE_1(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_LIT_SUBJECT.ADD_1_LN_2 := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_1_LN_3 := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_1_CTY :=  Cbopkg00003.DF_V_CBO_ADDRESS_POSTAL_CODE(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_LIT_SUBJECT.ADD_1_POS_CD := LV_R_CORPORATE_LIT_SUBJECT.ADD_1_CTY;
    If LV_R_CORPORATE_LIT_SUBJECT.ADD_1_POS_CD IS NOT NULL THEN
       LV_R_CORPORATE_LIT_SUBJECT.ADD_1_CTRY := Cbopkg00003.DF_V_CBO_GET_CUST_NATIONALITY(I.CUM_RESIDENTIAL_CODE);
    ELSE
       LV_R_CORPORATE_LIT_SUBJECT.ADD_1_CTRY := NULL;
    End If;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_1_TEL_NO := Cbopkg00003.DF_V_CBO_ADDRESS_TEL_NO(1,I.CUSTOMER_CODE);
    LV_R_CORPORATE_LIT_SUBJECT.ADD_TYPE_2 := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_2_LN_1 := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_2_LN_2 := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_2_LN_3 := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_2_CTY := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_2_POS_CD := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_2_CTRY := NULL;
    LV_R_CORPORATE_LIT_SUBJECT.ADD_2_TEL_NO := NULL;

    LV_N_COMMIT := LV_N_COMMIT + 1;
    
CBO_DP_AUTO_TRAN('CBO_COR_LIT_SUBJECT_DAILY-INSERT==>'||I.contract_number);
   INSERT INTO CBO_COR_LIT_SUBJECT_DAILY
            (SEG_IDEN, DATA_PROV_ID,
             DATA_PRO_BR_ID, CR_FAC_ACC_NO,
             SUB_IDEN_CD,SUB_PREV_IDEN_CD,
             SUB_ENT_TYP, IDEN_TYP,
             IDEN_NO, PREV_IDEN_NO,
             IDEN_NO_EXP_DT, SUB_NAME,
             SUB_PREV_NAME, SUB_DT_REG,
             ADD_TYPE_1, ADD_1_LN_1,
             ADD_1_LN_2, ADD_1_LN_3,
             ADD_1_CTY, ADD_1_POS_CD,
             ADD_1_CTRY, ADD_1_TEL_NO,
             ADD_TYPE_2, ADD_2_LN_1,
             ADD_2_LN_2, ADD_2_LN_3,
             ADD_2_CTY, ADD_2_POS_CD,
             ADD_2_CTRY, ADD_2_TEL_NO)
     VALUES (LV_R_CORPORATE_LIT_SUBJECT.SEG_IDEN,LV_R_CORPORATE_LIT_SUBJECT.DATA_PROV_ID,
              LV_R_CORPORATE_LIT_SUBJECT.DATA_PRO_BR_ID,LV_R_CORPORATE_LIT_SUBJECT.CR_FAC_ACC_NO,
             LV_R_CORPORATE_LIT_SUBJECT.SUB_IDEN_CD,LV_R_CORPORATE_LIT_SUBJECT.SUB_PREV_IDEN_CD,
             LV_R_CORPORATE_LIT_SUBJECT.SUB_ENT_TYP,LV_R_CORPORATE_LIT_SUBJECT.IDEN_TYP,
             LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO,LV_R_CORPORATE_LIT_SUBJECT.PREV_IDEN_NO,
             LV_R_CORPORATE_LIT_SUBJECT.IDEN_NO_EXP_DT,LV_R_CORPORATE_LIT_SUBJECT.SUB_NAME,
             LV_R_CORPORATE_LIT_SUBJECT.SUB_PREV_NAME,LV_R_CORPORATE_LIT_SUBJECT.SUB_DT_REG,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_TYPE_1,LV_R_CORPORATE_LIT_SUBJECT.ADD_1_LN_1,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_1_LN_2,LV_R_CORPORATE_LIT_SUBJECT.ADD_1_LN_3,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_1_CTY,LV_R_CORPORATE_LIT_SUBJECT.ADD_1_POS_CD,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_1_CTRY,LV_R_CORPORATE_LIT_SUBJECT.ADD_1_TEL_NO,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_TYPE_2,LV_R_CORPORATE_LIT_SUBJECT.ADD_2_LN_1,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_2_LN_2,LV_R_CORPORATE_LIT_SUBJECT.ADD_2_LN_3,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_2_CTY,LV_R_CORPORATE_LIT_SUBJECT.ADD_2_POS_CD,
             LV_R_CORPORATE_LIT_SUBJECT.ADD_2_CTRY,LV_R_CORPORATE_LIT_SUBJECT.ADD_2_TEL_NO);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_LIT_SUBJECT_DAILY_7_' || LV_R_CORPORATE_LIT_SUBJECT.CR_FAC_ACC_NO || '_' || Sqlerrm);
    End;

If LV_N_COMMIT = PV_N_COMMIT_FREQUENCY THEN
LP_UPDATE_RUN_DATA(34,'C',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - SUBJECT
LV_N_COMMIT := 0;
Exit WHEN PV_V_CONTINUE_PROCESS = 'u';
End If;
end LOOP;
LP_UPDATE_RUN_DATA(34,'E',LV_N_COMMIT);-- CONSUMER LITIGATION FILE - SUBJECT
LV_N_COMMIT := 0;
Cbopkg00003.Dp_Replace_Disall_Chars('CBO_COR_LIT_SUBJECT_DAILY');

End If;

LP_UPDATE_RUN_DATA(35,'S');-- CONSUMER LITIGATION FILE - TRAILER
If PV_N_CNT > 0 THEN
    -- CONSUMER LITIGATION FILE - TRAILER
    Begin
    LV_R_CORPORATE_LIT_TRAILER.SEG_IDEN := 'TLTL';
    LV_R_CORPORATE_LIT_TRAILER.DATA_PROV_ID := 'FL640000';
    LV_R_CORPORATE_LIT_TRAILER.NO_LITI := LV_N_CNT;
    
    
CBO_DP_AUTO_TRAN('CBO_COR_LIT_TRAILER_DAILY-INSERT==>');
    INSERT INTO CBO_COR_LIT_TRAILER_DAILY
            (SEG_IDEN, DATA_PROV_ID, NO_LITI)
     VALUES (LV_R_CORPORATE_LIT_TRAILER.SEG_IDEN, LV_R_CORPORATE_LIT_TRAILER.DATA_PROV_ID, LV_R_CORPORATE_LIT_TRAILER.NO_LITI);
    Exception
        WHEN OTHERS THEN
             Dp_Set_Error('CBO_CON_LIT_TRAILER_DAILY_4_' || LV_R_CORPORATE_LIT_TRAILER.SEG_IDEN || '_' || Sqlerrm);
    End;
    LP_UPDATE_RUN_DATA(35,'E',1);-- CONSUMER LITIGATION FILE - TRAILER
End If;

END Dp_Cbo_Corporate_Litigation;


End CBOPKG00003;