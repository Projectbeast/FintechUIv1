/* ===========================================================
 * JFreeChart : a free chart library for the Java(tm) platform
 * ===========================================================
 *
 * (C) Copyright 2000-2004, by Object Refinery Limited and Contributors.
 *
 * Project Info:  http://www.jfree.org/jfreechart/index.html
 *
 * This library is free software; you can redistribute it and/or modify it under the terms
 * of the GNU Lesser General Public License as published by the Free Software Foundation;
 * either version 2.1 of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this
 * library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330,
 * Boston, MA 02111-1307, USA.
 *
 * [Java is a trademark or registered trademark of Sun Microsystems, Inc. 
 * in the United States and other countries.]
 *
 * ------------------
 * AreaChartDemo.java
 * ------------------
 * (C) Copyright 2002-2004, by Object Refinery Limited and Contributors.
 *
 * Original Author:  David Gilbert (for Object Refinery Limited);
 * Contributor(s):   -;
 *
 * $Id: AreaChartDemo.java,v 1.34 2004/05/26 13:04:14 mungady Exp $
 *
 * Changes
 * -------
 * 11-Jun-2002 : Version 1 (DG);
 * 25-Jun-2002 : Removed unnecessary imports (DG);
 * 10-Oct-2002 : Renamed AreaChartForCategoryDataDemo --> AreaChartDemo (DG);
 * 05-Nov-2003 : Added category label position (DG);
 *
 * Converted to C# by Kazuya Ujihara
 */

using System;
using System.Collections.Generic;
using System.Text;

using org.jfree.chart;
using org.jfree.chart.axis;
using org.jfree.chart.plot;
using org.jfree.chart.title;
using org.jfree.data.category;
using org.jfree.data.general;
using org.jfree.util;
using org.jfree.ui;

using System.Drawing;

namespace Ujihara.Demo
{
    public class AreaChartDemo1 : ChartCreator
    {
        static double[][] data = new double[][] {
            new double[] {1.0, 4.0, 3.0, 5.0, 5.0, 7.0, 7.0, 8.0},
            new double[] {5.0, 7.0, 6.0, 8.0, 4.0, 4.0, 2.0, 1.0},
            new double[] {4.0, 3.0, 2.0, 3.0, 6.0, 3.0, 4.0, 3.0}
        };

        CategoryDataset dataset = DatasetUtilities.createCategoryDataset(
            "Series ", "Type ", data
        );

        public override JFreeChart CreateChart()
        {
            return CreateChart(dataset);
        }

        // ****************************************************************************
        // * JFREECHART DEVELOPER GUIDE                                               *
        // * The JFreeChart Developer Guide, written by David Gilbert, is available   *
        // * to purchase from Object Refinery Limited:                                *
        // *                                                                          *
        // * http://www.object-refinery.com/jfreechart/guide.html                     *
        // *                                                                          *
        // * Sales are used to provide funding for the JFreeChart project - please    * 
        // * support us so that we can continue developing free software.             *
        // ****************************************************************************

        /**
         * Creates a chart.
         * 
         * @param dataset  the dataset.
         * 
         * @return The chart.
         */
        private JFreeChart CreateChart(CategoryDataset dataset)
        {
            JFreeChart chart = ChartFactory.createAreaChart(
                "Area Chart",             // chart title
                "Category",               // domain axis label
                "Value",                  // range axis label
                dataset,                  // data
                PlotOrientation.VERTICAL, // orientation
                true,                     // include legend
                true,                     // tooltips
                false                     // urls
            );

            // NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...

            // set the background color for the chart...
            //final StandardLegend legend = (StandardLegend)chart.getLegend();
            //legend.setAnchor(StandardLegend.SOUTH);

            chart.setBackgroundPaint(Color.White);
            TextTitle subtitle = new TextTitle("An area chart demonstration.  We use this "
                + "subtitle as an example of what happens when you get a really long title or "
                + "subtitle.");
            subtitle.setFont(new Font(FontFamily.GenericSansSerif, 12, FontStyle.Regular));
            subtitle.setPosition(RectangleEdge.TOP);
            //subtitle.setSpacer(new Spacer(Spacer.RELATIVE, 0.05, 0.05, 0.05, 0.05));
            subtitle.setVerticalAlignment(VerticalAlignment.BOTTOM);
            chart.addSubtitle(subtitle);

            CategoryPlot plot = chart.getCategoryPlot();
            plot.setForegroundAlpha(0.5f);

            //plot.setAxisOffset(new Spacer(Spacer.ABSOLUTE, 5.0, 5.0, 5.0, 5.0));
            plot.setBackgroundPaint(Color.LightGray);
            plot.setDomainGridlinesVisible(true);
            plot.setDomainGridlinePaint(Color.White);
            plot.setRangeGridlinesVisible(true);
            plot.setRangeGridlinePaint(Color.White);

            CategoryAxis domainAxis = plot.getDomainAxis();
            domainAxis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);
            domainAxis.setLowerMargin(0.0);
            domainAxis.setUpperMargin(0.0);
            domainAxis.addCategoryLabelToolTip("Type 1", "The first type.");
            domainAxis.addCategoryLabelToolTip("Type 2", "The second type.");
            domainAxis.addCategoryLabelToolTip("Type 3", "The third type.");

            NumberAxis rangeAxis = (NumberAxis)plot.getRangeAxis();
            rangeAxis.setStandardTickUnits(NumberAxis.createIntegerTickUnits());
            rangeAxis.setLabelAngle(0 * Math.PI / 2.0);
            // OPTIONAL CUSTOMISATION COMPLETED.

            return chart;
        }
    }
}